Index: src/main/webapp/statics/css/public.css
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/webapp/statics/css/public.css	(date 1578576616937)
+++ src/main/webapp/statics/css/public.css	(date 1578576616937)
@@ -0,0 +1,284 @@
+*{
+    margin: 0;
+    padding: 0;
+}
+body{
+    font-size: 12px;
+    background: #4287c2;
+}
+.clear:after{
+    content: '';
+    display: block;
+    clear: both;
+}
+a{
+    text-decoration: none;
+}
+li{
+    list-style: none;
+}
+
+/*公共样式，头部*/
+.publicHeader{
+    height: 48px;
+    line-height: 48px;
+    font-size: 14px;
+    background: linear-gradient(to bottom,#60acf0,#64a5df,#62a0dd,#5994d6,#4f8ace,#4880ca);
+    background:-webkit-linear-gradient(to bottom,#60acf0,#64a5df,#62a0dd,#5994d6,#4f8ace,#4880ca);
+    background:-moz-linear-gradient(to bottom,#60acf0,#64a5df,#62a0dd,#5994d6,#4f8ace,#4880ca);
+    background:-ms-linear-gradient(to bottom,#60acf0,#64a5df,#62a0dd,#5994d6,#4f8ace,#4880ca);
+}
+.publicHeader h1{
+    float: left;
+    color: #fff;
+    font-size: 22px;
+    padding-left:80px;
+    text-shadow: 2px 1px #000;
+    background: url("../images/buy.png") 30px center no-repeat;
+
+}
+.publicHeaderR{
+    float: right;
+    color: #fff;
+    margin-right: 50px;
+
+}
+.publicHeaderR p{
+    display: inline-block;
+    font-weight: bold;
+}
+.publicHeaderR a{
+    width: 50px;
+    height: 28px;
+    display: inline-block;
+    border: 1px solid #679e43;
+    background: linear-gradient(to bottom,#baf076,#a2d866,#9cd055,#8dc838,#8bc93a);
+    line-height: 28px;
+    text-align: center;
+    border-radius: 4px;
+    font-weight: bold;
+    color: #fff;
+
+}
+.publicHeaderR a:hover,.publicHeaderR a:active{
+    border: 1px solid #192b02;
+    border-radius: 4px;
+    font-weight: bold;
+    background: linear-gradient(to bottom,#70b21c,#5c9613,#47740e,#3b6209,#2b4906);
+}
+/*时间*/
+.publicTime{
+    height: 28px;
+    line-height: 28px;
+    font-size: 12px;
+    background: linear-gradient(to bottom,#f5f9f8,#eef2fb,#e2ecf5,#e2ecf5,#e0edf6);
+    padding-left: 20px;
+    color: #808589;
+}
+#time{
+    float: left;
+    background: url("../images/time.png") 0 center no-repeat;
+    padding-left: 26px;
+}
+.publicTime a{
+    float: right;
+    margin-right: 50px;
+    color: #626367;
+}
+
+/*公共部分主体内容*/
+.publicMian{
+    border-top: 1px solid #c2ccd5;
+    display: flex;  /*变为弹性盒模型*/
+    display: -webkit-flex;
+    background: #fff;
+}
+/*左边*/
+.left{
+    width: 168px;
+    background: url("../images/leftBg.png") 0 0 repeat-y;
+    margin-right: 10px;
+    /*height: 520px;*/
+    min-height: 520px;
+
+}
+.leftH2{
+    width: 140px;
+    height: 30px;
+    border-radius: 4px;
+    line-height: 30px;
+    text-align: center;
+    color: #fff;
+    background: #60b3e7;
+    margin: 10px  auto;
+    box-shadow:4px 4px rgba(212,212,212,0.7);
+}
+.leftH2 span{
+    width: 10px;
+    height: 10px;
+    display: inline-block;
+    background: radial-gradient(#70c2f4,#3a8dc1, #035384, #4696c7,#83d1f5);
+    border-radius: 50%;
+}
+.span1{
+    margin-right: 10px;
+}
+.span2{
+    margin-left: 12px;
+}
+
+.list{
+    margin: 0 20px;
+    font-weight: bold;
+}
+.list li{
+    height: 40px;
+    line-height: 40px;
+    border-bottom: 1px solid rgba(212,212,212,0.5) ;
+}
+.list li:nth-child(1){
+    background: url("../images/zd.png") 0  center no-repeat;
+}
+.list li:nth-child(2){
+    background: url("../images/gys.png") 0  center no-repeat;
+}
+.list li:nth-child(3){
+    background: url("../images/yh.png") 0  center no-repeat;
+}
+.list li:nth-child(4){
+    background: url("../images/mm.png") 0  center no-repeat;
+}
+.list li:nth-child(5){
+    background: url("../images/tc.png") 0  center no-repeat;
+}
+.list li:hover{
+    background-color: #acd5f5;
+    border-radius: 4px;
+}
+.list li:active, #active{
+    background-color: #92c609;
+    border-radius: 4px;
+}
+.list a{
+    color: #0042a8;
+    display: inline-block;
+    padding-left: 40px;
+    width: 90%;
+}
+
+
+/*右边*/
+.right{
+    width: 85%;
+}
+/*右边所在位置栏*/
+.location{
+    height: 30px;
+    line-height: 30px;
+    border: 1px solid #e6eaf6;
+    border-radius: 8px;
+    background: linear-gradient(to bottom, #fefefe,#ffffff,#f6fafd);
+    color: #4a4a4a;
+    padding-left: 30px;
+}
+.location strong{
+    background: url("../images/home.png") 0 center no-repeat;
+    display: inline-block;
+    padding-left: 30px;
+}
+.location span{
+    color: #2179a9;
+    font-weight:  bold;
+}
+/*搜索信息栏*/
+.search{
+    height:50px;
+    line-height:50px;
+    background: #f6fafd;
+    padding-left: 24px;
+    color: #000;
+}
+.search input[type='text']{
+    width: 200px;
+    height: 30px;
+    outline: none;
+    padding-left: 10px;
+    border: 1px solid #8ab2d5;
+    border-radius: 4px;
+}
+.search input[type='button']{
+    margin-left: 20px;
+    width: 100px;
+    padding: 0 20px;
+    height: 30px;
+    border: 1px solid #7ba92c;
+    border-radius: 4px;
+    color: #fff;
+    font-weight: bold;
+    background:#87c212 url("../images/search.png") 10px center no-repeat;
+}
+.search input[type='button']:focus{
+    outline: none;
+    background-color: #5d8410;
+}
+.search a{
+    width: 80px;
+    padding-left:40px;
+    float: right;
+    margin: 10px 60px;
+    height: 30px;
+    line-height: 30px;
+    border: 1px solid #0c89de;
+    border-radius: 4px;
+    color: #fff;
+    font-weight: bold;
+    background:#47acf1 url("../images/tianjia.png") 10px center no-repeat;
+    display: inline-block;
+}
+.search a:hover,.search a:active{
+    background-color: #0778c5;
+}
+.search span{
+    margin-left: 10px;
+}
+.search select{
+    margin: 10px;
+    width: 100px;
+    height: 30px;
+    border-radius: 4px;
+    border: 1px solid #0c89de;
+    outline: none;
+}
+
+/*底部*/
+.footer{
+    width: 100%;
+    line-height: 40px;
+    text-align: center;
+    color: #fff;
+}
+
+#searchbutton{
+    margin-left: 20px;
+    width: 100px;
+    padding: 0 20px;
+    height: 30px;
+    border: 1px solid #7ba92c;
+    border-radius: 4px;
+    color: #fff;
+    font-weight: bold;
+    background:#87c212 url("../images/search.png") 10px center no-repeat;
+}
+#searchbutton:focus{
+    outline: none;
+    background-color: #5d8410;
+}
+
+
+
+
+
+
+
+
+
Index: src/main/java/com/lpc/controller/MainController.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/java/com/lpc/controller/MainController.java	(date 1594540122688)
+++ src/main/java/com/lpc/controller/MainController.java	(date 1594540122688)
@@ -0,0 +1,64 @@
+package com.lpc.controller;
+
+import com.lpc.pojo.SmbmsUser;
+import com.lpc.service.SmbmsUserService;
+import org.springframework.beans.factory.annotation.Autowired;
+import org.springframework.stereotype.Controller;
+import org.springframework.web.bind.annotation.GetMapping;
+import org.springframework.web.bind.annotation.PostMapping;
+
+import javax.servlet.http.HttpServletRequest;
+import javax.servlet.http.HttpSession;
+
+/**
+ * @User lpc/李金超
+ * @ClassName LoginController  类名
+ * @Author AUSUA  作者
+ * @Date 2020/7/10 18:20  时间
+ * @Version 1.0 版本
+ */
+@Controller
+public class MainController {
+
+    @Autowired
+    private SmbmsUserService smbmsUserService;
+
+    @Autowired
+    private HttpSession session;
+
+    @Autowired
+    private HttpServletRequest request;
+
+    /**
+     * 登录
+     * @return
+     */
+    @GetMapping("/login")
+    public String login(){
+        session.removeAttribute("userOnLogin");
+        return "login";
+    }
+
+    /**
+     * 登录时提交的表单
+     * @param smbmsUser  存储的用户名和密码
+     * @return
+     */
+    @PostMapping("/dologin")
+    public String dologin(SmbmsUser smbmsUser){
+        smbmsUser = smbmsUserService.login(smbmsUser);
+        if(null!=smbmsUser){
+            request.removeAttribute("error");
+            session.setAttribute("userOnLogin",smbmsUser);
+            return "frame";
+        }else {
+            session.setAttribute("error", "用户名或密码错误");
+            session.removeAttribute("successSavePwd");
+            return "redirect:/login";
+        }
+    }
+
+
+
+
+}
Index: src/main/webapp/statics/calendar/lang/zh-tw.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/webapp/statics/calendar/lang/zh-tw.js	(date 1578576637521)
+++ src/main/webapp/statics/calendar/lang/zh-tw.js	(date 1578576637521)
@@ -0,0 +1,14 @@
+var $lang={
+errAlertMsg: "\u4E0D\u5408\u6CD5\u7684\u65E5\u671F\u683C\u5F0F\u6216\u8005\u65E5\u671F\u8D85\u51FA\u9650\u5B9A\u7BC4\u570D,\u9700\u8981\u64A4\u92B7\u55CE?",
+aWeekStr: ["\u5468","\u65E5","\u4E00","\u4E8C","\u4E09","\u56DB","\u4E94","\u516D"],
+aLongWeekStr:["\u5468","\u661F\u671F\u65E5","\u661F\u671F\u4E00","\u661F\u671F\u4E8C","\u661F\u671F\u4E09","\u661F\u671F\u56DB","\u661F\u671F\u4E94","\u661F\u671F\u516D"],
+aMonStr: ["\u4E00\u6708","\u4E8C\u6708","\u4E09\u6708","\u56DB\u6708","\u4E94\u6708","\u516D\u6708","\u4E03\u6708","\u516B\u6708","\u4E5D\u6708","\u5341\u6708","\u5341\u4E00","\u5341\u4E8C"],
+aLongMonStr: ["\u4E00\u6708","\u4E8C\u6708","\u4E09\u6708","\u56DB\u6708","\u4E94\u6708","\u516D\u6708","\u4E03\u6708","\u516B\u6708","\u4E5D\u6708","\u5341\u6708","\u5341\u4E00\u6708","\u5341\u4E8C\u6708"],
+clearStr: "\u6E05\u7A7A",
+todayStr: "\u4ECA\u5929",
+okStr: "\u78BA\u5B9A",
+updateStr: "\u78BA\u5B9A",
+timeStr: "\u6642\u9593",
+quickStr: "\u5FEB\u901F\u9078\u64C7",
+err_1: '\u6700\u5C0F\u65E5\u671F\u4E0D\u80FD\u5927\u65BC\u6700\u5927\u65E5\u671F!'
+}
\ No newline at end of file
Index: src/main/webapp/statics/calendar/lang/zh-cn.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/webapp/statics/calendar/lang/zh-cn.js	(date 1578576638197)
+++ src/main/webapp/statics/calendar/lang/zh-cn.js	(date 1578576638197)
@@ -0,0 +1,14 @@
+var $lang={
+errAlertMsg: "\u4E0D\u5408\u6CD5\u7684\u65E5\u671F\u683C\u5F0F\u6216\u8005\u65E5\u671F\u8D85\u51FA\u9650\u5B9A\u8303\u56F4,\u9700\u8981\u64A4\u9500\u5417?",
+aWeekStr: ["\u5468","\u65E5","\u4E00","\u4E8C","\u4E09","\u56DB","\u4E94","\u516D"],
+aLongWeekStr:["\u5468","\u661F\u671F\u65E5","\u661F\u671F\u4E00","\u661F\u671F\u4E8C","\u661F\u671F\u4E09","\u661F\u671F\u56DB","\u661F\u671F\u4E94","\u661F\u671F\u516D"],
+aMonStr: ["\u4E00\u6708","\u4E8C\u6708","\u4E09\u6708","\u56DB\u6708","\u4E94\u6708","\u516D\u6708","\u4E03\u6708","\u516B\u6708","\u4E5D\u6708","\u5341\u6708","\u5341\u4E00","\u5341\u4E8C"],
+aLongMonStr: ["\u4E00\u6708","\u4E8C\u6708","\u4E09\u6708","\u56DB\u6708","\u4E94\u6708","\u516D\u6708","\u4E03\u6708","\u516B\u6708","\u4E5D\u6708","\u5341\u6708","\u5341\u4E00\u6708","\u5341\u4E8C\u6708"],
+clearStr: "\u6E05\u7A7A",
+todayStr: "\u4ECA\u5929",
+okStr: "\u786E\u5B9A",
+updateStr: "\u786E\u5B9A",
+timeStr: "\u65F6\u95F4",
+quickStr: "\u5FEB\u901F\u9009\u62E9", 
+err_1: '\u6700\u5C0F\u65E5\u671F\u4E0D\u80FD\u5927\u4E8E\u6700\u5927\u65E5\u671F!'
+}
\ No newline at end of file
Index: src/main/webapp/statics/calendar/lang/en.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/webapp/statics/calendar/lang/en.js	(date 1578576640514)
+++ src/main/webapp/statics/calendar/lang/en.js	(date 1578576640514)
@@ -0,0 +1,14 @@
+var $lang={
+errAlertMsg: "Invalid date or the date out of range,redo or not?",
+aWeekStr: ["wk", "Sun", "Mon", "Tue", "Wed", "Thu", "Fri", "Sat"],
+aLongWeekStr:["wk","Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday","Sunday"],
+aMonStr: ["Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"],
+aLongMonStr: ["January","February","March","April","May","June","July","August","September","October","November","December"],
+clearStr: "Clear",
+todayStr: "Today",
+okStr: "OK",
+updateStr: "OK",
+timeStr: "Time",
+quickStr: "Quick Selection",
+err_1: 'MinDate Cannot be bigger than MaxDate!'
+}
\ No newline at end of file
Index: src/main/webapp/statics/calendar/skin/whyGreen/datepicker.css
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/webapp/statics/calendar/skin/whyGreen/datepicker.css	(date 1578576623756)
+++ src/main/webapp/statics/calendar/skin/whyGreen/datepicker.css	(date 1578576623756)
@@ -0,0 +1,256 @@
+/* 
+ * My97 DatePicker 4.7 Skin:whyGreen
+ */ 
+.WdateDiv{
+	width:180px;
+	background-color:#fff;
+	border:#C5E1E4 1px solid;
+	padding:2px;
+}
+
+.WdateDiv2{
+	width:360px;
+}
+.WdateDiv *{font-size:9pt;}
+
+.WdateDiv .NavImg a{
+	cursor:pointer;
+	display:block;
+	width:16px;
+	height:16px;
+	margin-top:1px;
+}
+
+.WdateDiv .NavImgll a{
+	float:left;
+	background:url(img.gif) no-repeat;
+}
+.WdateDiv .NavImgl a{
+	float:left;
+	background:url(img.gif) no-repeat -16px 0px;
+}
+.WdateDiv .NavImgr a{
+	float:right;
+	background:url(img.gif) no-repeat -32px 0px;
+}
+.WdateDiv .NavImgrr a{
+	float:right;
+	background:url(img.gif) no-repeat -48px 0px;
+}
+
+.WdateDiv #dpTitle{
+	height:24px;
+	padding:1px;
+	border:#c5d9e8 1px solid;
+	background:url(bg.jpg);
+	margin-bottom:2px;
+}
+
+.WdateDiv .yminput{
+	margin-top:2px;
+	text-align:center;
+	border:0px;
+	height:20px;
+	width:50px;
+	color:#034c50;
+	background-color:transparent;
+	cursor:pointer;
+}
+
+.WdateDiv .yminputfocus{
+	margin-top:2px;
+	text-align:center;
+	border:#939393 1px solid;
+	font-weight:bold;
+	color:#034c50;	
+	height:20px;
+	width:50px;
+}
+
+.WdateDiv .menuSel{
+	z-index:1;
+	position:absolute;
+	background-color:#FFFFFF;
+	border:#A3C6C8 1px solid;
+	display:none;
+}
+
+.WdateDiv .menu{
+	cursor:pointer;
+	background-color:#fff;
+	color:#11777C;
+}
+
+.WdateDiv .menuOn{
+	cursor:pointer;
+	background-color:#BEEBEE;
+}
+
+.WdateDiv .invalidMenu{
+	color:#aaa;
+}
+
+.WdateDiv .YMenu{
+	margin-top:20px;
+}
+
+.WdateDiv .MMenu{
+	margin-top:20px;
+	*width:62px;
+}
+
+.WdateDiv .hhMenu{
+	margin-top:-90px; 
+	margin-left:26px;
+}
+
+.WdateDiv .mmMenu{
+	margin-top:-46px; 
+	margin-left:26px;
+}
+
+.WdateDiv .ssMenu{
+	margin-top:-24px; 
+	margin-left:26px;
+}
+
+ .WdateDiv .Wweek {
+ 	text-align:center;
+	background:#DAF3F5;
+	border-right:#BDEBEE 1px solid;
+ }
+
+.WdateDiv .MTitle{
+	color:#13777e;
+	background-color:#bdebee;
+}
+.WdateDiv .WdayTable2{
+	border-collapse:collapse;
+	border:#BEE9F0 1px solid;
+}
+.WdateDiv .WdayTable2 table{
+	border:0;
+}
+
+.WdateDiv .WdayTable{
+	line-height:20px;	
+	color:#13777e;
+	background-color:#edfbfb;
+	border:#BEE9F0 1px solid;
+}
+.WdateDiv .WdayTable td{
+	text-align:center;
+}
+
+.WdateDiv .Wday{
+	cursor:pointer;
+}
+
+.WdateDiv .WdayOn{
+	cursor:pointer;
+	background-color:#74d2d9 ;
+}
+
+.WdateDiv .Wwday{
+	cursor:pointer;
+	color:#ab1e1e;
+}
+
+.WdateDiv .WwdayOn{
+	cursor:pointer;
+	background-color:#74d2d9;
+}
+.WdateDiv .Wtoday{
+	cursor:pointer;
+	color:blue;
+}
+.WdateDiv .Wselday{
+	background-color:#A7E2E7;
+}
+.WdateDiv .WspecialDay{
+	background-color:#66F4DF;
+}
+
+.WdateDiv .WotherDay{ 
+	cursor:pointer;
+	color:#0099CC;	
+}
+
+.WdateDiv .WotherDayOn{ 
+	cursor:pointer;
+	background-color:#C0EBEF;	
+}
+
+.WdateDiv .WinvalidDay{
+	color:#aaa;
+}
+
+.WdateDiv #dpTime{
+	float:left;
+	margin-top:3px;
+	margin-right:30px;
+}
+
+.WdateDiv #dpTime #dpTimeStr{
+	margin-left:1px;
+	color:#497F7F;
+}
+
+.WdateDiv #dpTime input{
+	height:20px;
+	width:18px;
+	text-align:center;
+	color:#333;
+	border:#61CAD0 1px solid;	
+}
+
+.WdateDiv #dpTime .tB{
+	border-right:0px;
+}
+
+.WdateDiv #dpTime .tE{
+	border-left:0;
+	border-right:0;
+}
+
+.WdateDiv #dpTime .tm{
+	width:7px;
+	border-left:0;
+	border-right:0;
+}
+
+.WdateDiv #dpTime #dpTimeUp{
+	height:10px;
+	width:13px;
+	border:0px;
+	background:url(img.gif) no-repeat -32px -16px;
+}
+
+.WdateDiv #dpTime #dpTimeDown{
+	height:10px;
+	width:13px;
+	border:0px;
+	background:url(img.gif) no-repeat -48px -16px;
+}
+
+ .WdateDiv #dpQS {
+ 	float:left;
+	margin-right:3px;
+	margin-top:3px;
+	background:url(img.gif) no-repeat 0px -16px;
+	width:20px;
+	height:20px;
+	cursor:pointer;
+ }
+.WdateDiv #dpControl {
+	text-align:right;
+	margin-top:3px;
+}
+.WdateDiv .dpButton{ 
+	height:20px;
+	width:45px;
+	margin-top:2px;
+	border:#38B1B9 1px solid;
+	background-color:#CFEBEE;
+	color:#08575B;
+}
\ No newline at end of file
Index: src/main/webapp/statics/calendar/config.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/webapp/statics/calendar/config.js	(date 1578576646472)
+++ src/main/webapp/statics/calendar/config.js	(date 1578576646472)
@@ -0,0 +1,12 @@
+var langList = 
+[
+	{name:'en',	charset:'UTF-8'},
+	{name:'zh-cn',	charset:'UTF-8'},
+	{name:'zh-tw',	charset:'UTF-8'}
+];
+
+var skinList = 
+[
+	{name:'default',	charset:'UTF-8'},
+	{name:'whyGreen',	charset:'UTF-8'}
+];
\ No newline at end of file
Index: src/main/webapp/statics/calendar/skin/WdatePicker.css
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/webapp/statics/calendar/skin/WdatePicker.css	(date 1578576632929)
+++ src/main/webapp/statics/calendar/skin/WdatePicker.css	(date 1578576632929)
@@ -0,0 +1,10 @@
+.Wdate{
+	border:#999 1px solid;
+	height:20px;
+	background:#fff url(datePicker.gif) no-repeat right;
+}
+
+.WdateFmtErr{
+	font-weight:bold;
+	color:red;
+}
\ No newline at end of file
Index: src/main/webapp/statics/calendar/skin/default/datepicker.css
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/webapp/statics/calendar/skin/default/datepicker.css	(date 1578576629205)
+++ src/main/webapp/statics/calendar/skin/default/datepicker.css	(date 1578576629205)
@@ -0,0 +1,246 @@
+/* 
+ * My97 DatePicker 4.7
+ */
+
+.WdateDiv{
+	width:180px;
+	background-color:#FFFFFF;
+	border:#bbb 1px solid;
+	padding:2px;
+}
+
+.WdateDiv2{
+	width:360px;
+}
+.WdateDiv *{font-size:9pt;}
+
+.WdateDiv .NavImg a{
+	display:block;
+	cursor:pointer;
+	height:16px;
+	width:16px;
+}
+
+.WdateDiv .NavImgll a{
+	float:left;
+	background:transparent url(img.gif) no-repeat scroll 0 0;
+}
+.WdateDiv .NavImgl a{
+	float:left;
+	background:transparent url(img.gif) no-repeat scroll -16px 0;
+}
+.WdateDiv .NavImgr a{
+	float:right;
+	background:transparent url(img.gif) no-repeat scroll -32px 0;
+}
+.WdateDiv .NavImgrr a{
+	float:right;
+	background:transparent url(img.gif) no-repeat scroll -48px 0;
+}
+
+.WdateDiv #dpTitle{
+	height:24px;
+	margin-bottom:2px;
+	padding:1px;
+}
+
+.WdateDiv .yminput{
+	margin-top:2px;
+	text-align:center;
+	height:20px;
+	border:0px;
+	width:50px;
+	cursor:pointer;		
+}
+
+.WdateDiv .yminputfocus{
+	margin-top:2px;
+	text-align:center;
+	font-weight:bold;
+	height:20px;
+	color:blue;
+	border:#ccc 1px solid;
+	width:50px;
+}
+
+.WdateDiv .menuSel{
+	z-index:1;
+	position:absolute;
+	background-color:#FFFFFF;	
+	border:#ccc 1px solid;
+	display:none;
+}
+
+.WdateDiv .menu{
+	cursor:pointer;
+	background-color:#fff;
+}
+
+.WdateDiv .menuOn{
+	cursor:pointer;
+	background-color:#BEEBEE;
+}
+
+.WdateDiv .invalidMenu{
+	color:#aaa;
+}
+
+.WdateDiv .YMenu{
+	margin-top:20px;
+	
+}
+
+.WdateDiv .MMenu{
+	margin-top:20px;
+	*width:62px;
+}
+
+.WdateDiv .hhMenu{
+	margin-top:-90px; 
+	margin-left:26px;
+}
+
+.WdateDiv .mmMenu{
+	margin-top:-46px; 
+	margin-left:26px;
+}
+
+.WdateDiv .ssMenu{
+	margin-top:-24px; 
+	margin-left:26px;
+}
+
+ .WdateDiv .Wweek {
+ 	text-align:center;
+	background:#DAF3F5;
+	border-right:#BDEBEE 1px solid;
+ }
+
+.WdateDiv .MTitle{
+	background-color:#BDEBEE;
+}
+.WdateDiv .WdayTable2{
+	border-collapse:collapse;
+	border:#c5d9e8 1px solid;
+}
+.WdateDiv .WdayTable2 table{
+	border:0;
+}
+
+.WdateDiv .WdayTable{
+	line-height:20px;
+	border:#c5d9e8 1px solid;
+}
+.WdateDiv .WdayTable td{
+	text-align:center;
+}
+
+.WdateDiv .Wday{
+	cursor:pointer;
+}
+
+.WdateDiv .WdayOn{
+	cursor:pointer;
+	background-color:#C0EBEF;
+}
+
+.WdateDiv .Wwday{
+	cursor:pointer;
+	color:#FF2F2F;
+}
+
+.WdateDiv .WwdayOn{
+	cursor:pointer;
+	color:#000;
+	background-color:#C0EBEF;
+}
+.WdateDiv .Wtoday{
+	cursor:pointer;
+	color:blue;
+}
+.WdateDiv .Wselday{
+	background-color:#A9E4E9;
+}
+.WdateDiv .WspecialDay{
+	background-color:#66F4DF;
+}
+
+.WdateDiv .WotherDay{ 
+	cursor:pointer;
+	color:#6A6AFF;	
+}
+
+.WdateDiv .WotherDayOn{ 
+	cursor:pointer;
+	background-color:#C0EBEF;	
+}
+
+.WdateDiv .WinvalidDay{
+	color:#aaa;
+}
+
+.WdateDiv #dpTime{
+	float:left;
+	margin-top:3px;
+	margin-right:30px;
+}
+
+.WdateDiv #dpTime #dpTimeStr{
+	margin-left:1px;
+}
+
+.WdateDiv #dpTime input{
+	width:18px;
+	height:20px;
+	text-align:center;
+	border:#ccc 1px solid;	
+}
+
+.WdateDiv #dpTime .tB{
+	border-right:0px;
+}
+
+.WdateDiv #dpTime .tE{
+	border-left:0;
+	border-right:0;
+}
+
+.WdateDiv #dpTime .tm{
+	width:7px;
+	border-left:0;
+	border-right:0;
+}
+
+.WdateDiv #dpTime #dpTimeUp{
+	height:10px;
+	width:13px;
+	border:0px;
+	background:url(img.gif) no-repeat -32px -16px;
+}
+
+.WdateDiv #dpTime #dpTimeDown{
+	height:10px;
+	width:13px;
+	border:0px;
+    background:url(img.gif) no-repeat -48px -16px;
+}
+
+ .WdateDiv #dpQS {
+ 	float:left;
+	margin-right:3px;
+	margin-top:3px;
+	background:url(img.gif) no-repeat 0px -16px;
+	width:20px;
+	height:20px;
+	cursor:pointer;
+ }
+.WdateDiv #dpControl {
+	text-align:right;	
+}
+.WdateDiv .dpButton{ 
+	height:20px;
+	width:45px;
+	border:#ccc 1px solid;
+	margin-top:2px;
+	margin-right:1px;
+}
\ No newline at end of file
Index: src/main/webapp/WEB-INF/jsp/pro/provideradd.jsp
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/webapp/WEB-INF/jsp/pro/provideradd.jsp	(date 1594525673333)
+++ src/main/webapp/WEB-INF/jsp/pro/provideradd.jsp	(date 1594525673333)
@@ -0,0 +1,56 @@
+<%@ page language="java" contentType="text/html; charset=UTF-8"
+    pageEncoding="UTF-8"%>
+<%@include file="/WEB-INF/jsp/common/head.jsp"%>
+
+<div class="right">
+        <div class="location">
+            <strong>你现在所在的位置是:</strong>
+            <span>供应商管理页面 >> 供应商添加页面</span>
+        </div>
+        <div class="providerAdd">
+           <form id="providerForm" name="providerForm" method="post" action="${path }/sys/provideraddsave">
+                <!--div的class 为error是验证错误，ok是验证成功-->
+                <div class="">
+                    <label for="proCode">供应商编码：</label>
+                    <input type="text" name="procode" id="proCode" value="">
+					<!-- 放置提示信息 -->
+					<font color="red"></font>
+                </div>
+                <div>
+                    <label for="proname">供应商名称：</label>
+                   <input type="text" name="proname" id="proName" value="">
+					<font color="red"></font>
+                </div>
+                <div>
+                    <label for="proContact">联系人：</label>
+                    <input type="text" name="procontact" id="proContact" value="">
+					<font color="red"></font>
+
+                </div>
+                <div>
+                    <label for="proPhone">联系电话：</label>
+                    <input type="text" name="prophone" id="proPhone" value="">
+					<font color="red"></font>
+                </div>
+                <div>
+                    <label for="proAddress">联系地址：</label>
+                    <input type="text" name="proaddress" id="proAddress" value="">
+                </div>
+                <div>
+                    <label for="proFax">传真：</label>
+                    <input type="text" name="profax" id="proFax" value="">
+                </div>
+                <div>
+                    <label for="proDesc">描述：</label>
+                    <input type="text" name="prodesc" id="proDesc" value="">
+                </div>
+                <div class="providerAddBtn">
+                    <input type="button" name="add" id="add" value="保存">
+					<input type="button" id="back" name="back" value="返回" >
+                </div>
+            </form>
+     </div>
+</div>
+</section>
+<%@include file="/WEB-INF/jsp/common/foot.jsp" %>
+<script type="text/javascript" src="${path}/statics/js/provideradd.js"></script>
Index: src/main/webapp/WEB-INF/jsp/pro/providerview.jsp
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/webapp/WEB-INF/jsp/pro/providerview.jsp	(date 1594525673344)
+++ src/main/webapp/WEB-INF/jsp/pro/providerview.jsp	(date 1594525673344)
@@ -0,0 +1,23 @@
+<%@ page language="java" contentType="text/html; charset=UTF-8"
+    pageEncoding="UTF-8"%>
+<%@include file="/WEB-INF/jsp/common/head.jsp"%>
+ <div class="right">
+        <div class="location">
+            <strong>你现在所在的位置是:</strong>
+            <span>供应商管理页面 >> 信息查看</span>
+        </div>
+        <div class="providerView">
+            <p><strong>供应商编码：</strong><span>${provider.procode }</span></p>
+            <p><strong>供应商名称：</strong><span>${provider.proname }</span></p>
+            <p><strong>联系人：</strong><span>${provider.procontact }</span></p>
+            <p><strong>联系电话：</strong><span>${provider.prophone }</span></p>
+            <p><strong>传真：</strong><span>${provider.profax }</span></p>
+            <p><strong>描述：</strong><span>${provider.prodesc}</span></p>
+			<div class="providerAddBtn">
+            	<input type="button" id="back" name="back" value="返回" >
+            </div>
+        </div>
+    </div>
+</section>
+<%@include file="/WEB-INF/jsp/common/foot.jsp" %>
+<script type="text/javascript" src="${path}/statics/js/providerview.js"></script>
Index: src/main/webapp/WEB-INF/jsp/pro/providerlist.jsp
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/webapp/WEB-INF/jsp/pro/providerlist.jsp	(date 1594524956329)
+++ src/main/webapp/WEB-INF/jsp/pro/providerlist.jsp	(date 1594524956329)
@@ -0,0 +1,81 @@
+<%@ page language="java" contentType="text/html; charset=UTF-8"
+	pageEncoding="UTF-8"%>
+<%@include file="/WEB-INF/jsp/common/head.jsp"%>
+
+<div class="right">
+        <div class="location">
+            <strong>你现在所在的位置是:</strong>
+            <span>供应商管理页面</span>
+        </div>
+        <div class="search">
+        	<form method="get" action="${path }/sys/provider">
+				<span>供应商编码：</span>
+				<input name="queryProCode" type="text" value="${queryProCode }">
+				
+				<span>供应商名称：</span>
+				<input name="queryProName" type="text" value="${queryProName }">
+				
+				<input value="查 询" type="submit" id="searchbutton">
+				<a href="${path }/sys/provideradd">添加供应商</a>
+			</form>
+        </div>
+        <!--供应商操作表格-->
+        <table class="providerTable" cellpadding="0" cellspacing="0">
+            <tr class="firstTr">
+                <th width="10%">供应商编码</th>
+                <th width="20%">供应商名称</th>
+                <th width="10%">联系人</th>
+                <th width="10%">联系电话</th>
+                <th width="10%">传真</th>
+                <th width="10%">创建时间</th>
+                <th width="30%">操作</th>
+            </tr>
+            <c:forEach var="provider" items="${proList }" varStatus="status">
+				<tr>
+					<td>
+					<span>${provider.procode }</span>
+					</td>
+					<td>
+					<span>${provider.proname }</span>
+					</td>
+					<td>
+					<span>${provider.procontact}</span>
+					</td>
+					<td>
+					<span>${provider.prophone}</span>
+					</td>
+					<td>
+					<span>${provider.profax}</span>
+					</td>
+					<td>
+					<span>
+					<fmt:formatDate value="${provider.creationdate}" pattern="yyyy-MM-dd"/>
+					</span>
+					</td>
+					<td>
+					<span><a class="viewProvider" href="javascript:;" proid=${provider.id } proname=${provider.proname }><img src="${path}/statics/images/read.png" alt="查看" title="查看"/></a></span>
+					<span><a class="modifyProvider" href="javascript:;" proid=${provider.id } proname=${provider.proname }><img src="${path}/statics/images/xiugai.png" alt="修改" title="修改"/></a></span>
+					<span><a class="deleteProvider" href="javascript:;" proid=${provider.id } proname=${provider.proname }><img src="${path}/statics/images/schu.png" alt="删除" title="删除"/></a></span>
+					</td>
+				</tr>
+			</c:forEach>
+        </table>
+
+    </div>
+</section>
+
+<!--点击删除按钮后弹出的页面-->
+<div class="zhezhao"></div>
+<div class="remove" id="removeProv">
+   <div class="removerChid">
+       <h2>提示</h2>
+       <div class="removeMain" >
+           <p>你确定要删除该供应商吗？</p>
+           <a href="#" id="yes">确定</a>
+           <a href="#" id="no">取消</a>
+       </div>
+   </div>
+</div>
+
+<%@include file="/WEB-INF/jsp/common/foot.jsp" %>
+<script type="text/javascript" src="${path}/statics/js/providerlist.js"></script>
Index: src/main/webapp/statics/calendar/WdatePicker.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/webapp/statics/calendar/WdatePicker.js	(date 1578576643697)
+++ src/main/webapp/statics/calendar/WdatePicker.js	(date 1578576643697)
@@ -0,0 +1,37 @@
+/*
+ * My97 DatePicker 4.7 Beta5
+ * License: http://www.my97.net/dp/license.asp
+ */
+var $dp,WdatePicker;(function(){var _={
+$wdate:true,
+$dpPath:"",
+$crossFrame:true,
+doubleCalendar:false,
+enableKeyboard:true,
+autoUpdateOnChanged:null,
+whichDayIsfirstWeek:4,
+position:{},
+lang:"auto",
+skin:"default",
+dateFmt:"yyyy-MM-dd",
+realDateFmt:"yyyy-MM-dd",
+realTimeFmt:"HH:mm:ss",
+realFullFmt:"%Date %Time",
+minDate:"1900-01-01 00:00:00",
+maxDate:"2099-12-31 23:59:59",
+startDate:"",
+alwaysUseStartDate:false,
+yearOffset:1911,
+firstDayOfWeek:0,
+isShowWeek:false,
+highLineWeekDay:true,
+isShowClear:true,
+isShowToday:true,
+isShowOK:true,
+isShowOthers:true,
+readOnly:false,
+errDealMode:0,
+autoPickDate:null,
+qsEnabled:true,
+
+specialDates:null,specialDays:null,disabledDates:null,disabledDays:null,opposite:false,onpicking:null,onpicked:null,onclearing:null,oncleared:null,ychanging:null,ychanged:null,Mchanging:null,Mchanged:null,dchanging:null,dchanged:null,Hchanging:null,Hchanged:null,mchanging:null,mchanged:null,schanging:null,schanged:null,eCont:null,vel:null,errMsg:"",quickSel:[],has:{}};WdatePicker=U;var X=window,O="document",J="documentElement",C="getElementsByTagName",V,A,T,I,b;switch(navigator.appName){case"Microsoft Internet Explorer":T=true;break;case"Opera":b=true;break;default:I=true;break}A=L();if(_.$wdate)M(A+"skin/WdatePicker.css");V=X;if(_.$crossFrame){try{while(V.parent[O]!=V[O]&&V.parent[O][C]("frameset").length==0)V=V.parent}catch(P){}}if(!V.$dp)V.$dp={ff:I,ie:T,opera:b,el:null,win:X,status:0,defMinDate:_.minDate,defMaxDate:_.maxDate,flatCfgs:[]};B();if($dp.status==0)Z(X,function(){U(null,true)});if(!X[O].docMD){E(X[O],"onmousedown",D);X[O].docMD=true}if(!V[O].docMD){E(V[O],"onmousedown",D);V[O].docMD=true}E(X,"onunload",function(){if($dp.dd)Q($dp.dd,"none")});function B(){V.$dp=V.$dp||{};obj={$:function($){return(typeof $=="string")?X[O].getElementById($):$},$D:function($,_){return this.$DV(this.$($).value,_)},$DV:function(_,$){if(_!=""){this.dt=$dp.cal.splitDate(_,$dp.cal.dateFmt);if($)for(var B in $)if(this.dt[B]===undefined)this.errMsg="invalid property:"+B;else{this.dt[B]+=$[B];if(B=="M"){var C=$["M"]>0?1:0,A=new Date(this.dt["y"],this.dt["M"],0).getDate();this.dt["d"]=Math.min(A+C,this.dt["d"])}}if(this.dt.refresh())return this.dt}return""},show:function(){Q(this.dd,"block")},hide:function(){Q(this.dd,"none")},attachEvent:E};for(var $ in obj)V.$dp[$]=obj[$];$dp=V.$dp}function E(A,$,_){if(T)A.attachEvent($,_);else{var B=$.replace(/on/,"");_._ieEmuEventHandler=function($){return _($)};A.addEventListener(B,_._ieEmuEventHandler,false)}}function L(){var _,A,$=X[O][C]("script");for(var B=0;B<$.length;B++){_=$[B].src.substring(0,$[B].src.toLowerCase().indexOf("wdatepicker.js"));A=_.lastIndexOf("/");if(A>0)_=_.substring(0,A+1);if(_)break}return _}function F(F){var E,C;if(F.substring(0,1)!="/"&&F.indexOf("://")==-1){E=V.location.href;C=location.href;if(E.indexOf("?")>-1)E=E.substring(0,E.indexOf("?"));if(C.indexOf("?")>-1)C=C.substring(0,C.indexOf("?"));var G,I,$="",D="",A="",J,H,B="";for(J=0;J<Math.max(E.length,C.length);J++){G=E.charAt(J).toLowerCase();I=C.charAt(J).toLowerCase();if(G==I){if(G=="/")H=J}else{$=E.substring(H+1,E.length);$=$.substring(0,$.lastIndexOf("/"));D=C.substring(H+1,C.length);D=D.substring(0,D.lastIndexOf("/"));break}}if($!="")for(J=0;J<$.split("/").length;J++)B+="../";if(D!="")B+=D+"/";F=E.substring(0,E.lastIndexOf("/")+1)+B+F}_.$dpPath=F}function M(A,$,B){var D=X[O][C]("HEAD").item(0),_=X[O].createElement("link");if(D){_.href=A;_.rel="stylesheet";_.type="text/css";if($)_.title=$;if(B)_.charset=B;D.appendChild(_)}}function Z($,_){E($,"onload",_)}function G($){$=$||V;var A=0,_=0;while($!=V){var D=$.parent[O][C]("iframe");for(var F=0;F<D.length;F++){try{if(D[F].contentWindow==$){var E=W(D[F]);A+=E.left;_+=E.top;break}}catch(B){}}$=$.parent}return{"leftM":A,"topM":_}}function W(F){if(F.getBoundingClientRect)return F.getBoundingClientRect();else{var A={ROOT_TAG:/^body|html$/i,OP_SCROLL:/^(?:inline|table-row)$/i},E=false,H=null,_=F.offsetTop,G=F.offsetLeft,D=F.offsetWidth,B=F.offsetHeight,C=F.offsetParent;if(C!=F)while(C){G+=C.offsetLeft;_+=C.offsetTop;if(S(C,"position").toLowerCase()=="fixed")E=true;else if(C.tagName.toLowerCase()=="body")H=C.ownerDocument.defaultView;C=C.offsetParent}C=F.parentNode;while(C.tagName&&!A.ROOT_TAG.test(C.tagName)){if(C.scrollTop||C.scrollLeft)if(!A.OP_SCROLL.test(Q(C)))if(!b||C.style.overflow!=="visible"){G-=C.scrollLeft;_-=C.scrollTop}C=C.parentNode}if(!E){var $=a(H);G-=$.left;_-=$.top}D+=G;B+=_;return{"left":G,"top":_,"right":D,"bottom":B}}}function N($){$=$||V;var B=$[O],A=($.innerWidth)?$.innerWidth:(B[J]&&B[J].clientWidth)?B[J].clientWidth:B.body.offsetWidth,_=($.innerHeight)?$.innerHeight:(B[J]&&B[J].clientHeight)?B[J].clientHeight:B.body.offsetHeight;return{"width":A,"height":_}}function a($){$=$||V;var B=$[O],A=B[J],_=B.body;B=(A&&A.scrollTop!=null&&(A.scrollTop>_.scrollTop||A.scrollLeft>_.scrollLeft))?A:_;return{"top":B.scrollTop,"left":B.scrollLeft}}function D($){src=$?($.srcElement||$.target):null;if($dp&&$dp.cal&&!$dp.eCont&&$dp.dd&&src!=$dp.el&&$dp.dd.style.display=="block")$dp.cal.close()}function Y(){$dp.status=2;H()}function H(){if($dp.flatCfgs.length>0){var $=$dp.flatCfgs.shift();$.el={innerHTML:""};$.autoPickDate=true;$.qsEnabled=false;K($)}}var R,$;function U(J,C){$dp.win=X;B();J=J||{};if(C){if(!G()){$=$||setInterval(function(){if(V[O].readyState=="complete")clearInterval($);U(null,true)},50);return}if($dp.status==0){$dp.status=1;K({el:{innerHTML:""}},true)}else return}else if(J.eCont){J.eCont=$dp.$(J.eCont);$dp.flatCfgs.push(J);if($dp.status==2)H()}else{if($dp.status==0){U(null,true);return}if($dp.status!=2)return;var F=D();if(F){$dp.srcEl=F.srcElement||F.target;F.cancelBubble=true}J.el=$dp.$(J.el||$dp.srcEl);if(!J.el||J.el["My97Mark"]===true||J.el.disabled||(J.el==$dp.el&&Q($dp.dd)!="none"&&$dp.dd.style.left!="-1970px")){J.el["My97Mark"]=false;return}K(J);if(J.el.nodeType==1&&J.el["My97Mark"]===undefined){$dp.el["My97Mark"]=false;var _,A;if(F.type=="focus"){_="onclick";A="onfocus"}else{_="onfocus";A="onclick"}E(J.el,_,J.el[A])}}function G(){if(T&&V!=X&&V[O].readyState!="complete")return false;return true}function D(){if(I){func=D.caller;while(func!=null){var $=func.arguments[0];if($&&($+"").indexOf("Event")>=0)return $;func=func.caller}return null}return event}}function S(_,$){return _.currentStyle?_.currentStyle[$]:document.defaultView.getComputedStyle(_,false)[$]}function Q(_,$){if(_)if($!=null)_.style.display=$;else return S(_,"display")}function K(H,$){for(var D in _)if(D.substring(0,1)!="$")$dp[D]=_[D];for(D in H)if($dp[D]!==undefined)$dp[D]=H[D];var E=$dp.el?$dp.el.nodeName:"INPUT";if($||$dp.eCont||new RegExp(/input|textarea|div|span|p|a/ig).test(E))$dp.elProp=E=="INPUT"?"value":"innerHTML";else return;if($dp.lang=="auto")$dp.lang=T?navigator.browserLanguage.toLowerCase():navigator.language.toLowerCase();if(!$dp.dd||$dp.eCont||($dp.lang&&$dp.realLang&&$dp.realLang.name!=$dp.lang&&$dp.getLangIndex&&$dp.getLangIndex($dp.lang)>=0)){if($dp.dd&&!$dp.eCont)V[O].body.removeChild($dp.dd);if(_.$dpPath=="")F(A);var B="<iframe style=\"width:1px;height:1px\" src=\""+_.$dpPath+"My97DatePicker.htm\" frameborder=\"0\" border=\"0\" scrolling=\"no\"></iframe>";if($dp.eCont){$dp.eCont.innerHTML=B;Z($dp.eCont.childNodes[0],Y)}else{$dp.dd=V[O].createElement("DIV");$dp.dd.style.cssText="position:absolute;z-index:19700";$dp.dd.innerHTML=B;V[O].body.appendChild($dp.dd);Z($dp.dd.childNodes[0],Y);if($)$dp.dd.style.left=$dp.dd.style.top="-1970px";else{$dp.show();C()}}}else if($dp.cal){$dp.show();$dp.cal.init();if(!$dp.eCont)C()}function C(){var F=$dp.position.left,B=$dp.position.top,C=$dp.el;if(C!=$dp.srcEl&&(Q(C)=="none"||C.type=="hidden"))C=$dp.srcEl;var H=W(C),$=G(X),D=N(V),A=a(V),E=$dp.dd.offsetHeight,_=$dp.dd.offsetWidth;if(isNaN(B)){if(B=="above"||(B!="under"&&(($.topM+H.bottom+E>D.height)&&($.topM+H.top-E>0))))B=A.top+$.topM+H.top-E-3;else B=A.top+$.topM+Math.min(H.bottom,D.height-E);B+=T?-1:1}else B+=A.top+$.topM;if(isNaN(F))F=A.left+Math.min($.leftM+H.left,D.width-_-5)-(T?2:0);else F+=A.left+$.leftM;$dp.dd.style.top=B+"px";$dp.dd.style.left=F+"px"}}})()
\ No newline at end of file
Index: src/main/webapp/statics/calendar/calendar.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/webapp/statics/calendar/calendar.js	(date 1578576646472)
+++ src/main/webapp/statics/calendar/calendar.js	(date 1578576646472)
@@ -0,0 +1,5 @@
+/*
+ * My97 DatePicker 4.7 Beta5
+ * License: http://www.my97.net/dp/license.asp
+ */
+eval(function(B,D,A,G,E,F){function C(A){return A<62?String.fromCharCode(A+=A<26?65:A<52?71:-4):A<63?'_':A<64?'$':C(A>>6)+C(A&63)}while(A>0)E[C(G--)]=D[--A];return B.replace(/[\w\$]+/g,function(A){return E[A]==F[A]?A:E[A]})}('l f;e(FP){FD.Co.__defineSetter__("Fd",9(c){e(!c){q.Bq();}4 c;});FD.Co.__defineGetter__("FL",9(){l c=q.GG;DH(c.FZ!=V){c=c.parentNode;}4 c;});HTMLElement.Co.C8=9(b,A){l c=b.6(/Ez/,"");A.El=9(c){GA.BZ=c;4 A();};q.addEventListener(c,A.El,2);};}9 EX(){f=q;q.Cj=[];d=Bs.createElement("m");d._="EN";d.BW=\'<m BM=dpTitle><m x="C3 NavImgll"><L DJ="###"></L></m><m x="C3 NavImgl"><L DJ="###"></L></m><m y="CF:Bz"><m x="CX MMenu"></m><BJ x=Da></m><m y="CF:Bz"><m x="CX YMenu"></m><BJ x=Da></m><m x="C3 NavImgrr"><L DJ="###"></L></m><m x="C3 NavImgr"><L DJ="###"></L></m><m y="CF:EZ"></m></m><m y="position:absolute;overflow:hidden"></m><m></m><m BM=dpTime><m x="CX hhMenu"></m><m x="CX mmMenu"></m><m x="CX ssMenu"></m><BC B_=U B5=U B3=U><i><h rowspan=W><Dt BM=dpTimeStr></Dt>&Dw;<BJ x=tB ED=W><BJ 1=":" x=Fc Ek><BJ x=Fi ED=W><BJ 1=":" x=Fc Ek><BJ x=Fi ED=W></h><h><BU BM=dpTimeUp></BU></h></i><i><h><BU BM=dpTimeDown></BU></h></i></BC></m><m BM=dpQS></m><m BM=dpControl><BJ x=Dc BM=dpClearInput DC=BU><BJ x=Dc BM=dpTodayInput DC=BU><BJ x=Dc BM=dpOkInput DC=BU></m>\';GC(d,9(){C5();});c();j.Bb=[Bs,d.BV,d.BA,d.CT,d.DF,d.DR,d.CR,d.Bp,d.Bc];p(l A=U;A<j.Bb.5;A++){l B=j.Bb[A];B.Ct=A==j.Bb.5-V?j.Bb[V]:j.Bb[A+V];j.C8(B,"EP",EK);}q.Fj();b();EJ("T,K,H,Q,S");d.EW.7=9(){EI(V);};d.Es.7=9(){EI(-V);};d.EO.7=9(){e(d.BK.y.CM!="F5"){f.EC();DG(d.BK);}r{v(d.BK);}};Bs.En.EV(d);9 c(){l b=c("L");w=c("m"),BX=c("BJ"),EM=c("BU"),FS=c("Dt");d.DW=b[U];d.Cx=b[V];d.DX=b[X];d.DA=b[W];d.DE=w[a];d.BV=BX[U];d.BA=BX[V];d.D1=w[U];d.C7=w[BL];d.Cb=w[BQ];d.BK=w[B9];d.Cg=w[EA];d.Cv=w[Cf];d.Eg=w[FX];d.FG=w[14];d.Fr=w[D$];d.EO=w[16];d.C0=w[17];d.CT=BX[W];d.DF=BX[BL];d.DR=BX[BQ];d.CR=BX[Z];d.Bp=BX[Dh];d.Bc=BX[a];d.EW=EM[U];d.Es=EM[V];d.Fx=FS[U];9 c(c){4 d.Dj(c);}}9 b(){d.DW.7=9(){BS=BS<=U?BS-V:-V;e(BS%Y==U){d.BA.Bw();4;}d.BA.1=k.T-V;d.BA.CK();};d.Cx.7=9(){k.B4("K",-V);d.BV.CK();};d.DX.7=9(){k.B4("K",V);d.BV.CK();};d.DA.7=9(){BS=BS>=U?BS+V:V;e(BS%Y==U){d.BA.Bw();4;}d.BA.1=k.T+V;d.BA.CK();};}}EX.Co={Fj:9(){BS=U;j.cal=q;e(j.Cz&&j.g.Cz!=u){j.g.Cz=s;j.g.D6();}c();q.FC();k=q.E2=o BN();BI=o BN();BF=q.B8=o BN();q.Bl=q.CW(j.Bl);q.CL=j.CL==u?(j.n.Bu&&j.n.Bu?2:s):j.CL;j.CD=j.CD==u?(j.D4&&j.n.N?2:s):j.CD;q.D8=q.Cs("disabledDates");q.FK=q.Cs("disabledDays");q.E$=q.Cs("specialDates");q.Fk=q.Cs("specialDays");q.Bd=q.DB(j.Bd,j.Bd!=j.Eq?j.Bk:j.CY,j.Eq);q.Bh=q.DB(j.Bh,j.Bh!=j.GB?j.Bk:j.CY,j.GB);e(q.Bd.By(q.Bh)>U){j.EE=0.err_1;}e(q.Ba()){q.Ep();q.CH=j.g[j.BH];}r{q.Bx(2,W);}Dz(k);d.Fx.BW=0.timeStr;d.CR.1=0.clearStr;d.Bp.1=0.todayStr;d.Bc.1=0.okStr;d.Bc.BT=!f.BB(BF);q.Ef();q.E5();e(j.EE){alert(j.EE);}q.EL();e(j.g.FZ==V&&j.g.D5===EH){j.C8(j.g,"EP",EK);}f.$=j.g;C5();9 c(){l b,c;p(b=U;(c=Bs.Dj("link")[b]);b++){e(c.rel.8("y")!=-V&&c.F6){c.BT=s;e(c.F6==j.skin){c.BT=2;}}}}},Ep:9(){l b=q.CE();e(b!=U){l c;e(b>U){c=q.Bh;}r{c=q.Bd;}e(j.n.DO){k.T=c.T;k.K=c.K;k.N=c.N;}e(j.n.Bu){k.H=c.H;k.Q=c.Q;k.S=c.S;}}},C2:9(K,F,Ee,b,D,B,A,Ed,G){l E;e(K&&K.Ba){E=K;}r{E=o BN();e(K!=""){F=F||j.Bl;l J,Dk=U,I,C=/C9|Cu|Db|T|CC|Ce|Dy|K|Bm|N|%CV|FA|H|E9|Q|Ff|S|CG|D|FY|Cy|Dl/BR,CI=F.ES(C);C.DL=U;e(G){I=K.D9(/\\Cy+/);}r{l c=U,H="^";DH((I=C.DP(F))!==u){e(c>=U){H+=F.Ca(c,I.DN);}c=I.DN-c;c=C.DL;Cp(I[U]){t"C9":H+="(\\\\N{BL})";z;t"Cu":H+="(\\\\N{X})";z;t"CC":t"Ce":t"CG":t"D":H+="(\\\\D+)";z;F$:H+="(\\\\N\\\\N?)";z;}}H+=".*c";I=o Dd(H).DP(K);Dk=V;}e(I){p(J=U;J<CI.5;J++){l BD=I[J+Dk];e(BD){Cp(CI[J]){t"CC":t"Ce":E.K=BE(CI[J],BD);z;t"T":t"Db":BD=CO(BD,U);e(BD<50){BD+=Em;}r{BD+=1900;}E.T=BD;z;t"Cu":E.T=CO(BD,U)+j.E4;z;F$:E[CI[J].EB(-V)]=BD;z;}}}}r{E.N=32;}}}E.FH(Ee,b,D,B,A,Ed);4 E;9 BE(c,A){l B=c=="CC"?0.FN:0.B2;p(l b=U;b<Cf;b++){e(B[b].Ea()==A.substr(U,B[b].5).Ea()){4 b+V;}}4-V;}},Cs:9(B){l A,b=j[B],c="(?:";e(b){p(A=U;A<b.5;A++){c+=q.CW(b[A]);e(A!=b.5-V){c+="|";}}c=o Dd(c+")");}r{c=u;}4 c;},B1:9(){l c=q.Dm();e(j.g[j.BH]!=c){j.g[j.BH]=c;}q.C$();},C$:9(c){l b=j.c(j.vel),c=Cl(c,q.Dm(j.Bk));e(b){b.1=c;}j.g.DU=c;},CW:9(S){l DT="Ck",BP,B7,Fq=/#?\\{(.*?)\\}/;S=S+"";p(l O=U;O<DT.5;O++){S=S.6("%"+DT.CZ(O),q.Bf(DT.CZ(O),u,BI));}e(S.Ca(U,X)=="#F{"){S=S.Ca(X,S.5-V);e(S.8("4 ")<U){S="4 "+S;}S=j.win.Cc(\'o Function("\'+S+\'");\');S=S();}r{DH((BP=Fq.DP(S))!=u){BP.DL=BP.DN+BP[V].5+BP[U].5-BP[V].5-V;B7=Cn(Cc(BP[V]));e(B7<U){B7="Bt"+(-B7);}S=S.Ca(U,BP.DN)+B7+S.Ca(BP.DL+V);}}4 S;},DB:9(c,A,B){l b;c=q.CW(c);e(!c||c==""){c=B;}e(typeof c=="object"){b=c;}r{b=q.C2(c,A,u,u,V,U,U,U,s);b.T=(""+b.T).6(/^Bt/,"-");b.K=(""+b.K).6(/^Bt/,"-");b.N=(""+b.N).6(/^Bt/,"-");b.H=(""+b.H).6(/^Bt/,"-");b.Q=(""+b.Q).6(/^Bt/,"-");b.S=(""+b.S).6(/^Bt/,"-");e(c.8("%CV")>=U){c=c.6(/%CV/BR,"U");b.N=U;b.K=Cn(b.K)+V;}b.Be();}4 b;},Ba:9(){l A,b;e(j.alwaysUseStartDate||(j.Eb!=""&&j.g[j.BH]=="")){A=q.CW(j.Eb);b=j.Bk;}r{A=j.g[j.BH];b=q.Bl;}k.CA(q.C2(A,b));e(A!=""){l c=V;e(j.n.DO&&!q.EQ(k)){k.T=BI.T;k.K=BI.K;k.N=BI.N;c=U;}e(j.n.Bu&&!q.Do(k)){k.H=BI.H;k.Q=BI.Q;k.S=BI.S;c=U;}4 c&&q.BB(k);}4 V;},EQ:9(c){e(c.T!=u){c=CQ(c.T,BL)+"-"+c.K+"-"+c.N;}4 c.ES(/^((\\N{W}(([Et][048])|([E6][26]))[\\-\\/\\S]?((((U?[E8])|(V[Fb]))[\\-\\/\\S]?((U?[V-a])|([V-W][U-a])|(X[Fa])))|(((U?[Ev])|(EA))[\\-\\/\\S]?((U?[V-a])|([V-W][U-a])|(Cd)))|(U?W[\\-\\/\\S]?((U?[V-a])|([V-W][U-a])))))|(\\N{W}(([Et][1235679])|([E6][01345789]))[\\-\\/\\S]?((((U?[E8])|(V[Fb]))[\\-\\/\\S]?((U?[V-a])|([V-W][U-a])|(X[Fa])))|(((U?[Ev])|(EA))[\\-\\/\\S]?((U?[V-a])|([V-W][U-a])|(Cd)))|(U?W[\\-\\/\\S]?((U?[V-a])|(V[U-a])|(W[U-Dh]))))))(\\S(((U?[U-a])|([V-W][U-X]))\\:([U-Y]?[U-a])((\\S)|(\\:([U-Y]?[U-a])))))?c/);},Do:9(c){e(c.H!=u){c=c.H+":"+c.Q+":"+c.S;}4 c.ES(/^([U-a]|([U-V][U-a])|([W][U-X])):([U-a]|([U-Y][U-a])):([U-a]|([U-Y][U-a]))c/);},CE:9(b,c){b=b||k;l A=b.By(q.Bd,c);e(A>U){A=b.By(q.Bh,c);e(A<U){A=U;}}4 A;},BB:9(A,c,b){c=c||j.n.Cw;l B=q.CE(A,c);e(B==U){B=V;e(c=="N"&&b==u){b=o BO(A.T,A.K-V,A.N).Bi();}B=!q.E3(b)&&!q.Fe(A);}r{B=U;}4 B;},FT:9(){l A=j.g,c=q,b=j.g[j.BH];e(b!=u){e(b!=""&&!j.Cz){c.B8.CA(c.C2(b,c.Bl));}e(b==""||(c.EQ(c.B8)&&c.Do(c.B8)&&c.BB(c.B8))){e(b!=""){c.E2.CA(c.B8);c.B1();}r{c.C$("");}}r{4 2;}}4 s;},Dp:9(c){C5();e(q.FT()){q.Bx(s);j.v();}r{e(c){DM(c);q.Bx(2,W);j.Bj();}r{q.Bx(2);}}},C4:9(){l b,F,c,I,C,G=o B$(),A=0.F9,B=j.F8,H="",E="",J=o BN(k.T,k.K,k.N,U,U,U),BE=J.T,D=J.K;C=V-o BO(BE,D-V,V).Bi()+B;e(C>V){C-=Z;}G.L("<BC x=F4 Cm=Cr% B3=U B_=U B5=U>");G.L("<i x=E7 Dr=F1>");e(j.Fg){G.L("<h>"+A[U]+"</h>");}p(b=U;b<Z;b++){G.L("<h>"+A[(B+b)%Z+V]+"</h>");}G.L("</i>");p(b=V,F=C;b<Z;b++){G.L("<i>");p(c=U;c<Z;c++){J.Ba(BE,D,F++);J.Be();e(J.K==D){I=s;e(J.By(BF,"N")==U){H="Wselday";}r{e(J.By(BI,"N")==U){H="Wtoday";}r{H=(j.Eu&&(U==(B+c)%Z||BQ==(B+c)%Z)?"Wwday":"Wday");}}E=(j.Eu&&(U==(B+c)%Z||BQ==(B+c)%Z)?"WwdayOn":"WdayOn");}r{e(j.Ew){I=s;H="WotherDay";E="WotherDayOn";}r{I=2;}}e(j.Fg&&c==U&&(b<BL||I)){G.L("<h x=Wweek>"+Dx(J,j.F8==U?V:U)+"</h>");}G.L("<h ");e(I){e(q.BB(J,"N",c)){e(q.FV(o BO(J.T,J.K-V,J.N).Bi())||q.F0(J)){H="WspecialDay";}G.L(\'7="CP(\'+J.T+","+J.K+","+J.N+\');" \');G.L("CB=\\"q._=\'"+E+"\'\\" ");G.L("B0=\\"q._=\'"+H+"\'\\" ");}r{H="WinvalidDay";}G.L("x="+H);G.L(">"+J.N+"</h>");}r{G.L("></h>");}}G.L("</i>");}G.L("</BC>");4 G.P();},Fe:9(b){l c=q.D3(b,q.D8);4(q.D8&&j.Fo)?!c:c;},E3:9(c){4 q.D2(c,q.FK);},F0:9(c){4 q.D3(c,q.E$,V);},FV:9(c){4 q.D2(c,q.Fk,V);},D3:9(c,b){4 b?b.Fz(q.DI(j.Bk,c)):U;},D2:9(b,c){4 c?c.Fz(b):U;},Cq:9(R,M,Dn,Eh,Bv){l S=o B$(),Df=Bv?"Dn"+R:R;E1=k[R];S.L("<BC B_=U B5=X B3=U");p(l O=U;O<Dn;O++){S.L(\'<i CN="CN">\');p(l P=U;P<M;P++){S.L("<h CN ");k[R]=Cc(Eh);e((j.Fo&&q.CE(k,R)==U)||q.BB(k,R)){S.L("x=\'BG\' CB=\\"q._=\'Ci\'\\" B0=\\"q._=\'BG\'\\" C_=\\"");S.L("v(d."+R+"D);d."+Df+"BE.1="+k[R]+";d."+Df+\'BE.D6();"\');}r{S.L("x=\'D0\'");}S.L(">"+(R=="K"?0.B2[k[R]-V]:k[R])+"</h>");}S.L("</i>");}S.L("</BC>");k[R]=E1;4 S.P();},De:9(b,A){e(b){l c=b.offsetLeft;e(Ei){c=b.getBoundingClientRect().Bz;}A.y.Bz=c;}},_fM:9(c){q.De(c,d.C7);d.C7.BW=q.Cq("K",W,BQ,"O+P*BQ+V",c==d.Br);},Dq:9(A,c){l b=o B$();c=Cl(c,k.T-Y);b.L(q.Cq("T",W,Y,c+"+O+P*Y",A==d.B6));b.L("<BC B_=U B5=X B3=U Dr=F1><i><h ");b.L(q.Bd.T<c?"x=\'BG\' CB=\\"q._=\'Ci\'\\" B0=\\"q._=\'BG\'\\" C_=\'e(BZ.Bq)BZ.Bq();BZ.Dg=s;f.Dq(U,"+(c-B9)+")\'":"x=\'D0\'");b.L(">\\u2190</h><h x=\'BG\' CB=\\"q._=\'Ci\'\\" B0=\\"q._=\'BG\'\\" C_=\\"v(d.Cb);d.BA.D6();\\">\\FE</h><h ");b.L(q.Bh.T>c+B9?"x=\'BG\' CB=\\"q._=\'Ci\'\\" B0=\\"q._=\'BG\'\\" C_=\'e(BZ.Bq)BZ.Bq();BZ.Dg=s;f.Dq(U,"+(c+B9)+")\'":"x=\'D0\'");b.L(">\\u2192</h></i></BC>");q.De(A,d.Cb);d.Cb.BW=b.P();},DV:9(c,A,b){d[c+"D"].BW=q.Cq(c,BQ,A,b);},_fH:9(){q.DV("H",BL,"O * BQ + P");},_fm:9(){q.DV("Q",W,"O * Cd + P * Y");},_fs:9(){q.DV("S",V,"P * B9");},EC:9(c){q.Fv();l C=q.Cj,B=C.y,A=o B$();A.L("<BC x=F4 Cm=Cr% Bo=Cr% B3=U B_=U B5=U>");A.L(\'<i x=E7><h><m y="CF:Bz">\'+0.quickStr+"</m>");e(!c){A.L(\'<m y="CF:EZ;cursor:pointer" 7="v(d.BK);">\\FE</m>\');}A.L("</h></i>");p(l b=U;b<C.5;b++){e(C[b]){A.L("<i><h y=\'text-Dr:Bz\' CN=\'CN\' x=\'BG\' CB=\\"q._=\'Ci\'\\" B0=\\"q._=\'BG\'\\" 7=\\"");A.L("CP("+C[b].T+", "+C[b].K+", "+C[b].N+","+C[b].H+","+C[b].Q+","+C[b].S+\');">\');A.L("&Dw;"+q.DI(u,C[b]));A.L("</h></i>");}r{A.L("<i><h x=\'BG\'>&Dw;</h></i>");}}A.L("</BC>");d.BK.BW=A.P();},FC:9(){c(/Dl/);c(/FY|Cy/);c(/CG|D/);c(/C9|Cu|Db|T/);c(/CC|Ce|Dy|K/);c(/Bm|N/);c(/FA|H/);c(/E9|Q/);c(/Ff|S/);j.n.DO=(j.n.T||j.n.K||j.n.N)?s:2;j.n.Bu=(j.n.H||j.n.Q||j.n.S)?s:2;j.CY=j.CY.6(/%BO/,j.GD).6(/%Time/,j.Fp);e(j.n.DO){e(j.n.Bu){j.Bk=j.CY;}r{j.Bk=j.GD;}}r{j.Bk=j.Fp;}9 c(b){l c=(b+"").EB(V,W);j.n[c]=b.DP(j.Bl)?(j.n.Cw=c,s):2;}},Ef:9(){l c=U;j.n.T?(c=V,Bj(d.BA,d.DW,d.DA)):v(d.BA,d.DW,d.DA);j.n.K?(c=V,Bj(d.BV,d.Cx,d.DX)):v(d.BV,d.Cx,d.DX);c?Bj(d.D1):v(d.D1);e(j.n.Bu){Bj(d.Cv);DS(d.CT,j.n.H);DS(d.DF,j.n.Q);DS(d.DR,j.n.S);}r{v(d.Cv);}CS(d.CR,j.E0);CS(d.Bp,j.FI);CS(d.Bc,j.D4);CS(d.EO,(!j.Fy&&j.n.N&&j.qsEnabled));e(j.Fn||!(j.E0||j.FI||j.D4)){v(d.C0);}r{Bj(d.C0);}},Bx:9(B,c){l b=j.g,D=FP?"x":"_";e(B){C(b);}r{e(c==u){c=j.errDealMode;}Cp(c){t U:e(confirm(0.errAlertMsg)){b[j.BH]=q.CH;C(b);}r{A(b);}z;t V:b[j.BH]=q.CH;C(b);z;t W:A(b);z;}}9 C(c){l A=c._;e(A){l b=A.6(/F2/BR,"");e(A!=b){c.FU(D,b);}}}9 A(c){c.FU(D,c._+" F2");}},Bf:9(c,G,E){E=E||BF;l H,F=[c+c,c],b,C=E[c],A=9(c){4 CQ(C,c.5);};Cp(c){t"Dl":C=Bi(E);z;t"D":l B=Bi(E)+V;A=9(c){4 c.5==W?0.aLongWeekStr[B]:0.F9[B];};z;t"Cy":C=Dx(E);z;t"T":F=["C9","Cu","Db","T"];G=G||F[U];A=9(c){4 CQ((c.5<BL)?(c.5<X?E.T%Cr:(E.T+Em-j.E4)%1000):C,c.5);};z;t"K":F=["CC","Ce","Dy","K"];A=9(c){4(c.5==BL)?0.FN[C-V]:(c.5==X)?0.B2[C-V]:CQ(C,c.5);};z;}G=G||c+c;e("Ck".8(c)>-V&&c!="T"&&!j.n[c]){e("Hms".8(c)>-V){C=U;}r{C=V;}}l D=[];p(H=U;H<F.5;H++){b=F[H];e(G.8(b)>=U){D[H]=A(b);G=G.6(b,"{"+H+"}");}}p(H=U;H<D.5;H++){G=G.6(o Dd("\\\\{"+H+"\\\\}","BR"),D[H]);}4 G;},DI:9(D,B){B=B||BF;D=D||q.Bl;e(D.8("%CV")>=U){l b=o BN();b.CA(B);b.N=U;b.K=Cn(b.K)+V;b.Be();D=D.6(/%CV/BR,b.N);}l A="ydHmswW";p(l c=U;c<A.5;c++){l C=A.CZ(c);D=q.Bf(C,D,B);}e(j.n.D){D=D.6(/CG/BR,"%Bm").6(/D/BR,"%N");D=q.Bf("K",D,B);D=D.6(/\\%Bm/BR,q.Bf("D","CG")).6(/\\%N/BR,q.Bf("D","D"));}r{D=q.Bf("K",D,B);}4 D;},getNewP:9(b,c){4 q.Bf(b,c,k);},Dm:9(c){4 q.DI(c,k);},EL:9(){d.DE.BW="";e(j.Fy){f.CL=s;j.Ew=2;d._="EN WdateDiv2";l c=o B$();c.L("<BC x=WdayTable2 Cm=Cr% B_=U B5=U B3=V><i><h Ex=Fs>");c.L(q.C4());c.L("</h><h Ex=Fs>");k.B4("K",V);c.L(q.C4());d.Br=d.BV.FJ(s);d.B6=d.BA.FJ(s);d.DE.EV(d.Br);d.DE.EV(d.B6);d.Br.1=0.B2[k.K-V];d.Br.DU=k.K;d.B6.1=k.T;EJ("Fu,Fl");d.Br._=d.B6._="Da";k.B4("K",-V);c.L("</h></i></BC>");d.Cg.BW=c.P();}r{d._="EN";d.Cg.BW=q.C4();}e(!j.n.N){q.EC(s);DG(d.BK);}r{v(d.BK);}q.FB();},FB:9(){l C=parent.Bs.Dj("iframe");p(l B=U;B<C.5;B++){l A=d.y.Bo;d.y.Bo="";l c=d.CJ;e(C[B].contentWindow==GA&&c){C[B].y.Cm=d.FM+"Fw";l b=d.Cv.CJ;e(b&&d.C0.y.CM=="DD"&&d.Cv.y.CM!="DD"&&Bs.En.scrollHeight-c>=b){c+=b;d.y.Bo=c;}r{d.y.Bo=A;}C[B].y.Bo=D7.max(c,d.CJ)+"Fw";}}d.BK.y.Cm=d.Cg.FM;d.BK.y.Bo=d.Cg.CJ;},Di:9(){k.N=D7.min(o BO(k.T,k.K,U).CU(),k.N);q.B1();e(!j.Fn){e(q.BB(k)){f.Bx(s);j.g.D5=s;j.g.Bw();v(j.Bm);}r{f.Bx(2);}}e(j.Ec){Bn("Ec");}r{e(q.CH!=j.g[j.BH]&&j.g.GE){DK(j.g,"Eo");}}},E5:9(){d.CR.7=9(){e(!Bn("onclearing")){j.g[j.BH]="";f.C$("");j.g.D5=s;j.g.Bw();v(j.Bm);e(j.F3){Bn("F3");}r{e(f.CH!=j.g[j.BH]&&j.g.GE){DK(j.g,"Eo");}}}};d.Bc.7=9(){CP();};e(q.BB(BI)){d.Bp.BT=2;d.Bp.7=9(){k.CA(BI);CP();};}r{d.Bp.BT=s;}},Fv:9(){l H,B,C,A,F=[],E=Y,b=j.FF.5,G=j.n.Cw;e(b>E){b=E;}r{e(G=="Q"||G=="S"){F=[U,D$,Cd,Ft,Fm,-60,-Ft,-Cd,-D$,-V];}r{p(H=U;H<E*W;H++){F[H]=k[G]-E+V+H;}}}p(H=B=U;H<b;H++){C=q.DB(j.FF[H]);e(q.BB(C)){q.Cj[B++]=C;}}l D="Ck",c=[V,V,V,U,U,U];p(H=U;H<=D.8(G);H++){c[H]=k[D.CZ(H)];}p(H=U;B<E;H++){e(H<F.5){C=o BN(c[U],c[V],c[W],c[X],c[BL],c[Y]);C[G]=F[H];C.Be();e(q.BB(C)){q.Cj[B++]=C;}}r{q.Cj[B++]=u;}}}};9 B$(){q.S=o Array();q.O=U;q.L=9(c){q.S[q.O++]=c;};q.P=9(){4 q.S.join("");};}9 Dx(A,b){b=b||U;l B=o BO(A.T,A.K-V,A.N+b);B.GF(B.CU()-(B.Bi()+BQ)%Z+j.whichDayIsfirstWeek-V);l c=B.F7();B.setMonth(U);B.GF(BL);4 D7.round((c-B.F7())/(Z*86400000))+V;}9 Bi(c){l b=o BO(c.T,c.K-V,c.N);4 b.Bi();}9 Bj(){DZ(Ch,"");}9 DG(){DZ(Ch,"F5");}9 v(){DZ(Ch,"DD");}9 DZ(b,c){p(O=U;O<b.5;O++){b[O].y.CM=c;}}9 CS(b,c){c?Bj(b):v(b);}9 DS(b,c){e(c){b.BT=2;}r{b.BT=s;b.1="00";}}9 M(R,BY){e(R=="K"){BY=C1(BY,V,Cf);}r{e(R=="H"){BY=C1(BY,U,23);}r{e("ms".8(R)>=U){BY=C1(BY,U,Fm);}}}e(BF[R]!=BY&&!Bn(R+"changing")){l F_=\'Bg("\'+R+\'",\'+BY+")",DQ=f.CE();e(DQ==U){Cc(F_);}r{e(DQ<U){EU(f.Bd);}r{e(DQ>U){EU(f.Bh);}}}d.Bc.BT=!f.BB(BF);e("yMd".8(R)>=U){f.EL();}Bn(R+"changed");}9 EU(c){Dz(f.BB(c)?c:BF);}}9 Dz(c){Bg("T",c.T);Bg("K",c.K);Bg("N",c.N);Bg("H",c.H);Bg("Q",c.Q);Bg("S",c.S);}9 CP(A,D,F,c,E,B){l C=o BN(k.T,k.K,k.N,k.H,k.Q,k.S);k.Ba(A,D,F,c,E,B);e(!Bn("onpicking")){l b=C.T==A&&C.K==D&&C.N==F;e(!b&&Ch.5!=U){M("T",A);M("K",D);M("N",F);f.$=j.g;e(j.CD){f.B1();}}e(f.CL||b||Ch.5==U){f.Di();}}r{k=C;}}9 Bn(c){l b;e(j[c]){b=j[c].ET(j.g,j);}4 b;}9 Bg(b,c){e(c==u){c=k[b];}BF[b]=k[b]=c;e("yHms".8(b)>=U){d[b+"BE"].1=c;}e(b=="K"){d.BV.DU=c;d.BV.1=0.B2[c-V];}}9 C1(A,b,c){e(A<b){A=b;}r{e(A>c){A=c;}}4 A;}9 GC(c,b){c.C8("EP",9(){l A=BZ,c=(A.Dv==EH)?A.EG:A.Dv;e(c==a){b();}});}9 CQ(c,b){c=c+"";DH(c.5<b){c="U"+c;}4 c;}9 C5(){v(d.Cb,d.C7,d.Eg,d.FG,d.Fr);}9 EI(c){e(f.$==EH){f.$=d.CT;}Cp(f.$){t d.CT:M("H",k.H+c);z;t d.DF:M("Q",k.Q+c);z;t d.DR:M("S",k.S+c);z;}e(j.CD){f.B1();}}9 BN(c,b,B,C,A,D){q.Ba(c,b,B,C,A,D);}BN.Co={Ba:9(b,C,E,c,D,A){l B=o BO();q.T=3(b,q.T,B.EF());q.K=3(C,q.K,B.ER()+V);q.N=j.n.N?3(E,q.N,B.CU()):V;q.H=3(c,q.H,B.Du());q.Q=3(D,q.Q,B.Ds());q.S=3(A,q.S,B.D_());},CA:9(c){e(c){q.Ba(c.T,c.K,c.N,c.H,c.Q,c.S);}},FH:9(b,C,E,c,D,A){l B=o BO();q.T=3(q.T,b,B.EF());q.K=3(q.K,C,B.ER()+V);q.N=j.n.N?3(q.N,E,B.CU()):V;q.H=3(q.H,c,B.Du());q.Q=3(q.Q,D,B.Ds());q.S=3(q.S,A,B.D_());},By:9(B,C){l b="Ck",D,A;C=b.8(C);C=C>=U?C:Y;p(l c=U;c<=C;c++){A=b.CZ(c);D=q[A]-B[A];e(D>U){4 V;}r{e(D<U){4-V;}}}4 U;},Be:9(){l c=o BO(q.T,q.K-V,q.N,q.H,q.Q,q.S);q.T=c.EF();q.K=c.ER()+V;q.N=c.CU();q.H=c.Du();q.Q=c.Ds();q.S=c.D_();4!FW(q.T);},B4:9(A,b){e("Ck".8(A)>=U){l c=q.N;e(A=="K"){q.N=V;}q[A]+=b;q.Be();q.N=c;}}};9 Cn(c){4 parseInt(c,B9);}9 CO(c,b){4 Cl(Cn(c),b);}9 3(b,c,A){4 CO(b,Cl(c,A));}9 Cl(c,b){4 c==u||FW(c)?b:c;}9 DK(c,b){e(Ei){c.DK("Ez"+b);}r{l A=Bs.createEvent("HTMLEvents");A.initEvent(b,s,s);c.dispatchEvent(A);}}9 DY(A){l c,b,B="T,K,H,Q,S,Fl,Fu".D9(",");p(b=U;b<B.5;b++){c=B[b];e(d[c+"BE"]==A){4 c.EB(c.5-V,c.5);}}4 U;}9 Er(c){l b=DY(q);e(!b){4;}f.$=q;e(b=="T"){q._="E_";}r{e(b=="K"){q._="E_";q.1=q["DU"];}}q.Fh();f["Cq"+b](q);DG(d[b+"D"]);}9 C6(EY){l R=DY(q),Bv,Ej=q.1,Ey=k[R];e(R==U){4;}k[R]=CO(Ej,k[R]);e(R=="T"){Bv=q==d.B6;e(Bv&&k.K==Cf){k.T-=V;}}r{e(R=="K"){Bv=q==d.Br;e(Bv){e(Ey==Cf){k.T+=V;}k.B4("K",-V);}e(BF.K==k.K){q.1=0.B2[k[R]-V];}e((BF.T!=k.T)){M("T",k.T);}}}Cc(\'M("\'+R+\'",\'+k[R]+")");e(EY!==s){e(R=="T"||R=="K"){q._="Da";}v(d[R+"D"]);}e(j.CD){f.B1();}}9 DM(c){e(c.Bq){c.Bq();c.stopPropagation();}r{c.Dg=s;c.Fd=2;}e($OPERA){c.EG=U;}}9 EJ(A){l c=A.D9(",");p(l b=U;b<c.5;b++){l B=c[b]+"BE";d[B].onfocus=Er;d[B].CK=C6;}}9 EK(B){l A=B.FL||B.GG,C=B.Dv||B.EG;e(j.enableKeyboard){e(!A.Ct){A.Ct=j.Bb[V];f.$=j.g;}e(A==j.g){f.$=j.g;}e(C==27){e(A==j.g){f.Dp();4;}r{j.g.Bw();}}e(C>=FQ&&C<=40){l b;e(f.$==j.g||f.$==d.Bc){e(j.n.N){b="N";e(C==FR){k[b]-=Z;}r{e(C==FO){k[b]+=V;}r{e(C==FQ){k[b]-=V;}r{k[b]+=Z;}}}k.Be();M("T",k.T);M("K",k.K);M("N",k[b]);DM(B);4;}r{b=j.n.Cw;d[b+"BE"].Bw();}}b=b||DY(f.$);e(b){e(C==FR||C==FO){k[b]+=V;}r{k[b]-=V;}k.Be();f.$.1=k[b];C6.ET(f.$,s);f.$.Fh();}}r{e(f.$==j.g&&j.Bm.y.CM=="DD"){4;}e(C==a){l D=A.Ct;p(l c=U;c<j.Bb.5;c++){e(D.BT==s||D.CJ==U){D=D.Ct;}r{z;}}e(f.$!=D){f.$=D;D.Bw();}}r{e(C==FX){C6.ET(f.$);e(f.$.DC=="BU"){f.$.click();}r{f.Di();}f.$=j.g;}}}}r{e(C==a&&A==j.g){f.Dp();}}e(f.$!=j.g&&!((C>=48&&C<=57)||(C>=96&&C<=105)||C==Dh||C==46)){DM(B);}}','J|K|M|a|c|d|i|j|m|p|s|y|0|1|2|3|5|7|9|_|$|$d|if|$c|el|td|tr|$dp|$dt|var|div|has|new|for|this|else|true|case|null|hide|divs|class|style|break|$lang|value|false|pInt3|return|length|replace|onclick|indexOf|function|className|currFocus|yI|checkValid|table|L|I|$sdt|menu|elProp|$tdt|input|qsDivSel|4|id|DPDate|Date|arr|6|g|$ny|disabled|button|MI|innerHTML|ipts|pv|event|loadDate|focusArr|okI|minDate|refresh|getP|sv|maxDate|getDay|show|realFmt|dateFmt|dd|callFunc|height|todayI|preventDefault|rMI|document|9700|st|isR|focus|mark|compareWith|left|onmouseout|update|aMonStr|border|attr|cellpadding|ryI|tmpEval|date|10|cellspacing|sb|loadFromDate|onmouseover|MMMM|autoUpdateOnChanged|checkRange|float|DD|oldValue|Q|offsetHeight|onblur|autoPickDate|display|nowrap|pInt2|day_Click|doStr|clearI|shorH|HI|getDate|ld|doExp|menuSel|realFullFmt|charAt|substring|yD|eval|30|MMM|12|dDiv|arguments|menuOn|QS|yMdHms|rtn|width|pInt|prototype|switch|_f|100|_initRe|nextCtrl|yyy|tDiv|minUnit|leftImg|W|readOnly|bDiv|makeInRange|splitDate|navImg|_fd|hideSel|_blur|MD|attachEvent|yyyy|onmousedown|setRealValue|navRightImg|doCustomDate|type|none|rMD|mI|showB|while|getDateStr|href|fireEvent|lastIndex|_cancelKey|index|sd|exec|rv|sI|disHMS|ps|realValue|_fHMS|navLeftImg|rightImg|_foundInput|setDisp|yminput|yy|dpButton|RegExp|_fMyPos|fp|cancelBubble|8|pickDate|getElementsByTagName|P|w|getNewDateStr|r|isTime|close|_fy|align|getMinutes|span|getHours|which|nbsp|getWeek|MM|_setAll|invalidMenu|titleDiv|testDay|testDate|isShowOK|My97Mark|blur|Math|ddateRe|split|getSeconds|15|11|slice|_fillQS|maxlength|errMsg|getFullYear|keyCode|undefined|updownEvent|_inputBindEvent|_tab|draw|btns|WdateDiv|qsDiv|onkeydown|isDate|getMonth|match|call|_setFrom|appendChild|upButton|My97DP|showDiv|right|toLowerCase|startDate|onpicked|N|O|initShowAndHide|HD|e|$IE|v|readonly|_ieEmuEventHandler|2000|body|change|_makeDateInRange|defMinDate|_focus|downButton|02468|highLineWeekDay|469|isShowOthers|valign|oldv|on|isShowClear|bak|newdate|testDisDay|yearOffset|initBtn|13579|MTitle|13578|mm|yminputfocus|sdateRe|HH|autoSize|_dealFmt|Event|xd7|quickSel|mD|coverDate|isShowToday|cloneNode|ddayRe|srcElement|offsetWidth|aLongMonStr|39|$FF|37|38|spans|checkAndUpdate|setAttribute|testSpeDay|isNaN|13|WW|nodeType|01|02|tm|returnValue|testDisDate|ss|isShowWeek|select|tE|init|sdayRe|ry|59|eCont|opposite|realTimeFmt|re|sD|top|45|rM|initQS|px|timeSpan|doubleCalendar|test|testSpeDate|center|WdateFmtErr|oncleared|WdayTable|block|title|valueOf|firstDayOfWeek|aWeekStr|func|default|window|defMaxDate|attachTabEvent|realDateFmt|onchange|setDate|target'.split('|'),383,390,{},{}))
\ No newline at end of file
Index: src/main/webapp/statics/calendar/My97DatePicker.htm
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/webapp/statics/calendar/My97DatePicker.htm	(date 1578576644647)
+++ src/main/webapp/statics/calendar/My97DatePicker.htm	(date 1578576644647)
@@ -0,0 +1,49 @@
+<html>
+<head>
+<meta http-equiv="content-type" content="text/xml; charset=utf-8" />
+<title>My97DatePicker</title>
+<script type="text/javascript" src="config.js"></script>
+<script>
+if(parent==window)
+	location.href = 'http://www.my97.net';
+var $d, $dp, $pdp = parent.$dp, $dt, $tdt, $sdt, $IE=$pdp.ie, $FF = $pdp.ff,$OPERA=$pdp.opera, $ny, $cMark = false;
+if ($pdp.eCont) {
+	$dp = {};
+	for (var p in $pdp) {
+		$dp[p] = $pdp[p];
+	}
+}
+else
+	$dp = $pdp;
+	
+$dp.getLangIndex = function(name){
+	var arr = langList;
+	for (var i = 0; i < arr.length; i++) {
+		if (arr[i].name == name) {
+			return i;
+		}
+	}
+	return -1;
+}
+
+$dp.getLang = function(name){
+	var index = $dp.getLangIndex(name);
+	if (index == -1) {
+		index = 0;
+	}
+	return langList[index];
+}
+ 
+$dp.realLang = $dp.getLang($dp.lang);
+document.write("<script src='lang/" + $dp.realLang.name + ".js' charset='" + $dp.realLang.charset + "'><\/script>");
+
+for (var i = 0; i < skinList.length; i++) {
+    document.write('<link rel="stylesheet" type="text/css" href="skin/' + skinList[i].name + '/datepicker.css" title="' + skinList[i].name + '" charset="' + skinList[i].charset + '" disabled="true"/>');
+}
+</script>
+<script type="text/javascript" src="calendar.js"></script>
+</head>
+<body leftmargin="0" topmargin="0" onload="$c.autoSize()" tabindex=0>
+</body>
+</html>
+<script>new My97DP();</script>
\ No newline at end of file
Index: src/main/webapp/WEB-INF/jsp/bill/billmodify.jsp
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/webapp/WEB-INF/jsp/bill/billmodify.jsp	(date 1594523856344)
+++ src/main/webapp/WEB-INF/jsp/bill/billmodify.jsp	(date 1594523856344)
@@ -0,0 +1,67 @@
+<%@ page language="java" contentType="text/html; charset=UTF-8"
+    pageEncoding="UTF-8"%>
+<%@include file="/WEB-INF/jsp/common/head.jsp"%>
+
+<div class="right">
+        <div class="location">
+            <strong>你现在所在的位置是:</strong>
+            <span>订单管理页面 >> 订单修改页面</span>
+        </div>
+        <div class="providerAdd">
+          <form id="billForm" name="billForm" method="post" action="${pageContext.request.contextPath }/sys/dobillmodify">
+				<input type="hidden" name="id" value="${bill.id }">
+                <!--div的class 为error是验证错误，ok是验证成功-->
+                <div class="">
+                    <label for="billCode">订单编码：</label>
+                    <input type="text" name="billcode" id="billCode" value="${bill.billcode }" readonly="readonly">
+                </div>
+                <div>
+                    <label for="productName">商品名称：</label>
+                    <input type="text" name="productname" id="productName" value="${bill.productname }">
+					<font color="red"></font>
+                </div>
+                <div>
+                    <label for="productUnit">商品单位：</label>
+                    <input type="text" name="productunit" id="productUnit" value="${bill.productunit }">
+					<font color="red"></font>
+                </div>
+                <div>
+                    <label for="productCount">商品数量：</label>
+                    <input type="text" name="productcount" id="productCount" value="${bill.productcount }">
+					<font color="red"></font>
+                </div>
+                <div>
+                    <label for="totalPrice">总金额：</label>
+                    <input type="text" name="totalprice" id="totalPrice" value="${bill.totalprice }">
+					<font color="red"></font>
+                </div>
+                <div>
+                    <label for="providerId">供应商：</label>
+                    <input type="hidden" value="${bill.providerid }" id="pid" />
+					<select name="providerid" id="providerId">
+		        	</select>
+					<font color="red"></font>
+                </div>
+                <div>
+                    <label >是否付款：</label>
+                    <c:if test="${bill.ispayment == 1 }">
+						<input type="radio" name="ispayment" value="1" checked="checked">未付款
+						<input type="radio" name="ispayment" value="2" >已付款
+					</c:if>
+					<c:if test="${bill.ispayment == 2 }">
+						<input type="radio" name="ispayment" value="1">未付款
+						<input type="radio" name="ispayment" value="2" checked="checked">已付款
+					</c:if>
+                </div>
+                <div class="providerAddBtn">
+                  <input type="button" name="save" id="save" value="保存">
+				  <input type="button" id="back" name="back" value="返回" >
+              	</div>
+            </form>
+        </div>
+
+    </div>
+</section>
+
+<%@include file="/WEB-INF/jsp/common/foot.jsp" %>
+<script type="text/javascript" src="${pageContext.request.contextPath }/statics/js/billmodify.js"></script>
\ No newline at end of file
Index: src/main/webapp/WEB-INF/jsp/bill/billview.jsp
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/webapp/WEB-INF/jsp/bill/billview.jsp	(date 1594519788570)
+++ src/main/webapp/WEB-INF/jsp/bill/billview.jsp	(date 1594519788570)
@@ -0,0 +1,29 @@
+<%@ page language="java" contentType="text/html; charset=UTF-8"
+    pageEncoding="UTF-8"%>
+<%@include file="/WEB-INF/jsp/common/head.jsp"%>
+<div class="right">
+     <div class="location">
+         <strong>你现在所在的位置是:</strong>
+         <span>订单管理页面 >> 信息查看</span>
+     </div>
+     <div class="providerView">
+         <p><strong>订单编号：</strong><span>${bill.billCode }</span></p>
+         <p><strong>商品名称：</strong><span>${bill.productName }</span></p>
+         <p><strong>商品单位：</strong><span>${bill.productUnit }</span></p>
+         <p><strong>商品数量：</strong><span>${bill.productCount }</span></p>
+         <p><strong>总金额：</strong><span>${bill.totalPrice }</span></p>
+         <p><strong>供应商：</strong><span>${bill.proName }</span></p>
+         <p><strong>是否付款：</strong>
+         	<span>
+         		<c:if test="${bill.isPayment == 1}">未付款</c:if>
+				<c:if test="${bill.isPayment == 2}">已付款</c:if>
+			</span>
+		</p>
+		<div class="providerAddBtn">
+         	<input type="button" id="back" name="back" value="返回" >
+        </div>
+     </div>
+ </div>
+</section>
+<%@include file="/WEB-INF/jsp/common/foot.jsp" %>
+<script type="text/javascript" src="${pageContext.request.contextPath }/statics/js/billview.js"></script>
\ No newline at end of file
Index: src/main/webapp/WEB-INF/jsp/user/useradd.jsp
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/webapp/WEB-INF/jsp/user/useradd.jsp	(date 1578576542272)
+++ src/main/webapp/WEB-INF/jsp/user/useradd.jsp	(date 1578576542272)
@@ -0,0 +1,72 @@
+<%@ page language="java" contentType="text/html; charset=UTF-8"
+    pageEncoding="UTF-8"%>
+<%@include file="/WEB-INF/jsp/common/head.jsp"%>
+
+<div class="right">
+        <div class="location">
+            <strong>你现在所在的位置是:</strong>
+            <span>用户管理页面 >> 用户添加页面</span>
+        </div>
+        <div class="providerAdd">
+            <form id="userForm" name="userForm" method="post" action="${path}/sys/saveuser">
+				<input type="hidden" name="method" value="add">
+                <!--div的class 为error是验证错误，ok是验证成功-->
+                <div>
+                    <label for="userCode">用户编码：</label>
+                    <input type="text" name="userCode" id="userCode" value=""> 
+					<!-- 放置提示信息 -->
+					<font color="red"></font>
+                </div>
+                <div>
+                    <label for="userName">用户名称：</label>
+                    <input type="text" name="userName" id="userName" value=""> 
+					<font color="red"></font>
+                </div>
+                <div>
+                    <label for="userPassword">用户密码：</label>
+                    <input type="password" name="userPassword" id="userPassword" value=""> 
+					<font color="red"></font>
+                </div>
+                <div>
+                    <label for="ruserPassword">确认密码：</label>
+                    <input type="password" name="ruserPassword" id="ruserPassword" value=""> 
+					<font color="red"></font>
+                </div>
+                <div>
+                    <label >用户性别：</label>
+					<select name="gender" id="gender">
+					    <option value="1" selected="selected">男</option>
+					    <option value="2">女</option>
+					 </select>
+                </div>
+                <div>
+                    <label for="birthday">出生日期：</label>
+                    <input type="text" Class="Wdate" id="birthday" name="birthday" 
+					readonly="readonly" onclick="WdatePicker();">
+					<font color="red"></font>
+                </div>
+                <div>
+                    <label for="phone">用户电话：</label>
+                    <input type="text" name="phone" id="phone" value=""> 
+					<font color="red"></font>
+                </div>
+                <div>
+                    <label for="address">用户地址：</label>
+                   <input name="address" id="address"  value="">
+                </div>
+                <div>
+                    <label >用户角色：</label>
+                    <!-- 列出所有的角色分类 -->
+					<select name="userRole" id="userRole"></select>
+	        		<font color="red"></font>
+                </div>
+                <div class="providerAddBtn">
+                    <input type="button" name="add" id="add" value="保存" >
+					<input type="button" id="back" name="back" value="返回" >
+                </div>
+            </form>
+        </div>
+</div>
+</section>
+<%@include file="/WEB-INF/jsp/common/foot.jsp" %>
+<script type="text/javascript" src="${pageContext.request.contextPath }/statics/js/useradd.js"></script>
Index: src/main/webapp/WEB-INF/jsp/pro/providermodify.jsp
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/webapp/WEB-INF/jsp/pro/providermodify.jsp	(date 1594527282745)
+++ src/main/webapp/WEB-INF/jsp/pro/providermodify.jsp	(date 1594527282745)
@@ -0,0 +1,58 @@
+<%@ page language="java" contentType="text/html; charset=UTF-8"
+    pageEncoding="UTF-8"%>
+<%@include file="/WEB-INF/jsp/common/head.jsp"%>
+
+  <div class="right">
+      <div class="location">
+          <strong>你现在所在的位置是:</strong>
+          <span>供应商管理页面 >> 供应商修改页</span>
+      </div>
+      <div class="providerAdd">
+          <form id="providerForm" name="providerForm" method="post" action="${path}/sys/providermodifysave">
+              <!--div的class 为error是验证错误，ok是验证成功-->
+              <div class="">
+                  <label for="proCode">供应商编码：</label>
+                  <input type="text" name="procode" id="proCode" value="${provider.procode }" readonly="readonly">
+              </div>
+              <div>
+                  <label for="proName">供应商名称：</label>
+                 <input type="text" name="proname" id="proName" value="${provider.proname }">
+			<font color="red"></font>
+              </div>
+              <input type="hidden" name="id" value="${provider.id}">
+              <div>
+                  <label for="proContact">联系人：</label>
+                  <input type="text" name="procontact" id="proContact" value="${provider.procontact }">
+			<font color="red"></font>
+              </div>
+              
+              <div>
+                  <label for="proPhone">联系电话：</label>
+                  <input type="text" name="prophone" id="proPhone" value="${provider.prophone }">
+			<font color="red"></font>
+              </div>
+              
+              <div>
+                  <label for="proAddress">联系地址：</label>
+                  <input type="text" name="proaddress" id="proAddress" value="${provider.proaddress }">
+              </div>
+              
+              <div>
+                  <label for="proFax">传真：</label>
+                  <input type="text" name="profax" id="proFax" value="${provider.profax }">
+              </div>
+              
+              <div>
+                  <label for="proDesc">描述：</label>
+                  <input type="text" name="prodesc" id="proDesc" value="${provider.prodesc }">
+              </div>
+              <div class="providerAddBtn">
+                  <input type="button" name="save" id="save" value="保存">
+				  <input type="button" id="back" name="back" value="返回" >
+              </div>
+          </form>
+      </div>
+  </div>
+</section>
+<%@include file="/WEB-INF/jsp/common/foot.jsp" %>
+<script type="text/javascript" src="${path}/statics/js/providermodify.js"></script>
\ No newline at end of file
Index: src/main/webapp/WEB-INF/jsp/bill/billlist.jsp
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/webapp/WEB-INF/jsp/bill/billlist.jsp	(date 1594520201889)
+++ src/main/webapp/WEB-INF/jsp/bill/billlist.jsp	(date 1594520201889)
@@ -0,0 +1,98 @@
+<%@ page language="java" contentType="text/html; charset=UTF-8"
+	pageEncoding="UTF-8"%>
+<%@include file="/WEB-INF/jsp/common/head.jsp"%>
+
+<div class="right">
+       <div class="location">
+           <strong>你现在所在的位置是:</strong>
+           <span>订单管理页面</span>
+       </div>
+       <div class="search">
+       <form method="get" action="${path}/sys/bill">
+			<span>商品名称：</span>
+			<input name="productName" type="text" value="${productName }">
+			 
+			<span>供应商：</span>
+			<select name="providerId">
+				<c:if test="${providerList != null }">
+				   <option value="0">--请选择--</option>
+				   <c:forEach var="provider" items="${providerList}">
+				   		<option <c:if test="${provider.id == providerId }">selected="selected"</c:if>
+				   		value="${provider.id}">${provider.proname}</option>
+				   </c:forEach>
+				</c:if>
+       		</select>
+			 
+			<span>是否付款：</span>
+			<select name="isPayment">
+				<option value="0">--请选择--</option>
+				<option value="1" ${isPayment == 1 ? "selected=\"selected\"":"" }>未付款</option>
+				<option value="2" ${isPayment == 2 ? "selected=\"selected\"":"" }>已付款</option>
+       		</select>
+			
+			 <input	value="查 询" type="submit" id="searchbutton">
+			 <a href="${path}/sys/billadd">添加订单</a>
+		</form>
+       </div>
+       <!--账单表格 样式和供应商公用-->
+      <table class="providerTable" cellpadding="0" cellspacing="0">
+          <tr class="firstTr">
+              <th width="10%">订单编码</th>
+              <th width="20%">商品名称</th>
+              <th width="10%">供应商</th>
+              <th width="10%">订单金额</th>
+              <th width="10%">是否付款</th>
+              <th width="10%">创建时间</th>
+              <th width="30%">操作</th>
+          </tr>
+          <c:forEach var="bill" items="${billList }" varStatus="status">
+				<tr>
+					<td>
+						<span>${bill.billCode }</span>
+					</td>
+					<td>
+						<span>${bill.productName }</span>
+					</td>
+					<td>
+						<span>${bill.proName}</span>
+					</td>
+					<td>
+						<span>${bill.totalPrice}</span>
+					</td>
+					<td>
+					<span>
+						<c:if test="${bill.isPayment == 1}">未付款</c:if>
+						<c:if test="${bill.isPayment == 2}">已付款</c:if>
+					</span>
+					</td>
+					<td>
+					<span>
+						<fmt:formatDate value="${bill.creationDate}" pattern="yyyy-MM-dd"/>
+					</span>
+					</td>
+					<td>
+						<span><a class="viewBill" href="${path }/sys/billview/${bill.id }"><img src="${path}/statics/images/read.png" alt="查看" title="查看"/></a></span>
+						<span><a class="modifyBill" href="${path }/sys/billmodify/${bill.id }"><img src="${path}/statics/images/xiugai.png" alt="修改" title="修改"/></a></span>
+						<span><a class="deleteBill" href="javascript:;" billid=${bill.id } billcc=${bill.billCode }><img src="${path}/statics/images/schu.png" alt="删除" title="删除"/></a></span>
+					</td>
+				</tr>
+			</c:forEach>
+      </table>
+  </div>
+</section>
+
+<!--点击删除按钮后弹出的页面-->
+<div class="zhezhao"></div>
+<div class="remove" id="removeBi">
+    <div class="removerChid">
+        <h2>提示</h2>
+        <div class="removeMain">
+            <p>你确定要删除该订单吗？</p>
+            <a href="#" id="yes">确定</a>
+            <a href="#" id="no">取消</a>
+        </div>
+    </div>
+</div>
+
+<%@include file="/WEB-INF/jsp/common/foot.jsp" %>
+<script type="text/javascript" src="${path}/statics/js/billlist.js"></script>
\ No newline at end of file
Index: src/main/webapp/WEB-INF/jsp/bill/billadd.jsp
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/webapp/WEB-INF/jsp/bill/billadd.jsp	(date 1594524040801)
+++ src/main/webapp/WEB-INF/jsp/bill/billadd.jsp	(date 1594524040801)
@@ -0,0 +1,60 @@
+<%@ page language="java" contentType="text/html; charset=UTF-8"
+    pageEncoding="UTF-8"%>
+<%@include file="/WEB-INF/jsp/common/head.jsp"%>
+
+<div class="right">
+     <div class="location">
+         <strong>你现在所在的位置是:</strong>
+         <span>订单管理页面 >> 订单添加页面</span>
+     </div>
+     <div class="providerAdd">
+         <form id="billForm" name="billForm" method="post" action="${path}/sys/dobilladd">
+             <!--div的class 为error是验证错误，ok是验证成功-->
+             <input type="hidden" name="method" value="add">
+             <div class="">
+                 <label for="billCode">订单编码：</label>
+                 <input type="text" name="billcode" class="text" id="billCode" value="">
+				 <!-- 放置提示信息 -->
+				 <font color="red"></font>
+             </div>
+             <div>
+                 <label for="productName">商品名称：</label>
+                 <input type="text" name="productname" id="productName" value="">
+				 <font color="red"></font>
+             </div>
+             <div>
+                 <label for="productUnit">商品单位：</label>
+                 <input type="text" name="productunit" id="productUnit" value="">
+				 <font color="red"></font>
+             </div>
+             <div>
+                 <label for="productCount">商品数量：</label>
+                 <input type="text" name="productcount" id="productCount" value="">
+				 <font color="red"></font>
+             </div>
+             <div>
+                 <label for="totalPrice">总金额：</label>
+                 <input type="text" name="totalprice" id="totalPrice" value="">
+				 <font color="red"></font>
+             </div>
+             <div>
+                 <label >供应商：</label>
+                 <select name="providerid" id="providerId">
+		         </select>
+				 <font color="red"></font>
+             </div>
+             <div>
+                 <label >是否付款：</label>
+                 <input type="radio" name="ispayment" value="1" checked="checked">未付款
+				 <input type="radio" name="ispayment" value="2" >已付款
+             </div>
+             <div class="providerAddBtn">
+                  <input type="button" name="add" id="add" value="保存">
+				  <input type="button" id="back" name="back" value="返回" >
+             </div>
+         </form>
+     </div>
+ </div>
+</section>
+<%@include file="/WEB-INF/jsp/common/foot.jsp" %>
+<script type="text/javascript" src="${path}/statics/js/billadd.js"></script>
\ No newline at end of file
Index: src/main/webapp/WEB-INF/jsp/user/usermodify.jsp
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/webapp/WEB-INF/jsp/user/usermodify.jsp	(date 1594539678598)
+++ src/main/webapp/WEB-INF/jsp/user/usermodify.jsp	(date 1594539678598)
@@ -0,0 +1,66 @@
+<%@ page language="java" contentType="text/html; charset=UTF-8"
+    pageEncoding="UTF-8"%>
+<%@include file="/WEB-INF/jsp/common/head.jsp"%>
+    <div class="right">
+        <div class="location">
+            <strong>你现在所在的位置是:</strong>
+            <span>用户管理页面 >> 用户修改页面</span>
+        </div>
+        <div class="providerAdd">
+        <form id="userForm" name="userForm" method="post" action="${path}/sys/modifyusersave">
+			<input type="hidden" name="method" value="modifyexe">
+			<input type="hidden" name="id" value="${user.id }"/>
+			 <div>
+                    <label for="userName">用户名称：</label>
+                    <input type="text" name="username" id="userName" value="${user.username }">
+					<font color="red"></font>
+             </div>
+			 <div>
+                    <label >用户性别：</label>
+                    <select name="gender" id="gender">
+						<c:choose>
+							<c:when test="${user.gender == 1 }">
+								<option value="1" selected="selected">男</option>
+					    		<option value="2">女</option>
+							</c:when>
+							<c:otherwise>
+								<option value="1">男</option>
+					    		<option value="2" selected="selected">女</option>
+							</c:otherwise>
+						</c:choose>
+					 </select>
+             </div>
+			 <div>
+                    <label for="data">出生日期：</label>
+                    <input type="text" Class="Wdate" id="birthday" name="birthday" value=<fmt:formatDate value="${user.birthday}" pattern="yyyy-MM-dd"/>
+					 readonly="readonly" onclick="WdatePicker();">
+					<span><fmt:formatDate value="${user.birthday}" pattern="yyyy-MM-dd"/></span>
+                    <font color="red"></font>
+              </div>
+			
+		       <div>
+                    <label for="userphone">用户电话：</label>
+                    <input type="text" name="phone" id="phone" value="${user.phone }"> 
+                    <font color="red"></font>
+               </div>
+                <div>
+                    <label for="userAddress">用户地址：</label>
+                    <input type="text" name="address" id="address" value="${user.address }">
+                </div>
+				<div>
+                    <label >用户角色：</label>
+                    <!-- 列出所有的角色分类 -->
+					<input type="hidden" value="${user.userrole }" id="rid" />
+					<select name="userrole" id="userRole"></select>
+        			<font color="red"></font>
+                </div>
+			 <div class="providerAddBtn">
+                    <input type="button" name="save" id="save" value="保存" />
+                    <input type="button" id="back" name="back" value="返回"/>
+                </div>
+            </form>
+        </div>
+    </div>
+</section>
+<%@include file="/WEB-INF/jsp/common/foot.jsp" %>
+<script type="text/javascript" src="${pageContext.request.contextPath }/statics/js/usermodify.js"></script>
Index: src/main/webapp/WEB-INF/jsp/common/head.jsp
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/webapp/WEB-INF/jsp/common/head.jsp	(date 1594378873493)
+++ src/main/webapp/WEB-INF/jsp/common/head.jsp	(date 1594378873493)
@@ -0,0 +1,43 @@
+<%@ page language="java" contentType="text/html; charset=UTF-8"
+	pageEncoding="UTF-8"%>
+<%@ taglib uri="http://java.sun.com/jsp/jstl/core" prefix="c" %>
+<%@ taglib uri="http://java.sun.com/jsp/jstl/fmt" prefix="fmt" %>	
+<c:set var="path" value="${pageContext.request.contextPath}"></c:set>
+<!DOCTYPE html>
+<html>
+<head lang="en">
+    <meta charset="UTF-8">
+    <title>超市订单管理系统</title>
+    <link type="text/css" rel="stylesheet" href="${path}/statics/css/style.css" />
+    <link type="text/css" rel="stylesheet" href="${path}/statics/css/public.css" />
+</head>
+<body>
+<!--头部-->
+    <header class="publicHeader">
+        <h1>超市订单管理系统</h1>
+        <div class="publicHeaderR">
+            <p><span>下午好！</span><span style="color: #fff21b"> ${userOnLogin.username }</span> , 欢迎你！</p>
+            <a href="${path}/sys/logout">退出</a>
+        </div>
+    </header>
+<!--时间-->
+    <section class="publicTime">
+        <span id="time">2020年7月10日 11:11  星期一</span>
+        <a href="#">温馨提示：为了能正常浏览，请使用高版本浏览器！（IE10+）</a>
+    </section>
+ <!--主体内容-->
+ <section class="publicMian ">
+     <div class="left">
+         <h2 class="leftH2"><span class="span1"></span>功能列表 <span></span></h2>
+         <nav>
+             <ul class="list">
+              <li ><a href="${path}/sys/bill">订单管理</a></li>
+              <li><a href="${path }/sys/provider">供应商管理</a></li>
+              <li><a href="${path }/sys/user">用户管理</a></li>
+              <li><a href="${path }/sys/pwdmodify">密码修改</a></li>
+              <li><a href="${path }/sys/logout">退出系统</a></li>
+             </ul>
+         </nav>
+     </div>
+     <input type="hidden" id="path" name="path" value="${pageContext.request.contextPath }"/>
+     <input type="hidden" id="referer" name="referer" value="<%=request.getHeader("Referer")%>"/>
\ No newline at end of file
Index: src/main/webapp/WEB-INF/jsp/common/foot.jsp
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/webapp/WEB-INF/jsp/common/foot.jsp	(date 1578576551223)
+++ src/main/webapp/WEB-INF/jsp/common/foot.jsp	(date 1578576551223)
@@ -0,0 +1,12 @@
+<%@ page language="java" contentType="text/html; charset=UTF-8"
+    pageEncoding="UTF-8"%>
+
+<footer class="footer">
+    Copyright © 2018 Markron Inc. 保留所有权利
+</footer>
+<script type="text/javascript" src="${pageContext.request.contextPath }/statics/js/time.js"></script>
+<script type="text/javascript" src="${pageContext.request.contextPath }/statics/js/jquery-1.8.3.min.js"></script>
+<script type="text/javascript" src="${pageContext.request.contextPath }/statics/js/common.js"></script>
+<script type="text/javascript" src="${pageContext.request.contextPath }/statics/calendar/WdatePicker.js"></script>
+</body>
+</html>
\ No newline at end of file
Index: src/main/webapp/WEB-INF/jsp/user/userlist.jsp
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/webapp/WEB-INF/jsp/user/userlist.jsp	(date 1594534609354)
+++ src/main/webapp/WEB-INF/jsp/user/userlist.jsp	(date 1594534609354)
@@ -0,0 +1,95 @@
+<%@ page language="java" contentType="text/html; charset=UTF-8"
+	pageEncoding="UTF-8"%>
+<%@include file="/WEB-INF/jsp/common/head.jsp"%>
+        <div class="right">
+            <div class="location">
+                <strong>你现在所在的位置是:</strong>
+                <span>用户管理页面</span>
+            </div>
+            <div class="search">
+           		<form method="get" action="${path }/sys/user">
+					 <span>用户名：</span>
+					 <input name="queryname" class="input-text"	type="text" value="${queryUserName }">
+					 
+					 <span>用户角色：</span>
+					 <select name="queryUserRole">
+						<c:if test="${roleList != null }">
+						   <option value="0">--请选择--</option>
+						   <c:forEach var="role" items="${roleList}">
+						   		<option <c:if test="${role.id == queryUserRole }">selected="selected"</c:if>
+						   		value="${role.id}">${role.rolename}</option>
+						   </c:forEach>
+						</c:if>
+	        		</select>
+					 
+					 <input type="hidden" name="pageIndex" value="1"/>
+					 <input	value="查 询" type="submit" id="searchbutton">
+					 <a href="${path}/sys/useradd" >添加用户</a>
+				</form>
+            </div>
+            <!--用户-->
+            <table class="providerTable" cellpadding="0" cellspacing="0">
+                <tr class="firstTr">
+                    <th width="10%">用户编码</th>
+                    <th width="20%">用户名称</th>
+                    <th width="10%">性别</th>
+                    <th width="10%">年龄</th>
+                    <th width="10%">电话</th>
+                    <th width="10%">用户角色</th>
+                    <th width="30%">操作</th>
+                </tr>
+                   <c:forEach var="user" items="${userList}" varStatus="status">
+					<tr>
+						<td>
+						<span>${user.usercode }</span>
+						</td>
+						<td>
+						<span>${user.username }</span>
+						</td>
+						<td>
+							<span>
+								<c:if test="${user.gender==1}">男</c:if>
+								<c:if test="${user.gender==2}">女</c:if>
+							</span>
+						</td>
+						<td>
+						<span>${user.age}</span>
+						</td>
+						<td>
+						<span>${user.phone}</span>
+						</td>
+						<td>
+							<span>${user.roleName}</span>
+						</td>
+						<td>
+						<span><a class="viewUser" href="javascript:;" userid=${user.id } username=${user.username }><img src="${path }/statics/images/read.png" alt="查看" title="查看"/></a></span>
+						<span><a class="modifyUser" href="javascript:;" userid=${user.id } username=${user.username }><img src="${path}/statics/images/xiugai.png" alt="修改" title="修改"/></a></span>
+						<span><a class="deleteUser" href="javascript:;" userid=${user.id } username=${user.username }><img src="${path}/statics/images/schu.png" alt="删除" title="删除"/></a></span>
+						</td>
+					</tr>
+				</c:forEach>
+			</table>
+			<input type="hidden" id="totalPageCount" value="${totalPage}"/>
+		  	<c:import url="rollpage.jsp">
+	          	<c:param name="totalCount" value="${totalCount}"/>
+	          	<c:param name="currentPageNo" value="${currentPage}"/>
+	          	<c:param name="totalPageCount" value="${totalPage}"/>
+          	</c:import>
+        </div>
+    </section>
+
+<!--点击删除按钮后弹出的页面-->
+<div class="zhezhao"></div>
+<div class="remove" id="removeUse">
+    <div class="removerChid">
+        <h2>提示</h2>
+        <div class="removeMain">
+            <p>你确定要删除该用户吗？</p>
+            <a href="#" id="yes">确定</a>
+            <a href="#" id="no">取消</a>
+        </div>
+    </div>
+</div>
+
+<%@include file="/WEB-INF/jsp/common/foot.jsp" %>
+<script type="text/javascript" src="${path }/statics/js/userlist.js"></script>
Index: src/main/webapp/WEB-INF/jsp/user/rollpage.jsp
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/webapp/WEB-INF/jsp/user/rollpage.jsp	(date 1578576542163)
+++ src/main/webapp/WEB-INF/jsp/user/rollpage.jsp	(date 1578576542163)
@@ -0,0 +1,40 @@
+<%@ page language="java" contentType="text/html; charset=UTF-8"
+    pageEncoding="UTF-8"%>
+<%@ taglib uri="http://java.sun.com/jsp/jstl/core" prefix="c" %>
+<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
+<html>
+<head>
+<meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
+<title>Insert title here</title>
+<script type="text/javascript">
+	
+</script>
+</head>
+<body>
+	
+ 		<div class="page-bar">
+			<ul class="page-num-ul clearfix">
+				<li>共${totalCount }条记录&nbsp;&nbsp; ${currentPage }/${totalPage }页</li>
+				<c:if test="${currentPage > 1}">
+					<a href="${pageContext.request.contextPath}/sys/user?currentPage=1&&queryname=${queryUserName}&queryUserRole=${queryUserRole}">首页</a>
+					<a href="${pageContext.request.contextPath}/sys/user?currentPage=${currentPage-1}&queryname=${queryUserName}&queryUserRole=${queryUserRole}">上一页</a>
+				</c:if>
+				<c:if test="${currentPage < totalPage }">
+					<a href="${pageContext.request.contextPath}/sys/user?currentPage=${currentPage+1 }&queryname=${queryUserName}&queryUserRole=${queryUserRole}">下一页</a>
+					<a href="${pageContext.request.contextPath}/sys/user?currentPage=${totalPage}&queryname=${queryUserName}&queryUserRole=${queryUserRole}">最后一页</a>
+				</c:if>
+				&nbsp;&nbsp;
+			</ul>
+			<form id="jump" action="${pageContext.request.contextPath }/sys/user">
+		 <span class="page-go-form"><label>跳转至</label>
+		 <input type="hidden" name="queryname" value="${queryUserName}"/>
+		 <input type="hidden" name="queryUserRole" value="${queryUserRole}"/>
+	     <input type="text" name="currentPage" id="inputPage" class="page-key" />页
+	     <!-- <button type="button" class="page-btn" onClick='jump_to(document.forms[0],document.getElementById("inputPage").value)'>GO</button> -->
+		 <button type="button" class="page-btn" onclick="jump_to()">GO</button>
+		</form>
+		</span>
+		</div> 
+</body>
+<script type="text/javascript" src="${pageContext.request.contextPath }/statics/js/rollpage.js"></script>
+</html>
\ No newline at end of file
Index: src/main/webapp/WEB-INF/jsp/user/pwdmodify.jsp
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/webapp/WEB-INF/jsp/user/pwdmodify.jsp	(date 1578576544622)
+++ src/main/webapp/WEB-INF/jsp/user/pwdmodify.jsp	(date 1578576544622)
@@ -0,0 +1,38 @@
+<%@ page language="java" contentType="text/html; charset=UTF-8"
+	pageEncoding="UTF-8"%>
+<%@include file="/WEB-INF/jsp/common/head.jsp"%>
+<div class="right">
+            <div class="location">
+                <strong>你现在所在的位置是:</strong>
+                <span>密码修改页面</span>
+            </div>
+            <div class="providerAdd">
+                <form id="userForm" name="userForm" method="post" action="${path}/sys/savepwdmodify">
+                    <input type="hidden" name="method" value="savepwd">
+                    <!--div的class 为error是验证错误，ok是验证成功-->
+                    <div class="info">${message}</div>
+                    <div class="">
+                        <label for="oldPassword">旧密码：</label>
+                        <input type="password" name="oldpassword" id="oldpassword" value=""> 
+						<font color="red"></font>
+                    </div>
+                    <div>
+                        <label for="newPassword">新密码：</label>
+                        <input type="password" name="newpassword" id="newpassword" value=""> 
+						<font color="red"></font>
+                    </div>
+                    <div>
+                        <label for="reNewPassword">确认新密码：</label>
+                        <input type="password" name="rnewpassword" id="rnewpassword" value=""> 
+						<font color="red"></font>
+                    </div>
+                    <div class="providerAddBtn">
+                        <!--<a href="#">保存</a>-->
+                        <input type="button" name="save" id="save" value="保存" class="input-button">
+                    </div>
+                </form>
+            </div>
+        </div>
+    </section>
+<%@include file="/WEB-INF/jsp/common/foot.jsp" %>
+<script type="text/javascript" src="${pageContext.request.contextPath }/statics/js/pwdmodify.js"></script>
\ No newline at end of file
Index: src/main/webapp/WEB-INF/jsp/user/userview.jsp
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/webapp/WEB-INF/jsp/user/userview.jsp	(date 1594535720457)
+++ src/main/webapp/WEB-INF/jsp/user/userview.jsp	(date 1594535720457)
@@ -0,0 +1,29 @@
+<%@ page language="java" contentType="text/html; charset=UTF-8"
+    pageEncoding="UTF-8"%>
+<%@include file="/WEB-INF/jsp/common/head.jsp"%>
+ <div class="right">
+        <div class="location">
+            <strong>你现在所在的位置是:</strong>
+            <span>用户管理页面 >> 用户信息查看页面</span>
+        </div>
+        <div class="providerView">
+            <p><strong>用户编号：</strong><span>${user.userCode }</span></p>
+            <p><strong>用户名称：</strong><span>${user.userName }</span></p>
+            <p><strong>用户性别：</strong>
+            	<span>
+            		<c:if test="${user.gender == 1 }">男</c:if>
+					<c:if test="${user.gender == 2 }">女</c:if>
+				</span>
+			</p>
+            <p><strong>出生日期：</strong><span><fmt:formatDate value="${user.birthday}" pattern="yyyy-MM-dd"/></span></p>
+            <p><strong>用户电话：</strong><span>${user.phone }</span></p>
+            <p><strong>用户地址：</strong><span>${user.address }</span></p>
+            <p><strong>用户角色：</strong><span>${user.roleName}</span></p>
+			<div class="providerAddBtn">
+            	<input type="button" id="back" name="back" value="返回" >
+            </div>
+        </div>
+    </div>
+</section>
+<%@include file="/WEB-INF/jsp/common/foot.jsp" %>
+<script type="text/javascript" src="${path}/statics/js/userview.js"></script>
\ No newline at end of file
Index: .idea/intellij-javadocs-4.0.1.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- .idea/intellij-javadocs-4.0.1.xml	(date 1594131707205)
+++ .idea/intellij-javadocs-4.0.1.xml	(date 1594131707205)
@@ -0,0 +1,141 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project version="4">
+  <component name="JavaDocConfiguration">
+    <GENERAL>
+      <MODE>UPDATE</MODE>
+      <OVERRIDDEN_METHODS>false</OVERRIDDEN_METHODS>
+      <SPLITTED_CLASS_NAME>true</SPLITTED_CLASS_NAME>
+      <LEVELS>
+        <LEVEL>METHOD</LEVEL>
+        <LEVEL>TYPE</LEVEL>
+        <LEVEL>FIELD</LEVEL>
+      </LEVELS>
+      <VISIBILITIES>
+        <VISIBILITY>PROTECTED</VISIBILITY>
+        <VISIBILITY>DEFAULT</VISIBILITY>
+        <VISIBILITY>PUBLIC</VISIBILITY>
+      </VISIBILITIES>
+    </GENERAL>
+    <TEMPLATES>
+      <CLASSES>
+        <CLASS>
+          <KEY>^.*(public|protected|private)*.+interface\s+\w+.*</KEY>
+          <VALUE>/**\n
+ * The interface ${name}.\n
+&lt;#if element.typeParameters?has_content&gt;        * \n
+&lt;/#if&gt;&lt;#list element.typeParameters as typeParameter&gt;        * @param &lt;${typeParameter.name}&gt; the type parameter\n
+&lt;/#list&gt; */</VALUE>
+        </CLASS>
+        <CLASS>
+          <KEY>^.*(public|protected|private)*.+enum\s+\w+.*</KEY>
+          <VALUE>/**\n
+ * The enum ${name}.\n
+ */</VALUE>
+        </CLASS>
+        <CLASS>
+          <KEY>^.*(public|protected|private)*.+class\s+\w+.*</KEY>
+          <VALUE>/**\n
+ * The type ${name}.\n
+&lt;#if element.typeParameters?has_content&gt;        * \n
+&lt;/#if&gt;&lt;#list element.typeParameters as typeParameter&gt;        * @param &lt;${typeParameter.name}&gt; the type parameter\n
+&lt;/#list&gt; */</VALUE>
+        </CLASS>
+        <CLASS>
+          <KEY>.+</KEY>
+          <VALUE>/**\n
+ * The type ${name}.\n
+ */</VALUE>
+        </CLASS>
+      </CLASSES>
+      <CONSTRUCTORS>
+        <CONSTRUCTOR>
+          <KEY>.+</KEY>
+          <VALUE>/**\n
+ * Instantiates a new ${name}.\n
+&lt;#if element.parameterList.parameters?has_content&gt;         *\n
+&lt;/#if&gt;&lt;#list element.parameterList.parameters as parameter&gt;         * @param ${parameter.name} the ${paramNames[parameter.name]}\n
+&lt;/#list&gt;&lt;#if element.throwsList.referenceElements?has_content&gt;         *\n
+&lt;/#if&gt;&lt;#list element.throwsList.referenceElements as exception&gt;         * @throws ${exception.referenceName} the ${exceptionNames[exception.referenceName]}\n
+&lt;/#list&gt; */</VALUE>
+        </CONSTRUCTOR>
+      </CONSTRUCTORS>
+      <METHODS>
+        <METHOD>
+          <KEY>^.*(public|protected|private)*\s*.*(\w(\s*&lt;.+&gt;)*)+\s+get\w+\s*\(.*\).+</KEY>
+          <VALUE>/**\n
+ * Gets ${partName}.\n
+&lt;#if element.typeParameters?has_content&gt;         * \n
+&lt;/#if&gt;&lt;#list element.typeParameters as typeParameter&gt;         * @param &lt;${typeParameter.name}&gt; the type parameter\n
+&lt;/#list&gt;&lt;#if element.parameterList.parameters?has_content&gt;         *\n
+&lt;/#if&gt;&lt;#list element.parameterList.parameters as parameter&gt;         * @param ${parameter.name} the ${paramNames[parameter.name]}\n
+&lt;/#list&gt;&lt;#if isNotVoid&gt;         *\n
+         * @return the ${partName}\n
+&lt;/#if&gt;&lt;#if element.throwsList.referenceElements?has_content&gt;         *\n
+&lt;/#if&gt;&lt;#list element.throwsList.referenceElements as exception&gt;         * @throws ${exception.referenceName} the ${exceptionNames[exception.referenceName]}\n
+&lt;/#list&gt; */</VALUE>
+        </METHOD>
+        <METHOD>
+          <KEY>^.*(public|protected|private)*\s*.*(void|\w(\s*&lt;.+&gt;)*)+\s+set\w+\s*\(.*\).+</KEY>
+          <VALUE>/**\n
+ * Sets ${partName}.\n
+&lt;#if element.typeParameters?has_content&gt;         * \n
+&lt;/#if&gt;&lt;#list element.typeParameters as typeParameter&gt;         * @param &lt;${typeParameter.name}&gt; the type parameter\n
+&lt;/#list&gt;&lt;#if element.parameterList.parameters?has_content&gt;         *\n
+&lt;/#if&gt;&lt;#list element.parameterList.parameters as parameter&gt;         * @param ${parameter.name} the ${paramNames[parameter.name]}\n
+&lt;/#list&gt;&lt;#if isNotVoid&gt;         *\n
+         * @return the ${partName}\n
+&lt;/#if&gt;&lt;#if element.throwsList.referenceElements?has_content&gt;         *\n
+&lt;/#if&gt;&lt;#list element.throwsList.referenceElements as exception&gt;         * @throws ${exception.referenceName} the ${exceptionNames[exception.referenceName]}\n
+&lt;/#list&gt; */</VALUE>
+        </METHOD>
+        <METHOD>
+          <KEY>^.*((public\s+static)|(static\s+public))\s+void\s+main\s*\(\s*String\s*(\[\s*\]|\.\.\.)\s+\w+\s*\).+</KEY>
+          <VALUE>/**\n
+ * The entry point of application.\n
+
+     &lt;#if element.parameterList.parameters?has_content&gt;         *\n
+&lt;/#if&gt;     * @param ${element.parameterList.parameters[0].name} the input arguments\n
+&lt;#if element.throwsList.referenceElements?has_content&gt;         *\n
+&lt;/#if&gt;&lt;#list element.throwsList.referenceElements as exception&gt;         * @throws ${exception.referenceName} the ${exceptionNames[exception.referenceName]}\n
+&lt;/#list&gt; */</VALUE>
+        </METHOD>
+        <METHOD>
+          <KEY>.+</KEY>
+          <VALUE>/**\n
+ * ${name}&lt;#if isNotVoid&gt; ${return}&lt;/#if&gt;.\n
+&lt;#if element.typeParameters?has_content&gt;         * \n
+&lt;/#if&gt;&lt;#list element.typeParameters as typeParameter&gt;         * @param &lt;${typeParameter.name}&gt; the type parameter\n
+&lt;/#list&gt;&lt;#if element.parameterList.parameters?has_content&gt;         *\n
+&lt;/#if&gt;&lt;#list element.parameterList.parameters as parameter&gt;         * @param ${parameter.name} the ${paramNames[parameter.name]}\n
+&lt;/#list&gt;&lt;#if isNotVoid&gt;         *\n
+         * @return the ${return}\n
+&lt;/#if&gt;&lt;#if element.throwsList.referenceElements?has_content&gt;         *\n
+&lt;/#if&gt;&lt;#list element.throwsList.referenceElements as exception&gt;         * @throws ${exception.referenceName} the ${exceptionNames[exception.referenceName]}\n
+&lt;/#list&gt; */</VALUE>
+        </METHOD>
+      </METHODS>
+      <FIELDS>
+        <FIELD>
+          <KEY>^.*(public|protected|private)*.+static.*(\w\s\w)+.+</KEY>
+          <VALUE>/**\n
+ * The constant ${element.getName()}.\n
+ */</VALUE>
+        </FIELD>
+        <FIELD>
+          <KEY>^.*(public|protected|private)*.*(\w\s\w)+.+</KEY>
+          <VALUE>/**\n
+    &lt;#if element.parent.isInterface()&gt;        * The constant ${element.getName()}.\n
+&lt;#else&gt;        * The ${name}.\n
+&lt;/#if&gt; */</VALUE>
+        </FIELD>
+        <FIELD>
+          <KEY>.+</KEY>
+          <VALUE>/**\n
+    &lt;#if element.parent.isEnum()&gt;        *${name} ${typeName}.\n
+&lt;#else&gt;        * The ${name}.\n
+&lt;/#if&gt;*/</VALUE>
+        </FIELD>
+      </FIELDS>
+    </TEMPLATES>
+  </component>
+</project>
\ No newline at end of file
Index: src/main/webapp/WEB-INF/jsp/login.jsp
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/webapp/WEB-INF/jsp/login.jsp	(date 1594377752406)
+++ src/main/webapp/WEB-INF/jsp/login.jsp	(date 1594377752406)
@@ -0,0 +1,39 @@
+<%@ page language="java" contentType="text/html; charset=UTF-8"
+    pageEncoding="UTF-8"%>
+<!DOCTYPE html>
+<html>
+<head lang="en">
+    <meta charset="UTF-8">
+    <title>系统登录 - 超市订单管理系统</title>
+    <link type="text/css" rel="stylesheet" href="${pageContext.request.contextPath }/statics/css/style.css" />
+    <script type="text/javascript">
+	
+    </script>
+</head>
+<body class="login_bg">
+    <section class="loginBox">
+        <header class="loginHeader">
+            <h1>超市订单管理系统</h1>
+        </header>
+        <section class="loginCont">
+            <%--http://localhost:8080/DemoTest2_war_exploded/dologin--%>
+	        <form class="loginForm" action="${pageContext.request.contextPath }/dologin"  name="actionForm" id="actionForm"  method="post" >
+				<div class="info">${error }${successSavePwd}</div>
+				<div class="inputbox">
+                    <label for="userCode">用户名：</label>
+					<input type="text" class="input-text" id="userCode" name="usercode" placeholder="请输入用户名" required/>
+				</div>	
+				<div class="inputbox">
+                    <label for="userPassword">密码：</label>
+                    <input type="password" id="userPassword" name="userpassword" placeholder="请输入密码" required/>
+                </div>	
+				<div class="subBtn">
+					
+                    <input type="submit" value="登录"/>
+                    <input type="reset" value="重置"/>
+                </div>	
+			</form>
+        </section>
+    </section>
+</body>
+</html>
Index: src/main/webapp/WEB-INF/jsp/frame.jsp
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/webapp/WEB-INF/jsp/frame.jsp	(date 1594378071497)
+++ src/main/webapp/WEB-INF/jsp/frame.jsp	(date 1594378071497)
@@ -0,0 +1,11 @@
+<%@ page language="java" import="java.util.*" pageEncoding="UTF-8"%>
+<%@include file="/WEB-INF/jsp/common/head.jsp"%>
+    <div class="right">
+        <img class="wColck" src="${pageContext.request.contextPath }/statics/images/clock.jpg" alt=""/>
+        <div class="wFont">
+            <h2>${userOnLogin.username }</h2>
+            <p>欢迎来到超市订单管理系统!</p>
+        </div>
+    </div>
+</section>
+<%@include file="/WEB-INF/jsp/common/foot.jsp" %>
Index: pom.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- pom.xml	(date 1594540282994)
+++ pom.xml	(date 1594540282994)
@@ -0,0 +1,230 @@
+<?xml version="1.0" encoding="UTF-8"?>
+
+<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
+  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
+  <modelVersion>4.0.0</modelVersion>
+
+  <groupId>org.example</groupId>
+  <artifactId>SuperMarketMaven</artifactId>
+  <version>1.0-SNAPSHOT</version>
+  <packaging>war</packaging>
+
+  <name>SuperMarketMaven Maven Webapp</name>
+  <!-- FIXME change it to the project's website -->
+  <url>http://www.example.com</url>
+
+  <properties>
+    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
+    <maven.compiler.source>1.7</maven.compiler.source>
+    <maven.compiler.target>1.7</maven.compiler.target>
+  </properties>
+
+  <dependencies>
+    <dependency>
+      <groupId>junit</groupId>
+      <artifactId>junit</artifactId>
+      <version>4.11</version>
+      <scope>test</scope>
+    </dependency>
+    <dependency>
+      <groupId>com.github.pagehelper</groupId>
+      <artifactId>pagehelper</artifactId>
+      <version>5.1.2</version>
+    </dependency>
+    <dependency>
+      <groupId>aopalliance</groupId>
+      <artifactId>aopalliance</artifactId>
+      <version>1.0</version>
+    </dependency>
+    <dependency>
+      <groupId>org.aspectj</groupId>
+      <artifactId>aspectjweaver</artifactId>
+      <version>1.6.9</version>
+    </dependency>
+    <dependency>
+      <groupId>commons-dbcp</groupId>
+      <artifactId>commons-dbcp</artifactId>
+      <version>1.4</version>
+    </dependency>
+    <dependency>
+      <groupId>commons-logging</groupId>
+      <artifactId>commons-logging</artifactId>
+      <version>1.1.1</version>
+    </dependency>
+    <dependency>
+      <groupId>commons-pool</groupId>
+      <artifactId>commons-pool</artifactId>
+      <version>1.6</version>
+    </dependency>
+    <dependency>
+      <groupId>com.alibaba</groupId>
+      <artifactId>fastjson</artifactId>
+      <version>1.2.13</version>
+    </dependency>
+    <dependency>
+      <groupId>com.fasterxml.jackson.core</groupId>
+      <artifactId>jackson-annotations</artifactId>
+      <version>2.7.1</version>
+    </dependency>
+    <dependency>
+      <groupId>com.fasterxml.jackson.core</groupId>
+      <artifactId>jackson-core</artifactId>
+      <version>2.7.1</version>
+    </dependency>
+    <dependency>
+      <groupId>com.fasterxml.jackson.core</groupId>
+      <artifactId>jackson-databind</artifactId>
+      <version>2.7.1</version>
+    </dependency>
+    <dependency>
+      <groupId>com.fasterxml.jackson.core</groupId>
+      <artifactId>jackson-databind</artifactId>
+      <version>2.7.1</version>
+    </dependency>
+    <dependency>
+      <groupId>net.sf.json-lib</groupId>
+      <artifactId>json-lib</artifactId>
+      <version>2.4</version>
+      <classifier>jdk15</classifier>
+    </dependency>
+    <dependency>
+      <groupId>javax.servlet</groupId>
+      <artifactId>jstl</artifactId>
+      <version>1.2</version>
+    </dependency>
+
+    <dependency>
+      <groupId>log4j</groupId>
+      <artifactId>log4j</artifactId>
+      <version>1.2.17</version>
+    </dependency>
+    <dependency>
+      <groupId>org.mybatis</groupId>
+      <artifactId>mybatis</artifactId>
+      <version>3.2.2</version>
+    </dependency>
+    <dependency>
+      <groupId>org.apache.velocity</groupId>
+      <artifactId>velocity-engine-core</artifactId>
+      <version>2.0</version>
+    </dependency>
+    <dependency>
+      <groupId>redis.clients</groupId>
+      <artifactId>jedis</artifactId>
+      <version>2.7.1</version>
+    </dependency>
+    <dependency>
+      <groupId>org.springframework.data</groupId>
+      <artifactId>spring-data-redis</artifactId>
+      <version>1.6.2.RELEASE</version>
+    </dependency>
+    <dependency>
+      <groupId>org.mybatis</groupId>
+      <artifactId>mybatis-spring</artifactId>
+      <version>1.2.0</version>
+    </dependency>
+    <dependency>
+      <groupId>mysql</groupId>
+      <artifactId>mysql-connector-java</artifactId>
+      <version>5.1.25</version>
+    </dependency>
+    <dependency>
+      <groupId>org.springframework</groupId>
+      <artifactId>spring-aop</artifactId>
+      <version>4.3.18.RELEASE</version>
+    </dependency>
+    <dependency>
+      <groupId>org.springframework</groupId>
+      <artifactId>spring-aspects</artifactId>
+      <version>4.3.18.RELEASE</version>
+    </dependency>
+    <dependency>
+      <groupId>org.springframework</groupId>
+      <artifactId>spring-beans</artifactId>
+      <version>4.3.18.RELEASE</version>
+    </dependency>
+    <dependency>
+      <groupId>org.springframework</groupId>
+      <artifactId>spring-context</artifactId>
+      <version>4.3.18.RELEASE</version>
+    </dependency>
+    <dependency>
+      <groupId>org.springframework</groupId>
+      <artifactId>spring-core</artifactId>
+      <version>4.3.18.RELEASE</version>
+    </dependency>
+    <dependency>
+      <groupId>org.springframework</groupId>
+      <artifactId>spring-expression</artifactId>
+      <version>4.3.18.RELEASE</version>
+    </dependency>
+    <dependency>
+      <groupId>org.springframework</groupId>
+      <artifactId>spring-jdbc</artifactId>
+      <version>4.3.18.RELEASE</version>
+    </dependency>
+    <dependency>
+      <groupId>org.springframework</groupId>
+      <artifactId>spring-test</artifactId>
+      <version>4.3.18.RELEASE</version>
+    </dependency>
+    <dependency>
+      <groupId>org.springframework</groupId>
+      <artifactId>spring-tx</artifactId>
+      <version>4.3.18.RELEASE</version>
+    </dependency>
+    <dependency>
+      <groupId>org.springframework</groupId>
+      <artifactId>spring-web</artifactId>
+      <version>4.3.18.RELEASE</version>
+    </dependency>
+    <dependency>
+      <groupId>org.springframework</groupId>
+      <artifactId>spring-webmvc</artifactId>
+      <version>4.3.18.RELEASE</version>
+    </dependency>
+    <dependency>
+      <groupId>taglibs</groupId>
+      <artifactId>standard</artifactId>
+      <version>1.1.2</version>
+    </dependency>
+
+  </dependencies>
+
+  <build>
+    <finalName>SuperMarketMaven</finalName>
+    <pluginManagement><!-- lock down plugins versions to avoid using Maven defaults (may be moved to parent pom) -->
+      <plugins>
+        <plugin>
+          <artifactId>maven-clean-plugin</artifactId>
+          <version>3.1.0</version>
+        </plugin>
+        <!-- see http://maven.apache.org/ref/current/maven-core/default-bindings.html#Plugin_bindings_for_war_packaging -->
+        <plugin>
+          <artifactId>maven-resources-plugin</artifactId>
+          <version>3.0.2</version>
+        </plugin>
+        <plugin>
+          <artifactId>maven-compiler-plugin</artifactId>
+          <version>3.8.0</version>
+        </plugin>
+        <plugin>
+          <artifactId>maven-surefire-plugin</artifactId>
+          <version>2.22.1</version>
+        </plugin>
+        <plugin>
+          <artifactId>maven-war-plugin</artifactId>
+          <version>3.2.2</version>
+        </plugin>
+        <plugin>
+          <artifactId>maven-install-plugin</artifactId>
+          <version>2.5.2</version>
+        </plugin>
+        <plugin>
+          <artifactId>maven-deploy-plugin</artifactId>
+          <version>2.8.2</version>
+        </plugin>
+      </plugins>
+    </pluginManagement>
+  </build>
+</project>
Index: .idea/$CACHE_FILE$
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- .idea/$CACHE_FILE$	(date 1594131707207)
+++ .idea/$CACHE_FILE$	(date 1594131707207)
@@ -0,0 +1,392 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project version="4">
+  <component name="ProjectInspectionProfilesVisibleTreeState">
+    <entry key="Project Default">
+      <profile-state>
+        <expanded-state>
+          <State />
+          <State>
+            <id>AOP</id>
+          </State>
+          <State>
+            <id>Abstraction issuesJava</id>
+          </State>
+          <State>
+            <id>Ali-Check</id>
+          </State>
+          <State>
+            <id>Android</id>
+          </State>
+          <State>
+            <id>Angular</id>
+          </State>
+          <State>
+            <id>Application SizePerformanceLintAndroid</id>
+          </State>
+          <State>
+            <id>Assignment issuesGroovy</id>
+          </State>
+          <State>
+            <id>Assignment issuesJava</id>
+          </State>
+          <State>
+            <id>Assignment issuesJavaScript and TypeScript</id>
+          </State>
+          <State>
+            <id>Async code and promisesJavaScript and TypeScript</id>
+          </State>
+          <State>
+            <id>Bitwise operation issuesJava</id>
+          </State>
+          <State>
+            <id>Bitwise operation issuesJavaScript and TypeScript</id>
+          </State>
+          <State>
+            <id>CSS</id>
+          </State>
+          <State>
+            <id>Class structureJava</id>
+          </State>
+          <State>
+            <id>Cloning issuesJava</id>
+          </State>
+          <State>
+            <id>Cloud Toolkit CodeGuidelines Check</id>
+          </State>
+          <State>
+            <id>Code maturityJava</id>
+          </State>
+          <State>
+            <id>Code quality toolsCSS</id>
+          </State>
+          <State>
+            <id>Code quality toolsJavaScript and TypeScript</id>
+          </State>
+          <State>
+            <id>Code style issuesCSS</id>
+          </State>
+          <State>
+            <id>Code style issuesJava</id>
+          </State>
+          <State>
+            <id>Code style issuesJavaScript and TypeScript</id>
+          </State>
+          <State>
+            <id>CodePlugin DevKit</id>
+          </State>
+          <State>
+            <id>CodeSpring CoreSpring</id>
+          </State>
+          <State>
+            <id>CoffeeScript</id>
+          </State>
+          <State>
+            <id>CommonReactive Streams</id>
+          </State>
+          <State>
+            <id>Control flow issuesJava</id>
+          </State>
+          <State>
+            <id>Control flow issuesJavaScript and TypeScript</id>
+          </State>
+          <State>
+            <id>CorrectnessLintAndroid</id>
+          </State>
+          <State>
+            <id>Data flowJava</id>
+          </State>
+          <State>
+            <id>Data flowJavaScript and TypeScript</id>
+          </State>
+          <State>
+            <id>Declaration redundancyJava</id>
+          </State>
+          <State>
+            <id>Dependency issuesJava</id>
+          </State>
+          <State>
+            <id>ECMAScript 6 migration aidsJavaScript and TypeScript</id>
+          </State>
+          <State>
+            <id>EditorConfig</id>
+          </State>
+          <State>
+            <id>EmbeddedPerformanceJava</id>
+          </State>
+          <State>
+            <id>EncapsulationJava</id>
+          </State>
+          <State>
+            <id>Error handlingGroovy</id>
+          </State>
+          <State>
+            <id>Error handlingJava</id>
+          </State>
+          <State>
+            <id>FinalizationJava</id>
+          </State>
+          <State>
+            <id>FlexUnit</id>
+          </State>
+          <State>
+            <id>Flow type checkerJavaScript and TypeScript</id>
+          </State>
+          <State>
+            <id>Function metricsJavaScript and TypeScript</id>
+          </State>
+          <State>
+            <id>General</id>
+          </State>
+          <State>
+            <id>GeneralJava</id>
+          </State>
+          <State>
+            <id>GeneralJavaScript and TypeScript</id>
+          </State>
+          <State>
+            <id>Google Web Toolkit</id>
+          </State>
+          <State>
+            <id>Groovy</id>
+          </State>
+          <State>
+            <id>HTML</id>
+          </State>
+          <State>
+            <id>Imports and dependenciesJavaScript and TypeScript</id>
+          </State>
+          <State>
+            <id>ImportsJava</id>
+          </State>
+          <State>
+            <id>Inheritance issuesJava</id>
+          </State>
+          <State>
+            <id>InitializationJava</id>
+          </State>
+          <State>
+            <id>Internationalization</id>
+          </State>
+          <State>
+            <id>InternationalizationJava</id>
+          </State>
+          <State>
+            <id>InternationalizationLintAndroid</id>
+          </State>
+          <State>
+            <id>InteroperabilityLintAndroid</id>
+          </State>
+          <State>
+            <id>JBoss Seam</id>
+          </State>
+          <State>
+            <id>JSP</id>
+          </State>
+          <State>
+            <id>JUnitJava</id>
+          </State>
+          <State>
+            <id>JVM languages</id>
+          </State>
+          <State>
+            <id>Java</id>
+          </State>
+          <State>
+            <id>Java 11Java language level migration aidsJava</id>
+          </State>
+          <State>
+            <id>Java 8Java language level migration aidsJava</id>
+          </State>
+          <State>
+            <id>Java interop issuesKotlin</id>
+          </State>
+          <State>
+            <id>Java language level issuesJava</id>
+          </State>
+          <State>
+            <id>Java language level migration aidsJava</id>
+          </State>
+          <State>
+            <id>JavaBeans issuesJava</id>
+          </State>
+          <State>
+            <id>JavaScript and TypeScript</id>
+          </State>
+          <State>
+            <id>JavadocJava</id>
+          </State>
+          <State>
+            <id>Kotlin</id>
+          </State>
+          <State>
+            <id>Kotlin InteroperabilityInteroperabilityLintAndroid</id>
+          </State>
+          <State>
+            <id>LintAndroid</id>
+          </State>
+          <State>
+            <id>LintLintAndroid</id>
+          </State>
+          <State>
+            <id>MemoryJava</id>
+          </State>
+          <State>
+            <id>MessagesCorrectnessLintAndroid</id>
+          </State>
+          <State>
+            <id>Method metricsJava</id>
+          </State>
+          <State>
+            <id>MigrationKotlin</id>
+          </State>
+          <State>
+            <id>Modularization issuesJava</id>
+          </State>
+          <State>
+            <id>Naming conventionsJava</id>
+          </State>
+          <State>
+            <id>Node.jsJavaScript and TypeScript</id>
+          </State>
+          <State>
+            <id>Nullability problemsProbable bugsJava</id>
+          </State>
+          <State>
+            <id>Numeric issuesJava</id>
+          </State>
+          <State>
+            <id>Packaging issuesJava</id>
+          </State>
+          <State>
+            <id>PerformanceJava</id>
+          </State>
+          <State>
+            <id>PerformanceLintAndroid</id>
+          </State>
+          <State>
+            <id>Plugin DevKit</id>
+          </State>
+          <State>
+            <id>PortabilityJava</id>
+          </State>
+          <State>
+            <id>Potentially confusing code constructsGroovy</id>
+          </State>
+          <State>
+            <id>Potentially confusing code constructsJavaScript and TypeScript</id>
+          </State>
+          <State>
+            <id>Potentially undesirable code constructsJavaScript and TypeScript</id>
+          </State>
+          <State>
+            <id>Probable bugsCoffeeScript</id>
+          </State>
+          <State>
+            <id>Probable bugsGroovy</id>
+          </State>
+          <State>
+            <id>Probable bugsJava</id>
+          </State>
+          <State>
+            <id>Probable bugsJavaScript and TypeScript</id>
+          </State>
+          <State>
+            <id>Probable bugsKotlin</id>
+          </State>
+          <State>
+            <id>Proofreading</id>
+          </State>
+          <State>
+            <id>Properties files</id>
+          </State>
+          <State>
+            <id>RESTful Web Service (JAX-RS)</id>
+          </State>
+          <State>
+            <id>Reactive Streams</id>
+          </State>
+          <State>
+            <id>Redundant constructsKotlin</id>
+          </State>
+          <State>
+            <id>RegExp</id>
+          </State>
+          <State>
+            <id>SQL</id>
+          </State>
+          <State>
+            <id>SecurityJava</id>
+          </State>
+          <State>
+            <id>SecurityLintAndroid</id>
+          </State>
+          <State>
+            <id>SetupSpring CoreSpring</id>
+          </State>
+          <State>
+            <id>Spring</id>
+          </State>
+          <State>
+            <id>Spring CoreSpring</id>
+          </State>
+          <State>
+            <id>Struts</id>
+          </State>
+          <State>
+            <id>Struts 2Struts</id>
+          </State>
+          <State>
+            <id>Style issuesKotlin</id>
+          </State>
+          <State>
+            <id>Threading issuesGroovy</id>
+          </State>
+          <State>
+            <id>Threading issuesJava</id>
+          </State>
+          <State>
+            <id>Try statement issuesJavaScript and TypeScript</id>
+          </State>
+          <State>
+            <id>TypeScriptJavaScript and TypeScript</id>
+          </State>
+          <State>
+            <id>TypographyUsabilityLintAndroid</id>
+          </State>
+          <State>
+            <id>UI form</id>
+          </State>
+          <State>
+            <id>Unit testingJavaScript and TypeScript</id>
+          </State>
+          <State>
+            <id>UsabilityLintAndroid</id>
+          </State>
+          <State>
+            <id>Validity issuesJavaScript and TypeScript</id>
+          </State>
+          <State>
+            <id>Verbose or redundant code constructsJava</id>
+          </State>
+          <State>
+            <id>VisibilityJava</id>
+          </State>
+          <State>
+            <id>XML</id>
+          </State>
+          <State>
+            <id>XPath</id>
+          </State>
+          <State>
+            <id>toString() issuesJava</id>
+          </State>
+        </expanded-state>
+        <selected-state>
+          <State>
+            <id>Ali-Check</id>
+          </State>
+        </selected-state>
+      </profile-state>
+    </entry>
+  </component>
+</project>
\ No newline at end of file
Index: src/main/resources/redis.properties
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>GBK
===================================================================
--- src/main/resources/redis.properties	(date 1594540643254)
+++ src/main/resources/redis.properties	(date 1594540643254)
@@ -0,0 +1,25 @@
+
+redis.host=r-2zefd929b25639c4pd.redis.rds.aliyuncs.com
+redis.port=6379
+redis.sentinel.port=26879
+redis.pwd=Lpc123456
+redis.database=0
+#逐出扫描的时间间隔(毫秒) 如果为负数,则不运行逐出线程, 默认-1
+redis.pool.timeBetweenEvictionRunsMillis=30000
+redis.pool.testOnBorrow=true
+# 连接超时时间
+redis.timeout=1000
+redis.userPool=true
+#最大空闲数
+redis.pool.maxIdle=100
+redis.pool.minIdle=10
+#控制一个pool可分配多少个jedis实例,用来替换上面的redis.maxActive,如果是jedis 2.4以后用该属性
+redis.pool.maxTotal=200
+#最大建立连接等待时间。如果超过此时间将接到异常。设为-1表示无限制。
+redis.pool.maxWaitMillis=10000
+#连接的最小空闲时间 默认1800000毫秒(30分钟)
+redis.pool.minEvictableIdleTimeMillis=300000
+#每次释放连接的最大数目,默认3
+redis.pool.numTestsPerEvictionRun=10
+redis.pool.testOnReturn=true
+redis.pool.testWhileIdle=true
\ No newline at end of file
Index: .idea/misc.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- .idea/misc.xml	(date 1594131759890)
+++ .idea/misc.xml	(date 1594131759890)
@@ -0,0 +1,17 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project version="4">
+  <component name="ExternalStorageConfigurationManager" enabled="true" />
+  <component name="FrameworkDetectionExcludesConfiguration">
+    <file type="web" url="file://$PROJECT_DIR$" />
+  </component>
+  <component name="MavenProjectsManager">
+    <option name="originalFiles">
+      <list>
+        <option value="$PROJECT_DIR$/pom.xml" />
+      </list>
+    </option>
+  </component>
+  <component name="ProjectRootManager" version="2" languageLevel="JDK_1_8" project-jdk-name="1.8" project-jdk-type="JavaSDK">
+    <output url="file://$PROJECT_DIR$/out" />
+  </component>
+</project>
\ No newline at end of file
Index: .idea/inspectionProfiles/Project_Default.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- .idea/inspectionProfiles/Project_Default.xml	(date 1594131710649)
+++ .idea/inspectionProfiles/Project_Default.xml	(date 1594131710649)
@@ -0,0 +1,36 @@
+<component name="InspectionProjectProfileManager">
+  <profile version="1.0">
+    <option name="myName" value="Project Default" />
+    <inspection_tool class="JavaDoc" enabled="true" level="WARNING" enabled_by_default="true">
+      <option name="TOP_LEVEL_CLASS_OPTIONS">
+        <value>
+          <option name="ACCESS_JAVADOC_REQUIRED_FOR" value="none" />
+          <option name="REQUIRED_TAGS" value="" />
+        </value>
+      </option>
+      <option name="INNER_CLASS_OPTIONS">
+        <value>
+          <option name="ACCESS_JAVADOC_REQUIRED_FOR" value="none" />
+          <option name="REQUIRED_TAGS" value="" />
+        </value>
+      </option>
+      <option name="METHOD_OPTIONS">
+        <value>
+          <option name="ACCESS_JAVADOC_REQUIRED_FOR" value="none" />
+          <option name="REQUIRED_TAGS" value="@return@param@throws or @exception" />
+        </value>
+      </option>
+      <option name="FIELD_OPTIONS">
+        <value>
+          <option name="ACCESS_JAVADOC_REQUIRED_FOR" value="none" />
+          <option name="REQUIRED_TAGS" value="" />
+        </value>
+      </option>
+      <option name="IGNORE_DEPRECATED" value="false" />
+      <option name="IGNORE_JAVADOC_PERIOD" value="true" />
+      <option name="IGNORE_DUPLICATED_THROWS" value="false" />
+      <option name="IGNORE_POINT_TO_ITSELF" value="false" />
+      <option name="myAdditionalJavadocTags" value="date" />
+    </inspection_tool>
+  </profile>
+</component>
\ No newline at end of file
Index: smbms.sql
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- smbms.sql	(date 1594544711232)
+++ smbms.sql	(date 1594544711232)
@@ -0,0 +1,190 @@
+/*
+ Navicat Premium Data Transfer
+
+ Source Server         : lpc-test.mysql.rds.aliyuncs.com
+ Source Server Type    : MySQL
+ Source Server Version : 50726
+ Source Host           : lpc-test.mysql.rds.aliyuncs.com:3306
+ Source Schema         : smbms
+
+ Target Server Type    : MySQL
+ Target Server Version : 50726
+ File Encoding         : 65001
+
+ Date: 12/07/2020 16:55:32
+*/
+
+SET NAMES utf8mb4;
+SET FOREIGN_KEY_CHECKS = 0;
+
+-- ----------------------------
+-- Table structure for smbms_address
+-- ----------------------------
+DROP TABLE IF EXISTS `smbms_address`;
+CREATE TABLE `smbms_address`  (
+  `id` bigint(20) NOT NULL AUTO_INCREMENT COMMENT '主键ID',
+  `contact` varchar(15) CHARACTER SET utf8 COLLATE utf8_unicode_ci NULL DEFAULT NULL COMMENT '联系人姓名',
+  `addressDesc` varchar(50) CHARACTER SET utf8 COLLATE utf8_unicode_ci NULL DEFAULT NULL COMMENT '收货地址明细',
+  `postCode` varchar(15) CHARACTER SET utf8 COLLATE utf8_unicode_ci NULL DEFAULT NULL COMMENT '邮编',
+  `tel` varchar(20) CHARACTER SET utf8 COLLATE utf8_unicode_ci NULL DEFAULT NULL COMMENT '联系人电话',
+  `createdBy` bigint(20) NULL DEFAULT NULL COMMENT '创建者',
+  `creationDate` datetime(0) NULL DEFAULT NULL COMMENT '创建时间',
+  `modifyBy` bigint(20) NULL DEFAULT NULL COMMENT '修改者',
+  `modifyDate` datetime(0) NULL DEFAULT NULL COMMENT '修改时间',
+  `userId` bigint(20) NULL DEFAULT NULL COMMENT '用户ID',
+  PRIMARY KEY (`id`) USING BTREE
+) ENGINE = InnoDB AUTO_INCREMENT = 7 CHARACTER SET = utf8 COLLATE = utf8_unicode_ci ROW_FORMAT = Compact;
+
+-- ----------------------------
+-- Records of smbms_address
+-- ----------------------------
+INSERT INTO `smbms_address` VALUES (1, '王丽', '北京市东城区东交民巷44号', '100010', '13678789999', 1, '2016-04-13 00:00:00', NULL, NULL, 1);
+INSERT INTO `smbms_address` VALUES (2, '张红丽', '北京市海淀区丹棱街3号', '100000', '18567672312', 1, '2016-04-13 00:00:00', NULL, NULL, 1);
+INSERT INTO `smbms_address` VALUES (3, '任志强', '北京市东城区美术馆后街23号', '100021', '13387906742', 1, '2016-04-13 00:00:00', NULL, NULL, 1);
+INSERT INTO `smbms_address` VALUES (4, '曹颖', '北京市朝阳区朝阳门南大街14号', '100053', '13568902323', 1, '2016-04-13 00:00:00', NULL, NULL, 2);
+INSERT INTO `smbms_address` VALUES (5, '李慧', '北京市西城区三里河路南三巷3号', '100032', '18032356666', 1, '2016-04-13 00:00:00', NULL, NULL, 3);
+INSERT INTO `smbms_address` VALUES (6, '王国强', '北京市顺义区高丽营镇金马工业区18号', '100061', '13787882222', 1, '2016-04-13 00:00:00', NULL, NULL, 3);
+
+-- ----------------------------
+-- Table structure for smbms_bill
+-- ----------------------------
+DROP TABLE IF EXISTS `smbms_bill`;
+CREATE TABLE `smbms_bill`  (
+  `id` bigint(20) NOT NULL AUTO_INCREMENT COMMENT '主键ID',
+  `billCode` varchar(20) CHARACTER SET utf8 COLLATE utf8_unicode_ci NULL DEFAULT NULL COMMENT '账单编码',
+  `productName` varchar(20) CHARACTER SET utf8 COLLATE utf8_unicode_ci NULL DEFAULT NULL COMMENT '商品名称',
+  `productDesc` varchar(50) CHARACTER SET utf8 COLLATE utf8_unicode_ci NULL DEFAULT NULL COMMENT '商品描述',
+  `productUnit` varchar(10) CHARACTER SET utf8 COLLATE utf8_unicode_ci NULL DEFAULT NULL COMMENT '商品单位',
+  `productCount` decimal(20, 2) NULL DEFAULT NULL COMMENT '商品数量',
+  `totalPrice` decimal(20, 2) NULL DEFAULT NULL COMMENT '商品总额',
+  `isPayment` int(10) NULL DEFAULT NULL COMMENT '是否支付（1：未支付 2：已支付）',
+  `createdBy` bigint(20) NULL DEFAULT NULL COMMENT '创建者（userId）',
+  `creationDate` datetime(0) NULL DEFAULT NULL COMMENT '创建时间',
+  `modifyBy` bigint(20) NULL DEFAULT NULL COMMENT '更新者（userId）',
+  `modifyDate` datetime(0) NULL DEFAULT NULL COMMENT '更新时间',
+  `providerId` bigint(20) NULL DEFAULT NULL COMMENT '供应商ID',
+  PRIMARY KEY (`id`) USING BTREE
+) ENGINE = InnoDB AUTO_INCREMENT = 20 CHARACTER SET = utf8 COLLATE = utf8_unicode_ci ROW_FORMAT = Compact;
+
+-- ----------------------------
+-- Records of smbms_bill
+-- ----------------------------
+INSERT INTO `smbms_bill` VALUES (1, 'BILL2016_001', '洗发水、护发素', '日用品-洗发、护发', '瓶', 500.00, 25000.00, 2, 1, '2014-12-14 13:02:03', NULL, NULL, 1);
+INSERT INTO `smbms_bill` VALUES (3, 'BILL2016_003', '大豆油', '食品-食用油', '斤', 300.00, 5890.00, 2, 1, '2014-12-14 13:02:03', NULL, NULL, 6);
+INSERT INTO `smbms_bill` VALUES (4, 'BILL2016_004', '橄榄油', '食品-进口食用油', '斤', 200.00, 9800.00, 2, 1, '2013-10-10 03:12:13', NULL, NULL, 7);
+INSERT INTO `smbms_bill` VALUES (5, 'BILL2016_005', '洗洁精', '日用品-厨房清洁', '瓶', 500.00, 7000.00, 2, 1, '2014-12-14 13:02:03', NULL, NULL, 9);
+INSERT INTO `smbms_bill` VALUES (6, 'BILL2016_006', '美国大杏仁', '食品-坚果', '袋', 300.00, 5000.00, 2, 1, '2016-04-14 06:08:09', NULL, NULL, 4);
+INSERT INTO `smbms_bill` VALUES (7, 'BILL2016_007', '沐浴液、精油', '日用品-沐浴类', '瓶', 500.00, 23000.00, 1, 1, '2016-07-22 10:10:22', NULL, NULL, 14);
+INSERT INTO `smbms_bill` VALUES (8, 'BILL2016_008', '不锈钢盘碗', '日用品-厨房用具', '个', 600.00, 6000.00, 2, 1, '2016-04-14 05:12:13', NULL, NULL, 14);
+INSERT INTO `smbms_bill` VALUES (9, 'BILL2016_009', '塑料杯', '日用品-杯子', '个', 350.00, 1750.00, 2, 1, '2016-02-04 11:40:20', NULL, NULL, 14);
+INSERT INTO `smbms_bill` VALUES (10, 'BILL2016_010', '豆瓣酱', '食品-调料', '瓶', 200.00, 2000.00, 2, 1, '2013-10-29 05:07:03', NULL, NULL, 8);
+INSERT INTO `smbms_bill` VALUES (11, 'BILL2016_011', '海之蓝', '饮料-国酒', '瓶', 50.00, 10000.00, 1, 1, '2016-04-14 16:16:00', NULL, NULL, 1);
+INSERT INTO `smbms_bill` VALUES (12, 'BILL2016_012', '芝华士', '饮料-洋酒', '瓶', 20.00, 6000.00, 1, 1, '2016-09-09 17:00:00', NULL, NULL, 1);
+INSERT INTO `smbms_bill` VALUES (13, 'BILL2016_013', '长城红葡萄酒', '饮料-红酒', '瓶', 60.00, 800.00, 2, 1, '2016-11-14 15:23:00', NULL, NULL, 1);
+INSERT INTO `smbms_bill` VALUES (14, 'BILL2016_014', '泰国香米', '食品-大米', '斤', 400.00, 5000.00, 2, 1, '2016-10-09 15:20:00', NULL, NULL, 3);
+INSERT INTO `smbms_bill` VALUES (15, 'BILL2016_015', '东北大米', '食品-大米', '斤', 600.00, 4000.00, 2, 1, '2016-11-14 14:00:00', NULL, NULL, 3);
+INSERT INTO `smbms_bill` VALUES (16, 'BILL2016_016', '可口可乐', '饮料', '瓶', 2000.00, 6000.00, 2, 1, '2012-03-27 13:03:01', NULL, NULL, 2);
+INSERT INTO `smbms_bill` VALUES (17, 'BILL2016_017', '脉动', '饮料', '瓶', 1500.00, 4500.00, 2, 1, '2016-05-10 12:00:00', NULL, NULL, 2);
+INSERT INTO `smbms_bill` VALUES (18, 'BILL2016_018', '哇哈哈', '饮料', '瓶', 2000.00, 4000.00, 2, 1, '2015-11-24 15:12:03', NULL, NULL, 2);
+INSERT INTO `smbms_bill` VALUES (19, 'BGF', '卫龙', NULL, '包', 100.00, 500.00, 1, NULL, NULL, NULL, NULL, 8);
+
+-- ----------------------------
+-- Table structure for smbms_provider
+-- ----------------------------
+DROP TABLE IF EXISTS `smbms_provider`;
+CREATE TABLE `smbms_provider`  (
+  `id` bigint(20) NOT NULL AUTO_INCREMENT COMMENT '主键ID',
+  `proCode` varchar(20) CHARACTER SET utf8 COLLATE utf8_unicode_ci NULL DEFAULT NULL COMMENT '供应商编码',
+  `proName` varchar(20) CHARACTER SET utf8 COLLATE utf8_unicode_ci NULL DEFAULT NULL COMMENT '供应商名称',
+  `proDesc` varchar(50) CHARACTER SET utf8 COLLATE utf8_unicode_ci NULL DEFAULT NULL COMMENT '供应商详细描述',
+  `proContact` varchar(20) CHARACTER SET utf8 COLLATE utf8_unicode_ci NULL DEFAULT NULL COMMENT '供应商联系人',
+  `proPhone` varchar(20) CHARACTER SET utf8 COLLATE utf8_unicode_ci NULL DEFAULT NULL COMMENT '联系电话',
+  `proAddress` varchar(50) CHARACTER SET utf8 COLLATE utf8_unicode_ci NULL DEFAULT NULL COMMENT '地址',
+  `proFax` varchar(20) CHARACTER SET utf8 COLLATE utf8_unicode_ci NULL DEFAULT NULL COMMENT '传真',
+  `createdBy` bigint(20) NULL DEFAULT NULL COMMENT '创建者（userId）',
+  `creationDate` datetime(0) NULL DEFAULT NULL COMMENT '创建时间',
+  `modifyDate` datetime(0) NULL DEFAULT NULL COMMENT '更新时间',
+  `modifyBy` bigint(20) NULL DEFAULT NULL COMMENT '更新者（userId）',
+  PRIMARY KEY (`id`) USING BTREE
+) ENGINE = InnoDB AUTO_INCREMENT = 17 CHARACTER SET = utf8 COLLATE = utf8_unicode_ci ROW_FORMAT = Compact;
+
+-- ----------------------------
+-- Records of smbms_provider
+-- ----------------------------
+INSERT INTO `smbms_provider` VALUES (2, 'HB_GYS001', '石家庄帅益食品贸易有限公司', '长期合作伙伴，主营产品:饮料、水饮料、植物蛋白饮料、休闲食品、果汁饮料、功能饮料等', '王军', '13309094212', '河北省石家庄新华区', '0311-67738876', 1, '2016-04-13 04:20:40', NULL, NULL);
+INSERT INTO `smbms_provider` VALUES (3, 'GZ_GYS001', '深圳市泰香米业有限公司', '初次合作伙伴，主营产品：良记金轮米,龙轮香米等', '郑程瀚', '13402013312', '广东省深圳市福田区深南大道6006华丰大厦', '0755-67776212', 1, '2014-03-21 16:56:07', NULL, NULL);
+INSERT INTO `smbms_provider` VALUES (4, 'GZ_GYS002', '深圳市喜来客商贸有限公司', '长期合作伙伴，主营产品：坚果炒货.果脯蜜饯.天然花茶.营养豆豆.特色美食.进口食品.海味零食.肉脯肉', '林妮', '18599897645', '广东省深圳市福龙工业区B2栋3楼西', '0755-67772341', 1, '2013-03-22 16:52:07', NULL, NULL);
+INSERT INTO `smbms_provider` VALUES (5, 'JS_GYS001', '兴化佳美调味品厂', '长期合作伙伴，主营产品：天然香辛料、鸡精、复合调味料', '徐国洋', '13754444221', '江苏省兴化市林湖工业区', '0523-21299098', 1, '2015-11-22 16:52:07', NULL, NULL);
+INSERT INTO `smbms_provider` VALUES (6, 'BJ_GYS002', '北京纳福尔食用油有限公司', '长期合作伙伴，主营产品：山茶油、大豆油、花生油、橄榄油等', '马莺', '13422235678', '北京市朝阳区珠江帝景1号楼', '010-588634233', 1, '2012-03-21 17:52:07', NULL, NULL);
+INSERT INTO `smbms_provider` VALUES (7, 'BJ_GYS003', '北京国粮食用油有限公司', '初次合作伙伴，主营产品：花生油、大豆油、小磨油等', '王驰', '13344441135', '北京大兴青云店开发区', '010-588134111', 1, '2016-04-13 00:00:00', NULL, NULL);
+INSERT INTO `smbms_provider` VALUES (8, 'ZJ_GYS001', '慈溪市广和绿色食品厂', '长期合作伙伴，主营产品：豆瓣酱、黄豆酱、甜面酱，辣椒，大蒜等农产品', '薛圣丹', '18099953223', '浙江省宁波市慈溪周巷小安村', '0574-34449090', 1, '2013-11-21 06:02:07', NULL, NULL);
+INSERT INTO `smbms_provider` VALUES (9, 'GX_GYS001', '优百商贸有限公司', '长期合作伙伴，主营产品：日化产品', '李立国', '13323566543', '广西南宁市秀厢大道42-1号', '0771-98861134', 1, '2013-03-21 19:52:07', NULL, NULL);
+INSERT INTO `smbms_provider` VALUES (10, 'JS_GYS002', '南京火头军信息技术有限公司', '长期合作伙伴，主营产品：不锈钢厨具等', '陈女士', '13098992113', '江苏省南京市浦口区浦口大道1号新城总部大厦A座903室', '025-86223345', 1, '2013-03-25 16:52:07', NULL, NULL);
+INSERT INTO `smbms_provider` VALUES (11, 'GZ_GYS003', '广州市白云区美星五金制品厂', '长期合作伙伴，主营产品：海绵床垫、坐垫、靠垫、海绵枕头、头枕等', '梁天', '13562276775', '广州市白云区钟落潭镇福龙路20号', '020-85542231', 1, '2016-12-21 06:12:17', NULL, NULL);
+INSERT INTO `smbms_provider` VALUES (12, 'BJ_GYS004', '北京隆盛日化科技', '长期合作伙伴，主营产品：日化环保清洗剂，家居洗涤专卖、洗涤用品网、墙体除霉剂、墙面霉菌清除剂等', '孙欣', '13689865678', '北京市大兴区旧宫', '010-35576786', 1, '2014-11-21 12:51:11', NULL, NULL);
+INSERT INTO `smbms_provider` VALUES (13, 'SD_GYS001', '山东豪克华光联合发展有限公司', '长期合作伙伴，主营产品：洗衣皂、洗衣粉、洗衣液、洗洁精、消杀类、香皂等', '吴洪转', '13245468787', '山东济阳济北工业区仁和街21号', '0531-53362445', 1, '2015-01-28 10:52:07', NULL, NULL);
+INSERT INTO `smbms_provider` VALUES (14, 'JS_GYS003', '无锡喜源坤商行', '长期合作伙伴，主营产品：日化品批销', '周一清', '18567674532', '江苏无锡盛岸西路', '0510-32274422', 1, '2016-04-23 11:11:11', NULL, NULL);
+INSERT INTO `smbms_provider` VALUES (15, 'ZJ_GYS002', '乐摆日用品厂', '长期合作伙伴，主营产品：各种中、高档塑料杯，塑料乐扣水杯（密封杯）、保鲜杯（保鲜盒）、广告杯、礼品杯', '王世杰', '13212331567', '浙江省金华市义乌市义东路', '0579-34452321', 1, '2016-08-22 10:01:30', NULL, NULL);
+INSERT INTO `smbms_provider` VALUES (16, '1', '11111', '111', '1111', '13566667777', '1111', '111', NULL, NULL, '2020-07-12 12:15:28', 1);
+
+-- ----------------------------
+-- Table structure for smbms_role
+-- ----------------------------
+DROP TABLE IF EXISTS `smbms_role`;
+CREATE TABLE `smbms_role`  (
+  `id` bigint(20) NOT NULL AUTO_INCREMENT COMMENT '主键ID',
+  `roleCode` varchar(15) CHARACTER SET utf8 COLLATE utf8_unicode_ci NULL DEFAULT NULL COMMENT '角色编码',
+  `roleName` varchar(15) CHARACTER SET utf8 COLLATE utf8_unicode_ci NULL DEFAULT NULL COMMENT '角色名称',
+  `createdBy` bigint(20) NULL DEFAULT NULL COMMENT '创建者',
+  `creationDate` datetime(0) NULL DEFAULT NULL COMMENT '创建时间',
+  `modifyBy` bigint(20) NULL DEFAULT NULL COMMENT '修改者',
+  `modifyDate` datetime(0) NULL DEFAULT NULL COMMENT '修改时间',
+  PRIMARY KEY (`id`) USING BTREE
+) ENGINE = InnoDB AUTO_INCREMENT = 4 CHARACTER SET = utf8 COLLATE = utf8_unicode_ci ROW_FORMAT = Compact;
+
+-- ----------------------------
+-- Records of smbms_role
+-- ----------------------------
+INSERT INTO `smbms_role` VALUES (1, 'SMBMS_ADMIN', '系统管理员', 1, '2016-04-13 00:00:00', NULL, NULL);
+INSERT INTO `smbms_role` VALUES (2, 'SMBMS_MANAGER', '经理', 1, '2016-04-13 00:00:00', NULL, NULL);
+INSERT INTO `smbms_role` VALUES (3, 'SMBMS_EMPLOYEE', '普通员工', 1, '2016-04-13 00:00:00', NULL, NULL);
+
+-- ----------------------------
+-- Table structure for smbms_user
+-- ----------------------------
+DROP TABLE IF EXISTS `smbms_user`;
+CREATE TABLE `smbms_user`  (
+  `id` int(20) NOT NULL AUTO_INCREMENT COMMENT '主键ID',
+  `userCode` varchar(15) CHARACTER SET utf8 COLLATE utf8_unicode_ci NULL DEFAULT NULL COMMENT '用户编码',
+  `userName` varchar(15) CHARACTER SET utf8 COLLATE utf8_unicode_ci NULL DEFAULT NULL COMMENT '用户名称',
+  `userPassword` varchar(15) CHARACTER SET utf8 COLLATE utf8_unicode_ci NULL DEFAULT NULL COMMENT '用户密码',
+  `gender` int(10) NULL DEFAULT NULL COMMENT '性别（1:女、 2:男）',
+  `birthday` date NULL DEFAULT NULL COMMENT '出生日期',
+  `phone` varchar(15) CHARACTER SET utf8 COLLATE utf8_unicode_ci NULL DEFAULT NULL COMMENT '手机',
+  `address` varchar(30) CHARACTER SET utf8 COLLATE utf8_unicode_ci NULL DEFAULT NULL COMMENT '地址',
+  `userRole` int(20) NULL DEFAULT NULL COMMENT '用户角色（取自角色表-角色id）',
+  `createdBy` int(20) NULL DEFAULT NULL COMMENT '创建者（userId）',
+  `creationDate` datetime(0) NULL DEFAULT NULL COMMENT '创建时间',
+  `modifyBy` int(20) NULL DEFAULT NULL COMMENT '更新者（userId）',
+  `modifyDate` datetime(0) NULL DEFAULT NULL COMMENT '更新时间',
+  PRIMARY KEY (`id`) USING BTREE
+) ENGINE = InnoDB AUTO_INCREMENT = 17 CHARACTER SET = utf8 COLLATE = utf8_unicode_ci ROW_FORMAT = Compact;
+
+-- ----------------------------
+-- Records of smbms_user
+-- ----------------------------
+INSERT INTO `smbms_user` VALUES (1, 'admin', '系统管理员', '1234567', 1, '1983-10-10', '13688889999', '北京市海淀区成府路207号', 1, 1, '2013-03-21 16:52:07', 1, '2020-01-11 09:41:01');
+INSERT INTO `smbms_user` VALUES (2, 'liming', '李明', '0000000', 2, '1983-12-10', '13688884457', '北京市东城区前门东大街9号', 1, 1, '2014-12-31 19:52:09', NULL, NULL);
+INSERT INTO `smbms_user` VALUES (5, 'hanlubiao', '韩路彪', '0000000', 2, '1984-06-05', '18567542321', '北京市朝阳区北辰中心12号', 2, 1, '2014-12-31 19:52:09', NULL, NULL);
+INSERT INTO `smbms_user` VALUES (6, 'zhanghua', '张华', '0000000', 1, '1983-06-15', '13544561111', '北京市海淀区学院路61号', 3, 1, '2013-02-11 10:51:17', NULL, NULL);
+INSERT INTO `smbms_user` VALUES (7, 'wangyang', '王洋', '0000000', 2, '1982-12-31', '13444561124', '北京市海淀区西二旗辉煌国际16层', 3, 1, '2014-06-11 19:09:07', NULL, NULL);
+INSERT INTO `smbms_user` VALUES (8, 'zhaoyan', '赵燕', '0000000', 1, '1986-03-07', '18098764545', '北京市海淀区回龙观小区10号楼', 3, 1, '2016-04-21 13:54:07', NULL, NULL);
+INSERT INTO `smbms_user` VALUES (10, 'sunlei', '孙磊', '0000000', 2, '1981-01-04', '13387676765', '北京市朝阳区管庄新月小区12楼', 3, 1, '2015-05-06 10:52:07', NULL, NULL);
+INSERT INTO `smbms_user` VALUES (11, 'sunxing', '孙兴', '0000000', 2, '1978-03-12', '13367890900', '北京市朝阳区建国门南大街10号', 3, 1, '2016-11-09 16:51:17', NULL, NULL);
+INSERT INTO `smbms_user` VALUES (12, 'zhangchen', '张晨', '0000000', 1, '1986-03-28', '18098765434', '朝阳区管庄路口北柏林爱乐三期13号楼', 3, 1, '2016-08-09 05:52:37', 1, '2016-04-14 14:15:36');
+INSERT INTO `smbms_user` VALUES (13, 'dengchao', '邓超', '0000000', 2, '1981-11-04', '13689674534', '北京市海淀区北航家属院10号楼', 3, 1, '2016-07-11 08:02:47', NULL, NULL);
+INSERT INTO `smbms_user` VALUES (14, 'yangguo', '杨过', '0000000', 2, '1980-01-01', '13388886623', '北京市朝阳区北苑家园茉莉园20号楼', 3, 1, '2015-02-01 03:52:07', NULL, NULL);
+INSERT INTO `smbms_user` VALUES (15, 'zhaomin', '赵敏', '0000000', 1, '1987-12-04', '18099897657', '北京市昌平区天通苑3区12号楼', 2, 1, '2015-09-12 12:02:12', NULL, NULL);
+INSERT INTO `smbms_user` VALUES (16, '110011', '李金超', '123456789', 1, '2020-07-06', '18311111111', '河南', 1, NULL, NULL, NULL, NULL);
+
+SET FOREIGN_KEY_CHECKS = 1;
Index: src/main/resources/applicationContext-redis.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/resources/applicationContext-redis.xml	(date 1594540670352)
+++ src/main/resources/applicationContext-redis.xml	(date 1594540670352)
@@ -0,0 +1,66 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<beans xmlns="http://www.springframework.org/schema/beans"
+       xmlns:context="http://www.springframework.org/schema/context"
+       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
+       xsi:schemaLocation="
+    http://www.springframework.org/schema/beans
+    http://www.springframework.org/schema/beans/spring-beans.xsd
+    http://www.springframework.org/schema/context
+    http://www.springframework.org/schema/context/spring-context.xsd">
+    <context:property-placeholder order="1" location="classpath:redis.properties" ignore-unresolvable="true"/>
+    <!-- Redis -->
+    <!-- 连接池参数 -->
+    <bean id="jedisPoolConfig" class="redis.clients.jedis.JedisPoolConfig">
+        <property name="maxIdle" value="${redis.pool.maxIdle}" />
+        <property name="minIdle" value="${redis.pool.minIdle}" />
+        <property name="maxTotal" value="${redis.pool.maxTotal}" />
+        <property name="maxWaitMillis" value="${redis.pool.maxWaitMillis}" />
+        <property name="minEvictableIdleTimeMillis" value="${redis.pool.minEvictableIdleTimeMillis}"></property>
+        <property name="numTestsPerEvictionRun" value="${redis.pool.numTestsPerEvictionRun}"></property>
+        <property name="timeBetweenEvictionRunsMillis" value="${redis.pool.timeBetweenEvictionRunsMillis}"></property>
+        <property name="testOnBorrow" value="${redis.pool.testOnBorrow}" />
+        <property name="testOnReturn" value="${redis.pool.testOnReturn}" />
+        <property name="testWhileIdle" value="${redis.pool.testWhileIdle}"></property>
+    </bean>
+
+    <bean id="jedisConnectionFactory" class="org.springframework.data.redis.connection.jedis.JedisConnectionFactory">
+        <property name="poolConfig" ref="jedisPoolConfig" />
+        <property name="hostName" value="${redis.host}" />
+        <property name="port" value="${redis.port}" />
+        <property name="password" value="${redis.pwd}" />
+        <property name="usePool" value="${redis.userPool}" />
+        <property name="database" value="${redis.database}" />
+        <property name="timeout" value="${redis.timeout}" />
+    </bean>
+
+    <bean id="redisTemplate" class="org.springframework.data.redis.core.RedisTemplate">
+        <property name="connectionFactory" ref="jedisConnectionFactory" />
+
+        <!-- 序列化方式 建议key/hashKey采用StringRedisSerializer -->
+        <property name="keySerializer">
+            <bean
+                    class="org.springframework.data.redis.serializer.StringRedisSerializer" />
+        </property>
+        <property name="valueSerializer">
+            <bean
+                    class="org.springframework.data.redis.serializer.JdkSerializationRedisSerializer" />
+        </property>
+        <property name="hashKeySerializer">
+            <bean
+                    class="org.springframework.data.redis.serializer.StringRedisSerializer" />
+        </property>
+        <property name="hashValueSerializer">
+            <bean class="org.springframework.data.redis.serializer.JdkSerializationRedisSerializer" />
+        </property>
+        <!-- 开启REIDS事务支持 -->
+        <property name="enableTransactionSupport" value="false" />
+    </bean>
+
+    <!-- 对string操作的封装 -->
+    <bean id="stringRedisTemplate" class="org.springframework.data.redis.core.StringRedisTemplate">
+        <constructor-arg ref="jedisConnectionFactory" />
+        <!-- 开启REIDS事务支持 -->
+        <property name="enableTransactionSupport" value="false" />
+    </bean>
+
+</beans>
\ No newline at end of file
Index: src/main/java/com/lpc/constant/ConstantKey.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/java/com/lpc/constant/ConstantKey.java	(date 1594542931407)
+++ src/main/java/com/lpc/constant/ConstantKey.java	(date 1594542931407)
@@ -0,0 +1,19 @@
+package com.lpc.constant;
+
+/**
+ * @User lpc/李金超
+ * @ClassName ConstantKey  类名
+ * @Author AUSUA  作者
+ * @Date 2020/7/12 16:25  时间
+ * @Version 1.0 版本
+ */
+public class ConstantKey {
+
+    public static final String PROVIDERLIST="providerList";
+    public static final String BILLLIST = "billList";
+    public static final String BILLSELECT = "billselect";
+    //带模糊
+    public static final String PROVIDERLIST2 = "providerList2";
+    public static final String ROLELIST = "roleList";
+
+}
Index: src/main/java/com/lpc/utils/CacheContextUtil.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/java/com/lpc/utils/CacheContextUtil.java	(date 1594540703992)
+++ src/main/java/com/lpc/utils/CacheContextUtil.java	(date 1594540703992)
@@ -0,0 +1,46 @@
+package com.lpc.utils;
+
+
+import org.springframework.beans.BeansException;
+import org.springframework.context.ApplicationContext;
+import org.springframework.context.ApplicationContextAware;
+import org.springframework.stereotype.Component;
+
+
+/**
+  * Context 工具类
+  */
+@SuppressWarnings("static-access")
+@Component
+public class CacheContextUtil implements ApplicationContextAware {
+    private static ApplicationContext commonApplicationContext;
+
+
+    @Override
+    public void setApplicationContext(ApplicationContext context) throws BeansException {
+        commonApplicationContext = context;
+    }
+
+
+    /**
+     *      * 根据提供的bean名称得到相应的服务类
+     *      * @param beanId bean的id
+     *      * @return 返回bean的实例对象
+     *      
+     */
+    public static Object getBean(String beanId) {
+        return commonApplicationContext.getBean(beanId);
+    }
+
+
+    /**
+     *      * 根据提供的bean名称得到对应于指定类型的服务类
+     *      * @param beanId bean的id
+     *      * @param clazz bean的类类型
+     *      * @return 返回的bean类型,若类型不匹配,将抛出异常
+     *      
+     */
+    public static <T> T getBean(String beanId, Class<T> clazz) {
+        return commonApplicationContext.getBean(beanId, clazz);
+    }
+}
\ No newline at end of file
Index: src/main/java/com/lpc/utils/RedisUtil.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/java/com/lpc/utils/RedisUtil.java	(date 1594540716196)
+++ src/main/java/com/lpc/utils/RedisUtil.java	(date 1594540716196)
@@ -0,0 +1,958 @@
+package com.lpc.utils;
+
+import org.slf4j.Logger;
+import org.slf4j.LoggerFactory;
+import org.springframework.data.redis.core.RedisTemplate;
+import org.springframework.data.redis.core.StringRedisTemplate;
+
+import java.util.*;
+import java.util.concurrent.TimeUnit;
+
+/**
+ * redis工具类
+ *
+ */
+@SuppressWarnings("unchecked")
+public class RedisUtil {
+
+    private static final Logger LOG = LoggerFactory.getLogger(RedisUtil.class);
+
+    private static RedisTemplate<String, Object> redisTemplate = CacheContextUtil.getBean("redisTemplate", RedisTemplate.class);
+
+    private static StringRedisTemplate stringRedisTemplate = CacheContextUtil.getBean("stringRedisTemplate", StringRedisTemplate.class);
+
+    private static String CACHE_PREFIX;
+
+    private static boolean CACHE_CLOSED;
+
+    private RedisUtil() {
+
+    }
+
+    @SuppressWarnings("rawtypes")
+    private static boolean isEmpty(Object obj) {
+        if (obj == null) {
+            return true;
+        }
+        if (obj instanceof String) {
+            String str = obj.toString();
+            if ("".equals(str.trim())) {
+                return true;
+            }
+            return false;
+        }
+        if (obj instanceof List) {
+            List<Object> list = (List<Object>) obj;
+            if (list.isEmpty()) {
+                return true;
+            }
+            return false;
+        }
+        if (obj instanceof Map) {
+            Map map = (Map) obj;
+            if (map.isEmpty()) {
+                return true;
+            }
+            return false;
+        }
+        if (obj instanceof Set) {
+            Set set = (Set) obj;
+            if (set.isEmpty()) {
+                return true;
+            }
+            return false;
+        }
+        if (obj instanceof Object[]) {
+            Object[] objs = (Object[]) obj;
+            if (objs.length <= 0) {
+                return true;
+            }
+            return false;
+        }
+        return false;
+    }
+    /**
+     * 构建缓存key值
+     * @param key   缓存key
+     * @return
+     */
+    private static String buildKey(String key) {
+        if (CACHE_PREFIX == null || "".equals(CACHE_PREFIX)) {
+            return key;
+        }
+        return CACHE_PREFIX + ":" + key;
+    }
+    /**
+     * 返回缓存的前缀
+     * @return CACHE_PREFIX_FLAG
+     */
+    public static String getCachePrefix() {
+        return CACHE_PREFIX;
+    }
+    /**
+     * 设置缓存的前缀
+     * @param cachePrefix
+     */
+    public static void setCachePrefix(String cachePrefix) {
+        if (cachePrefix != null && !"".equals(cachePrefix.trim())) {
+            CACHE_PREFIX = cachePrefix.trim();
+        }
+    }
+    /**
+     * 关闭缓存
+     * @return  true:成功
+     *      false:失败
+     */
+    public static boolean close() {
+        LOG.debug(" cache closed ! ");
+        CACHE_CLOSED = true;
+        return true;
+    }
+    /**
+     * 打开缓存
+     * @return  true:存在
+     *      false:不存在
+     */
+    public static boolean openCache() {
+        CACHE_CLOSED = false;
+        return true;
+    }
+    /**
+     * 检查缓存是否开启
+     * @return  true:已关闭
+     *      false:已开启
+     */
+    public static boolean isClose() {
+        return CACHE_CLOSED;
+    }
+    /**
+     * 判断key值是否存在
+     * @param key   缓存的key
+     * @return  true:存在
+     *      false:不存在
+     */
+    public static boolean hasKey(String key) {
+        LOG.debug(" hasKey key :{}", key);
+        try {
+            if (isClose() || isEmpty(key)) {
+                return false;
+            }
+            key = buildKey(key);
+            return redisTemplate.hasKey(key);
+        } catch (Exception e) {
+            LOG.error(e.getMessage(), e);
+        }
+        return false;
+    }
+    /**
+     * 匹配符合正则的key
+     * @param patternKey
+     * @return key的集合
+     */
+    public static Set<String> keys(String patternKey) {
+        LOG.debug(" keys key :{}", patternKey);
+        try {
+            if (isClose() || isEmpty(patternKey)) {
+                return Collections.emptySet();
+            }
+            return redisTemplate.keys(patternKey);
+        } catch (Exception e) {
+            LOG.error(e.getMessage(), e);
+        }
+        return Collections.emptySet();
+    }
+
+    /**
+     * 根据key删除缓存
+     * @param key
+     * @return  true:成功
+     *      false:失败
+     */
+    public static boolean del(String... key) {
+        LOG.debug(" delete key :{}", key.toString());
+        try {
+            if (isClose() || isEmpty(key)) {
+                return false;
+            }
+            Set<String> keySet = new HashSet<>();
+            for (String str : key) {
+                keySet.add(buildKey(str));
+            }
+            redisTemplate.delete(keySet);
+            return true;
+        } catch (Exception e) {
+            LOG.error(e.getMessage(), e);
+        }
+        return false;
+    }
+
+    /**
+     * 根据key删除缓存
+     * @param key
+     * @return  true:成功
+     *      false:失败
+     */
+    public static boolean delPattern(String key) {
+        LOG.debug(" delete Pattern keys :{}", key);
+        try {
+            if (isClose() || isEmpty(key)) {
+                return false;
+            }
+            key = buildKey(key);
+            redisTemplate.delete(redisTemplate.keys(key));
+            return true;
+        } catch (Exception e) {
+            LOG.error(e.getMessage(), e);
+        }
+        return false;
+    }
+
+    /**
+     * 删除一组key值
+     * @param keys
+     * @return  true:成功
+     *      false:失败
+     */
+    public static boolean del(Set<String> keys) {
+        LOG.debug(" delete keys :{}", keys.toString());
+        try {
+            if (isClose() || isEmpty(keys)) {
+                return false;
+            }
+            Set<String> keySet = new HashSet<>();
+            for (String str : keys) {
+                keySet.add(buildKey(str));
+            }
+            redisTemplate.delete(keySet);
+            return true;
+        } catch (Exception e) {
+            LOG.error(e.getMessage(), e);
+        }
+        return false;
+    }
+
+    /**
+     * 设置过期时间
+     * @param key   缓存key
+     * @param seconds   过期秒数
+     * @return  true:成功
+     *      false:失败
+     */
+    public static boolean setExp(String key, long seconds) {
+        LOG.debug(" setExp key :{}, seconds: {}", key, seconds);
+        try {
+            if (isClose() || isEmpty(key) || seconds > 0) {
+                return false;
+            }
+            key = buildKey(key);
+            return redisTemplate.expire(key, seconds, TimeUnit.SECONDS);
+        } catch (Exception e) {
+            LOG.error(e.getMessage(), e);
+        }
+        return false;
+    }
+
+    /**
+     * 查询过期时间
+     * @param key   缓存key
+     * @return  秒数
+     */
+    public static Long getExpire(String key) {
+        LOG.debug(" getExpire key :{}", key);
+        try {
+            if (isClose() || isEmpty(key)) {
+                return 0L;
+            }
+            key = buildKey(key);
+            return redisTemplate.getExpire(key, TimeUnit.SECONDS);
+        } catch (Exception e) {
+            LOG.error(e.getMessage(), e);
+        }
+        return 0L;
+    }
+
+    /**
+     * 缓存存入key-value
+     * @param key   缓存键
+     * @param value 缓存值
+     * @return  true:成功
+     *      false:失败
+     */
+    public static boolean setString(String key, String value) {
+        LOG.debug(" setString key :{}, value: {}", key, value);
+        try {
+            if (isClose() || isEmpty(key) || isEmpty(value)) {
+                return false;
+            }
+            key = buildKey(key);
+            stringRedisTemplate.opsForValue().set(key, value);
+            return true;
+        } catch (Exception e) {
+            LOG.error(e.getMessage(), e);
+        }
+        return false;
+    }
+
+    /**
+     * 缓存存入key-value
+     * @param key   缓存键
+     * @param value 缓存值
+     * @param seconds   秒数
+     * @return  true:成功
+     *      false:失败
+     */
+    public static boolean setString(String key, String value, long seconds) {
+        LOG.debug(" setString key :{}, value: {}, timeout:{}", key, value, seconds);
+        try {
+            if (isClose() || isEmpty(key) || isEmpty(value)) {
+                return false;
+            }
+            key = buildKey(key);
+            stringRedisTemplate.opsForValue().set(key, value, seconds, TimeUnit.SECONDS);
+            return true;
+        } catch (Exception e) {
+            LOG.error(e.getMessage(), e);
+        }
+        return false;
+    }
+
+    /**
+     * 根据key取出String value
+     * @param key   缓存key值
+     * @return  String  缓存的String
+     */
+    public static String getString(String key) {
+        LOG.debug(" getString key :{}", key);
+        try {
+            if (isClose() || isEmpty(key)) {
+                return null;
+            }
+            key = buildKey(key);
+            return stringRedisTemplate.opsForValue().get(key);
+        } catch (Exception e) {
+            LOG.error(e.getMessage(), e);
+        }
+        return null;
+    }
+
+    /**
+     * 去的缓存中的最大值并+1
+     * @param key   缓存key值
+     * @return  long    缓存中的最大值+1
+     */
+    public static long incr(String key) {
+        LOG.debug(" incr key :{}", key);
+        try {
+            if (isClose() || isEmpty(key)) {
+                return 0;
+            }
+            key = buildKey(key);
+            return redisTemplate.opsForValue().increment(key, 1);
+        } catch (Exception e) {
+            LOG.error(e.getMessage(), e);
+        }
+        return 0;
+    }
+
+    /**
+     * 缓存中存入序列化的Object对象
+     * @param key   缓存key
+     * @param obj   存入的序列化对象
+     * @return  true:成功
+     *      false:失败
+     */
+    public static boolean set(String key, Object obj) {
+        LOG.debug(" set key :{}, value:{}", key, obj);
+        try {
+            if (isClose() || isEmpty(key) || isEmpty(obj)) {
+                return false;
+            }
+            key = buildKey(key);
+            redisTemplate.opsForValue().set(key, obj);
+        } catch (Exception e) {
+            LOG.error(e.getMessage(), e);
+        }
+        return false;
+    }
+
+    /**
+     * 缓存中存入序列化的Object对象
+     * @param key   缓存key
+     * @param obj   存入的序列化对象
+     * @return  true:成功
+     *      false:失败
+     */
+    public static boolean setObj(String key, Object obj, long seconds) {
+        LOG.debug(" set key :{}, value:{}, seconds:{}", key, obj, seconds);
+        try {
+            if (isClose() || isEmpty(key) || isEmpty(obj)) {
+                return false;
+            }
+            key = buildKey(key);
+            redisTemplate.opsForValue().set(key, obj);
+            if (seconds > 0) {
+                redisTemplate.expire(key, seconds, TimeUnit.SECONDS);
+            }
+            return true;
+        } catch (Exception e) {
+            LOG.error(e.getMessage(), e);
+        }
+        return false;
+    }
+
+    /**
+     * 取出缓存中存储的序列化对象
+     * @param key   缓存key
+     * @param clazz 对象类
+     * @return <T>  序列化对象
+     */
+    public static <T> T getObj(String key, Class<T> clazz) {
+        LOG.debug(" get key :{}", key);
+        try {
+            if (isClose() || isEmpty(key)) {
+                return null;
+            }
+            key = buildKey(key);
+            return (T) redisTemplate.opsForValue().get(key);
+        } catch (Exception e) {
+            LOG.error(e.getMessage(), e);
+        }
+        return null;
+    }
+
+    /**
+     * 存入Map数组
+     * @param <T>
+     * @param key   缓存key
+     * @param map   缓存map
+     * @return  true:成功
+     *      false:失败
+     */
+    public static <T> boolean setMap(String key, Map<String, T> map) {
+        try {
+            if (isClose() || isEmpty(key) || isEmpty(map)) {
+                return false;
+            }
+            key = buildKey(key);
+            redisTemplate.opsForHash().putAll(key, map);
+            return true;
+        } catch (Exception e) {
+            LOG.error(e.getMessage(), e);
+        }
+        return false;
+    }
+
+    /**
+     * 取出缓存的map
+     * @param key   缓存key
+     * @return map  缓存的map
+     */
+    @SuppressWarnings("rawtypes")
+    public static Map getMap(String key) {
+        LOG.debug(" getMap key :{}", key);
+        try {
+            if (isClose() || isEmpty(key)) {
+                return null;
+            }
+            key = buildKey(key);
+            return redisTemplate.opsForHash().entries(key);
+        } catch (Exception e) {
+            LOG.error(e.getMessage(), e);
+        }
+        return null;
+    }
+
+    /**
+     * 查询缓存的map的集合大小
+     * @param key   缓存key
+     * @return int  缓存map的集合大小
+     */
+    public static long getMapSize(String key) {
+        LOG.debug(" getMap key :{}", key);
+        try {
+            if (isClose() || isEmpty(key)) {
+                return 0;
+            }
+            key = buildKey(key);
+            return redisTemplate.opsForHash().size(key);
+        } catch (Exception e) {
+            LOG.error(e.getMessage(), e);
+        }
+        return 0;
+    }
+
+
+    /**
+     * 根据key以及hashKey取出对应的Object对象
+     * @param key   缓存key
+     * @param hashKey   对应map的key
+     * @return object   map中的对象
+     */
+    public static Object getMapKey(String key, String hashKey) {
+        LOG.debug(" getMapkey :{}, hashKey:{}", key, hashKey);
+        try {
+            if (isClose() || isEmpty(key) || isEmpty(hashKey)) {
+                return null;
+            }
+            key = buildKey(key);
+            return redisTemplate.opsForHash().get(key, hashKey);
+        } catch (Exception e) {
+            LOG.error(e.getMessage(), e);
+        }
+        return null;
+    }
+
+    /**
+     * 取出缓存中map的所有key值
+     * @param key   缓存key
+     * @return Set<String> map的key值合集
+     */
+    public static Set<Object> getMapKeys(String key) {
+        LOG.debug(" getMapKeys key :{}", key);
+        try {
+            if (isClose() || isEmpty(key)) {
+                return null;
+            }
+            key = buildKey(key);
+            return redisTemplate.opsForHash().keys(key);
+        } catch (Exception e) {
+            LOG.error(e.getMessage(), e);
+        }
+        return null;
+    }
+
+    /**
+     * 删除map中指定的key值
+     * @param key   缓存key
+     * @param hashKey   map中指定的hashKey
+     * @return  true:成功
+     *      false:失败
+     */
+    public static boolean delMapKey(String key, String hashKey) {
+        LOG.debug(" delMapKey key :{}, hashKey:{}", key, hashKey);
+        try {
+            if (isClose() || isEmpty(key) || isEmpty(hashKey)) {
+                return false;
+            }
+            key = buildKey(key);
+            redisTemplate.opsForHash().delete(key, hashKey);
+            return true;
+        } catch (Exception e) {
+            LOG.error(e.getMessage(), e);
+        }
+        return false;
+    }
+
+    /**
+     * 存入Map数组
+     * @param <T>
+     * @param key   缓存key
+     * @param map   缓存map
+     * @param seconds   秒数
+     * @return  true:成功
+     *      false:失败
+     */
+    public static <T> boolean setMapExp(String key, Map<String, T> map, long seconds) {
+        LOG.debug(" setMapExp key :{}, value: {}, seconds:{}", key, map, seconds);
+        try {
+            if (isClose() || isEmpty(key) || isEmpty(map)) {
+                return false;
+            }
+            key = buildKey(key);
+            redisTemplate.opsForHash().putAll(key, map);
+            redisTemplate.expire(key, seconds, TimeUnit.SECONDS);
+            return true;
+        } catch (Exception e) {
+            LOG.error(e.getMessage(), e);
+        }
+        return false;
+    }
+
+    /**
+     * map中加入新的key
+     * @param <T>
+     * @param key   缓存key
+     * @param hashKey   map的Key值
+     * @param value map的value值
+     * @return  true:成功
+     *      false:失败
+     */
+    public static <T> boolean addMap(String key, String hashKey, T value) {
+        LOG.debug(" addMap key :{}, hashKey: {}, value:{}", key, hashKey, value);
+        try {
+            if (isClose() || isEmpty(key) || isEmpty(hashKey) || isEmpty(value)) {
+                return false;
+            }
+            key = buildKey(key);
+            redisTemplate.opsForHash().put(key, hashKey, value);
+            return true;
+        } catch (Exception e) {
+            LOG.error(e.getMessage(), e);
+        }
+        return false;
+    }
+
+    /**
+     * 缓存存入List
+     * @param <T>
+     * @param key   缓存key
+     * @param list  缓存List
+     * @return  true:成功
+     *      false:失败
+     */
+    public static <T> boolean setList(String key, List<T> list) {
+        LOG.debug(" setList key :{}, list: {}", key, list);
+        try {
+            if (isClose() || isEmpty(key) || isEmpty(list)) {
+                return false;
+            }
+            key = buildKey(key);
+            redisTemplate.opsForList().leftPushAll(key, list.toArray());
+        } catch (Exception e) {
+            LOG.error(e.getMessage(), e);
+        }
+        return false;
+    }
+
+    /**
+     * 根据key值取出对应的list合集
+     * @param key   缓存key
+     * @return List<Object> 缓存中对应的list合集
+     */
+    public static <V> List<V> getList(String key) {
+        LOG.debug(" getList key :{}", key);
+        try {
+            if (isClose() || isEmpty(key)) {
+                return null;
+            }
+            key = buildKey(key);
+            return (List<V>) redisTemplate.opsForList().range(key, 0, -1);
+        } catch (Exception e) {
+            LOG.error(e.getMessage(), e);
+        }
+        return null;
+    }
+
+    /**
+     * 根据key值截取对应的list合集
+     * @param key   缓存key
+     * @param start 开始位置
+     * @param end   结束位置
+     * @return
+     */
+    public static void trimList(String key, int start, int end) {
+        LOG.debug(" trimList key :{}", key);
+        try {
+            if (isClose() || isEmpty(key)) {
+                return;
+            }
+            key = buildKey(key);
+            redisTemplate.opsForList().trim(key, start, end);
+        } catch (Exception e) {
+            LOG.error(e.getMessage(), e);
+        }
+    }
+
+    /**
+     * 取出list合集中指定位置的对象
+     * @param key   缓存key
+     * @param index 索引位置
+     * @return Object   list指定索引位置的对象
+     */
+    public static Object getIndexList(String key, int index) {
+        LOG.debug(" getIndexList key :{}, index:{}", key, index);
+        try {
+            if (isClose() || isEmpty(key) || index < 0) {
+                return null;
+            }
+            key = buildKey(key);
+            return redisTemplate.opsForList().index(key, index);
+        } catch (Exception e) {
+            LOG.error(e.getMessage(), e);
+        }
+        return null;
+    }
+    /**
+     * Object存入List右侧
+     * @param key   缓存key
+     * @param value List中的值
+     * @return  true:成功
+     *      false:失败
+     */
+    public static boolean addList(String key, Object value) {
+        LOG.debug(" addList key :{}, value:{}", key, value);
+        try {
+            if (isClose() || isEmpty(key) || isEmpty(value)) {
+                return false;
+            }
+            key = buildKey(key);
+            redisTemplate.opsForList().rightPush(key, value);
+            return true;
+        } catch (Exception e) {
+            LOG.error(e.getMessage(), e);
+        }
+        return false;
+    }
+
+    /**
+     * 删除并取出list左侧第一个元素
+     * @param key
+     * @return
+     */
+    public static Object lpopList(String key) {
+        LOG.debug(" lpopList key :{}", key);
+        try {
+            if (isClose() || isEmpty(key)) {
+                return null;
+            }
+            key = buildKey(key);
+            return redisTemplate.opsForList().leftPop(key);
+        } catch (Exception e) {
+            LOG.error(e.getMessage(), e);
+        }
+        return null;
+    }
+
+    /**
+     * 缓存存入List
+     * @param <T>
+     * @param key   缓存key
+     * @param list  缓存List
+     * @param seconds   秒数
+     * @return  true:成功
+     *      false:失败
+     */
+    public static <T> boolean setList(String key, List<T> list, long seconds) {
+        LOG.debug(" setList key :{}, value:{}, seconds:{}", key, list, seconds);
+        try {
+            if (isClose() || isEmpty(key) || isEmpty(list)) {
+                return false;
+            }
+            key = buildKey(key);
+            redisTemplate.opsForList().leftPushAll(key, list.toArray());
+            if (seconds > 0) {
+                redisTemplate.expire(key, seconds, TimeUnit.SECONDS);
+            }
+            return true;
+        } catch (Exception e) {
+            LOG.error(e.getMessage(), e);
+        }
+        return false;
+    }
+
+    /**
+     * 查询缓存的list的集合大小
+     * @param key   缓存key
+     * @return int  缓存list的集合大小
+     */
+    public static long getListSize(String key) {
+        LOG.debug(" getListSize key :{}", key);
+        try {
+            if (isClose() || isEmpty(key)) {
+                return 0;
+            }
+            key = buildKey(key);
+            return redisTemplate.opsForList().size(key);
+        } catch (Exception e) {
+            LOG.error(e.getMessage(), e);
+        }
+        return 0;
+    }
+
+    /**
+     * set集合存入缓存
+     * @param <T>
+     * @param key   缓存key
+     * @param set   缓存set集合
+     * @return  true:成功
+     *      false:失败
+     */
+    public static <T> boolean setSet(String key, Set<T> set) {
+        LOG.debug(" setSet key :{}, value:{}", key, set);
+        try {
+            if (isClose() || isEmpty(key) || isEmpty(set)) {
+                return false;
+            }
+            key = buildKey(key);
+            redisTemplate.opsForSet().add(key, set.toArray());
+            return true;
+        } catch (Exception e) {
+            LOG.error(e.getMessage(), e);
+        }
+        return false;
+    }
+
+    /**
+     * set集合中增加value
+     * @param key   缓存key
+     * @param value 增加的value
+     * @return  true:成功
+     *      false:失败
+     */
+    public static boolean addSet(String key, Object value) {
+        LOG.debug(" addSet key :{}, value:{}", key, value);
+        try {
+            if (isClose() || isEmpty(key) || isEmpty(value)) {
+                return false;
+            }
+            key = buildKey(key);
+            redisTemplate.opsForSet().add(key, value);
+            return true;
+        } catch (Exception e) {
+            LOG.error(e.getMessage(), e);
+        }
+        return false;
+    }
+
+    /**
+     * set集合存入缓存
+     * @param <T>
+     * @param key   缓存key
+     * @param set   缓存set集合
+     * @param seconds   秒数
+     * @return  true:成功
+     *      false:失败
+     */
+    public static <T> boolean setSet(String key, Set<T> set, long seconds) {
+        LOG.debug(" setSet key :{}, value:{}, seconds:{}", key, set, seconds);
+        try {
+            if (isClose() || isEmpty(key) || isEmpty(set)) {
+                return false;
+            }
+            key = buildKey(key);
+            redisTemplate.opsForSet().add(key, set.toArray());
+            if (seconds > 0) {
+                redisTemplate.expire(key, seconds, TimeUnit.SECONDS);
+            }
+            return true;
+        } catch (Exception e) {
+            LOG.error(e.getMessage(), e);
+        }
+        return false;
+    }
+
+    /**
+     * 取出缓存中对应的set合集
+     * @param <T>
+     * @param key   缓存key
+     * @return Set<Object> 缓存中的set合集
+     */
+    public static <T> Set<T> getSet(String key) {
+        LOG.debug(" getSet key :{}", key);
+        try {
+            if (isClose() || isEmpty(key)) {
+                return null;
+            }
+            key = buildKey(key);
+            return (Set<T>) redisTemplate.opsForSet().members(key);
+        } catch (Exception e) {
+            LOG.error(e.getMessage(), e);
+        }
+        return null;
+    }
+
+    /**
+     * 判断set中是否包含成员
+     * @param key   集合
+     * @param member    成员
+     * @return
+     */
+    public static boolean isMemSet(String key, String member) {
+        LOG.debug(" isMemSet key :{},member :{}", key, member);
+        try {
+            if (isClose() || isEmpty(key) || isEmpty(member)) {
+                return false;
+            }
+            return redisTemplate.opsForSet().isMember(key, member);
+        } catch (Exception e) {
+            LOG.error(e.getMessage(), e);
+        }
+        return false;
+    }
+
+    /**
+     * 有序集合存入数值
+     * @param key   缓存key
+     * @param value 缓存value
+     * @param score 评分
+     * @return
+     */
+    public static boolean addZSet(String key, Object value, double score) {
+        LOG.debug(" addZSet key :{},value:{}, score:{}", key, value, score);
+        try {
+            if (isClose() || isEmpty(key) || isEmpty(value)) {
+                return false;
+            }
+            key = buildKey(key);
+            return redisTemplate.opsForZSet().add(key, value, score);
+        } catch (Exception e) {
+            LOG.error(e.getMessage(), e);
+        }
+        return false;
+    }
+
+    /**
+     * 从有序集合中删除指定值
+     * @param key   缓存key
+     * @param value 缓存value
+     * @return
+     */
+    public static boolean removeZSet(String key, Object value) {
+        LOG.debug(" removeZSet key :{},value:{}", key, value);
+        try {
+            if (isClose() || isEmpty(key) || isEmpty(value)) {
+                return false;
+            }
+            key = buildKey(key);
+            redisTemplate.opsForZSet().remove(key, value);
+            return true;
+        } catch (Exception e) {
+            LOG.error(e.getMessage(), e);
+        }
+        return false;
+    }
+
+    /**
+     * 从有序集合中删除指定位置的值
+     * @param key   缓存key
+     * @param start 起始位置
+     * @param end   结束为止
+     * @return
+     */
+    public static boolean removeZSet(String key, long start, long end) {
+        LOG.debug(" removeZSet key :{},start:{}, end:{}", key, start, end);
+        try {
+            if (isClose() || isEmpty(key)) {
+                return false;
+            }
+            key = buildKey(key);
+            redisTemplate.opsForZSet().removeRange(key, start, end);
+            return true;
+        } catch (Exception e) {
+            LOG.error(e.getMessage(), e);
+        }
+        return false;
+    }
+
+    /**
+     * 从有序集合中获取指定位置的值
+     * @param key   缓存key
+     * @param start 起始位置
+     * @param end   结束为止
+     * @return
+     */
+    public static <T> Set<T> getZSet(String key, long start, long end) {
+        LOG.debug(" getZSet key :{},start:{}, end:{}", key, start, end);
+        try {
+            if (isClose() || isEmpty(key)) {
+                return Collections.emptySet();
+            }
+            key = buildKey(key);
+            return (Set<T>) redisTemplate.opsForZSet().range(key, start, end);
+        } catch (Exception e) {
+            LOG.error(e.getMessage(), e);
+        }
+        return Collections.emptySet();
+    }
+
+}
\ No newline at end of file
Index: target/classes/log4j.properties
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>GBK
===================================================================
--- target/classes/log4j.properties	(date 1578576672089)
+++ target/classes/log4j.properties	(date 1578576672089)
@@ -0,0 +1,61 @@
+log4j.rootLogger=debug,CONSOLE,file
+#log4j.rootLogger=ERROR,ROLLING_FILE
+
+log4j.logger.cn.smbms=debug
+log4j.logger.org.apache.ibatis=debug
+log4j.logger.org.mybatis.spring=debug
+log4j.logger.java.sql.Connection=debug
+log4j.logger.java.sql.Statement=debug
+log4j.logger.java.sql.PreparedStatement=debug
+log4j.logger.java.sql.ResultSet=debug
+
+######################################################################################
+# Console Appender  \u65e5\u5fd7\u5728\u63a7\u5236\u8f93\u51fa\u914d\u7f6e
+######################################################################################
+log4j.appender.CONSOLE=org.apache.log4j.ConsoleAppender
+log4j.appender.Threshold=debug
+log4j.appender.CONSOLE.DatePattern=yyyy-MM-dd
+log4j.appender.CONSOLE.Target=System.out
+log4j.appender.CONSOLE.layout=org.apache.log4j.PatternLayout
+log4j.appender.CONSOLE.layout.ConversionPattern= - (%r ms) - %d{yyyy-M-d HH:mm:ss}%x[%5p](%F:%L) %m%n
+
+
+
+######################################################################################
+# Rolling File  \u6587\u4ef6\u5927\u5c0f\u5230\u8fbe\u6307\u5b9a\u5c3a\u5bf8\u7684\u65f6\u5019\u4ea7\u751f\u4e00\u4e2a\u65b0\u7684\u6587\u4ef6
+######################################################################################
+#log4j.appender.ROLLING_FILE=org.apache.log4j.RollingFileAppender
+#log4j.appender.ROLLING_FILE.Threshold=INFO
+#log4j.appender.ROLLING_FILE.File=${baojia.root}/logs/log.log
+#log4j.appender.ROLLING_FILE.Append=true
+#log4j.appender.ROLLING_FILE.MaxFileSize=5000KB
+#log4j.appender.ROLLING_FILE.MaxBackupIndex=100
+#log4j.appender.ROLLING_FILE.layout=org.apache.log4j.PatternLayout
+#log4j.appender.ROLLING_FILE.layout.ConversionPattern=%d{yyyy-M-d HH:mm:ss}%x[%5p](%F:%L) %m%n
+
+######################################################################################
+# DailyRolling File  \u6bcf\u5929\u4ea7\u751f\u4e00\u4e2a\u65e5\u5fd7\u6587\u4ef6\uff0c\u6587\u4ef6\u540d\u683c\u5f0f:log2009-09-11
+######################################################################################
+log4j.appender.file=org.apache.log4j.DailyRollingFileAppender
+log4j.appender.file.DatePattern=yyyy-MM-dd
+log4j.appender.file.File=log.log
+log4j.appender.file.Append=true
+log4j.appender.file.Threshold=debug
+log4j.appender.file.layout=org.apache.log4j.PatternLayout
+log4j.appender.file.layout.ConversionPattern= - (%r ms) - %d{yyyy-M-d HH:mm:ss}%x[%5p](%F:%L) %m%n
+
+#DWR \u65e5\u5fd7
+#log4j.logger.org.directwebremoting = ERROR
+
+#\u663e\u793aHibernate\u5360\u4f4d\u7b26\u7ed1\u5b9a\u503c\u53ca\u8fd4\u56de\u503c
+#log4j.logger.org.hibernate.type=DEBUG,CONSOLE 
+
+#log4j.logger.org.springframework.transaction=DEBUG
+#log4j.logger.org.hibernate=DEBUG
+#log4j.logger.org.acegisecurity=DEBUG
+#log4j.logger.org.apache.myfaces=TRACE
+#log4j.logger.org.quartz=DEBUG
+
+#log4j.logger.com.opensymphony=INFO  
+#log4j.logger.org.apache.struts2=DEBUG  
+log4j.logger.com.opensymphony.xwork2=debug
Index: target/classes/springmvc-servlet.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- target/classes/springmvc-servlet.xml	(date 1594539837496)
+++ target/classes/springmvc-servlet.xml	(date 1594539837496)
@@ -0,0 +1,28 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<beans xmlns="http://www.springframework.org/schema/beans"
+    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
+    xmlns:mvc="http://www.springframework.org/schema/mvc"
+    xmlns:p="http://www.springframework.org/schema/p"
+    xmlns:context="http://www.springframework.org/schema/context"
+    xsi:schemaLocation="
+        http://www.springframework.org/schema/beans
+        http://www.springframework.org/schema/beans/spring-beans.xsd
+        http://www.springframework.org/schema/context
+        http://www.springframework.org/schema/context/spring-context.xsd
+        http://www.springframework.org/schema/mvc
+        http://www.springframework.org/schema/mvc/spring-mvc.xsd">
+	<context:component-scan base-package="com.lpc.controller"></context:component-scan>
+	<mvc:annotation-driven></mvc:annotation-driven>
+	<!-- <mvc:resources location="/statics/" mapping="/statics/**"></mvc:resources> -->
+	<bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
+		<property name="prefix" value="/WEB-INF/jsp/"></property>
+		<property name="suffix" value=".jsp"></property>
+	</bean>
+	  <mvc:default-servlet-handler/>
+	<mvc:interceptors>
+		<mvc:interceptor>
+			<mvc:mapping path="/sys/*"/>
+			<bean class="com.lpc.utils.SysInterceptor"></bean>
+		</mvc:interceptor>
+	</mvc:interceptors>
+</beans>
\ No newline at end of file
Index: target/classes/mapper/SmbmsRoleMapper.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- target/classes/mapper/SmbmsRoleMapper.xml	(date 1594378695275)
+++ target/classes/mapper/SmbmsRoleMapper.xml	(date 1594378695275)
@@ -0,0 +1,303 @@
+<?xml version="1.0" encoding="UTF-8" ?>
+<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
+<mapper namespace="SmbmsRoleMapper" >
+  <resultMap id="BaseResultMap" type="com.lpc.pojo.SmbmsRole" >
+    <!--
+      WARNING - @mbggenerated
+      This element is automatically generated by MyBatis Generator, do not modify.
+    -->
+    <id column="id" property="id" jdbcType="BIGINT" />
+    <result column="roleCode" property="rolecode" jdbcType="VARCHAR" />
+    <result column="roleName" property="rolename" jdbcType="VARCHAR" />
+    <result column="createdBy" property="createdby" jdbcType="BIGINT" />
+    <result column="creationDate" property="creationdate" jdbcType="TIMESTAMP" />
+    <result column="modifyBy" property="modifyby" jdbcType="BIGINT" />
+    <result column="modifyDate" property="modifydate" jdbcType="TIMESTAMP" />
+  </resultMap>
+  <sql id="Example_Where_Clause" >
+    <!--
+      WARNING - @mbggenerated
+      This element is automatically generated by MyBatis Generator, do not modify.
+    -->
+    <where >
+      <foreach collection="oredCriteria" item="criteria" separator="or" >
+        <if test="criteria.valid" >
+          <trim prefix="(" suffix=")" prefixOverrides="and" >
+            <foreach collection="criteria.criteria" item="criterion" >
+              <choose >
+                <when test="criterion.noValue" >
+                  and ${criterion.condition}
+                </when>
+                <when test="criterion.singleValue" >
+                  and ${criterion.condition} #{criterion.value}
+                </when>
+                <when test="criterion.betweenValue" >
+                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
+                </when>
+                <when test="criterion.listValue" >
+                  and ${criterion.condition}
+                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
+                    #{listItem}
+                  </foreach>
+                </when>
+              </choose>
+            </foreach>
+          </trim>
+        </if>
+      </foreach>
+    </where>
+  </sql>
+  <sql id="Update_By_Example_Where_Clause" >
+    <!--
+      WARNING - @mbggenerated
+      This element is automatically generated by MyBatis Generator, do not modify.
+    -->
+    <where >
+      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
+        <if test="criteria.valid" >
+          <trim prefix="(" suffix=")" prefixOverrides="and" >
+            <foreach collection="criteria.criteria" item="criterion" >
+              <choose >
+                <when test="criterion.noValue" >
+                  and ${criterion.condition}
+                </when>
+                <when test="criterion.singleValue" >
+                  and ${criterion.condition} #{criterion.value}
+                </when>
+                <when test="criterion.betweenValue" >
+                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
+                </when>
+                <when test="criterion.listValue" >
+                  and ${criterion.condition}
+                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
+                    #{listItem}
+                  </foreach>
+                </when>
+              </choose>
+            </foreach>
+          </trim>
+        </if>
+      </foreach>
+    </where>
+  </sql>
+  <sql id="Base_Column_List" >
+    <!--
+      WARNING - @mbggenerated
+      This element is automatically generated by MyBatis Generator, do not modify.
+    -->
+    id, roleCode, roleName, createdBy, creationDate, modifyBy, modifyDate
+  </sql>
+  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.lpc.pojo.SmbmsRoleExample" >
+    <!--
+      WARNING - @mbggenerated
+      This element is automatically generated by MyBatis Generator, do not modify.
+    -->
+    select
+    <if test="distinct" >
+      distinct
+    </if>
+    <include refid="Base_Column_List" />
+    from smbms_role
+    <if test="_parameter != null" >
+      <include refid="Example_Where_Clause" />
+    </if>
+    <if test="orderByClause != null" >
+      order by ${orderByClause}
+    </if>
+  </select>
+  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
+    <!--
+      WARNING - @mbggenerated
+      This element is automatically generated by MyBatis Generator, do not modify.
+    -->
+    select 
+    <include refid="Base_Column_List" />
+    from smbms_role
+    where id = #{id,jdbcType=BIGINT}
+  </select>
+  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
+    <!--
+      WARNING - @mbggenerated
+      This element is automatically generated by MyBatis Generator, do not modify.
+    -->
+    delete from smbms_role
+    where id = #{id,jdbcType=BIGINT}
+  </delete>
+  <delete id="deleteByExample" parameterType="com.lpc.pojo.SmbmsRoleExample" >
+    <!--
+      WARNING - @mbggenerated
+      This element is automatically generated by MyBatis Generator, do not modify.
+    -->
+    delete from smbms_role
+    <if test="_parameter != null" >
+      <include refid="Example_Where_Clause" />
+    </if>
+  </delete>
+  <insert id="insert" parameterType="com.lpc.pojo.SmbmsRole" >
+    <!--
+      WARNING - @mbggenerated
+      This element is automatically generated by MyBatis Generator, do not modify.
+    -->
+    insert into smbms_role (id, roleCode, roleName, 
+      createdBy, creationDate, modifyBy, 
+      modifyDate)
+    values (#{id,jdbcType=BIGINT}, #{rolecode,jdbcType=VARCHAR}, #{rolename,jdbcType=VARCHAR}, 
+      #{createdby,jdbcType=BIGINT}, #{creationdate,jdbcType=TIMESTAMP}, #{modifyby,jdbcType=BIGINT}, 
+      #{modifydate,jdbcType=TIMESTAMP})
+  </insert>
+  <insert id="insertSelective" parameterType="com.lpc.pojo.SmbmsRole" >
+    <!--
+      WARNING - @mbggenerated
+      This element is automatically generated by MyBatis Generator, do not modify.
+    -->
+    insert into smbms_role
+    <trim prefix="(" suffix=")" suffixOverrides="," >
+      <if test="id != null" >
+        id,
+      </if>
+      <if test="rolecode != null" >
+        roleCode,
+      </if>
+      <if test="rolename != null" >
+        roleName,
+      </if>
+      <if test="createdby != null" >
+        createdBy,
+      </if>
+      <if test="creationdate != null" >
+        creationDate,
+      </if>
+      <if test="modifyby != null" >
+        modifyBy,
+      </if>
+      <if test="modifydate != null" >
+        modifyDate,
+      </if>
+    </trim>
+    <trim prefix="values (" suffix=")" suffixOverrides="," >
+      <if test="id != null" >
+        #{id,jdbcType=BIGINT},
+      </if>
+      <if test="rolecode != null" >
+        #{rolecode,jdbcType=VARCHAR},
+      </if>
+      <if test="rolename != null" >
+        #{rolename,jdbcType=VARCHAR},
+      </if>
+      <if test="createdby != null" >
+        #{createdby,jdbcType=BIGINT},
+      </if>
+      <if test="creationdate != null" >
+        #{creationdate,jdbcType=TIMESTAMP},
+      </if>
+      <if test="modifyby != null" >
+        #{modifyby,jdbcType=BIGINT},
+      </if>
+      <if test="modifydate != null" >
+        #{modifydate,jdbcType=TIMESTAMP},
+      </if>
+    </trim>
+  </insert>
+  <select id="countByExample" parameterType="com.lpc.pojo.SmbmsRoleExample" resultType="java.lang.Integer" >
+    <!--
+      WARNING - @mbggenerated
+      This element is automatically generated by MyBatis Generator, do not modify.
+    -->
+    select count(*) from smbms_role
+    <if test="_parameter != null" >
+      <include refid="Example_Where_Clause" />
+    </if>
+  </select>
+  <update id="updateByExampleSelective" parameterType="map" >
+    <!--
+      WARNING - @mbggenerated
+      This element is automatically generated by MyBatis Generator, do not modify.
+    -->
+    update smbms_role
+    <set >
+      <if test="record.id != null" >
+        id = #{record.id,jdbcType=BIGINT},
+      </if>
+      <if test="record.rolecode != null" >
+        roleCode = #{record.rolecode,jdbcType=VARCHAR},
+      </if>
+      <if test="record.rolename != null" >
+        roleName = #{record.rolename,jdbcType=VARCHAR},
+      </if>
+      <if test="record.createdby != null" >
+        createdBy = #{record.createdby,jdbcType=BIGINT},
+      </if>
+      <if test="record.creationdate != null" >
+        creationDate = #{record.creationdate,jdbcType=TIMESTAMP},
+      </if>
+      <if test="record.modifyby != null" >
+        modifyBy = #{record.modifyby,jdbcType=BIGINT},
+      </if>
+      <if test="record.modifydate != null" >
+        modifyDate = #{record.modifydate,jdbcType=TIMESTAMP},
+      </if>
+    </set>
+    <if test="_parameter != null" >
+      <include refid="Update_By_Example_Where_Clause" />
+    </if>
+  </update>
+  <update id="updateByExample" parameterType="map" >
+    <!--
+      WARNING - @mbggenerated
+      This element is automatically generated by MyBatis Generator, do not modify.
+    -->
+    update smbms_role
+    set id = #{record.id,jdbcType=BIGINT},
+      roleCode = #{record.rolecode,jdbcType=VARCHAR},
+      roleName = #{record.rolename,jdbcType=VARCHAR},
+      createdBy = #{record.createdby,jdbcType=BIGINT},
+      creationDate = #{record.creationdate,jdbcType=TIMESTAMP},
+      modifyBy = #{record.modifyby,jdbcType=BIGINT},
+      modifyDate = #{record.modifydate,jdbcType=TIMESTAMP}
+    <if test="_parameter != null" >
+      <include refid="Update_By_Example_Where_Clause" />
+    </if>
+  </update>
+  <update id="updateByPrimaryKeySelective" parameterType="com.lpc.pojo.SmbmsRole" >
+    <!--
+      WARNING - @mbggenerated
+      This element is automatically generated by MyBatis Generator, do not modify.
+    -->
+    update smbms_role
+    <set >
+      <if test="rolecode != null" >
+        roleCode = #{rolecode,jdbcType=VARCHAR},
+      </if>
+      <if test="rolename != null" >
+        roleName = #{rolename,jdbcType=VARCHAR},
+      </if>
+      <if test="createdby != null" >
+        createdBy = #{createdby,jdbcType=BIGINT},
+      </if>
+      <if test="creationdate != null" >
+        creationDate = #{creationdate,jdbcType=TIMESTAMP},
+      </if>
+      <if test="modifyby != null" >
+        modifyBy = #{modifyby,jdbcType=BIGINT},
+      </if>
+      <if test="modifydate != null" >
+        modifyDate = #{modifydate,jdbcType=TIMESTAMP},
+      </if>
+    </set>
+    where id = #{id,jdbcType=BIGINT}
+  </update>
+  <update id="updateByPrimaryKey" parameterType="com.lpc.pojo.SmbmsRole" >
+    <!--
+      WARNING - @mbggenerated
+      This element is automatically generated by MyBatis Generator, do not modify.
+    -->
+    update smbms_role
+    set roleCode = #{rolecode,jdbcType=VARCHAR},
+      roleName = #{rolename,jdbcType=VARCHAR},
+      createdBy = #{createdby,jdbcType=BIGINT},
+      creationDate = #{creationdate,jdbcType=TIMESTAMP},
+      modifyBy = #{modifyby,jdbcType=BIGINT},
+      modifyDate = #{modifydate,jdbcType=TIMESTAMP}
+    where id = #{id,jdbcType=BIGINT}
+  </update>
+</mapper>
\ No newline at end of file
Index: target/classes/applicationContext.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- target/classes/applicationContext.xml	(date 1594378759852)
+++ target/classes/applicationContext.xml	(date 1594378759852)
@@ -0,0 +1,42 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<beans xmlns="http://www.springframework.org/schema/beans"
+	   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
+	   xmlns:aop="http://www.springframework.org/schema/aop"
+	   xmlns:p="http://www.springframework.org/schema/p"
+	   xmlns:tx="http://www.springframework.org/schema/tx"
+	   xmlns:context="http://www.springframework.org/schema/context"
+	   xsi:schemaLocation="
+            http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.5.xsd   
+            http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-2.5.xsd   
+            http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-2.5.xsd 
+            http://www.springframework.org/schema/context 
+            http://www.springframework.org/schema/context/spring-context.xsd">
+	<context:component-scan base-package="com.lpc.service"/>
+	<context:component-scan base-package="com.lpc.dao"/>
+	<context:property-placeholder location="classpath:jdbc.properties"/>
+	<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource">
+		<property name="driverClassName" value="${mysql.driver}" />
+		<property name="url" value="${mysql.url}" />
+		<property name="username" value="${mysql.username}" />
+		<property name="password" value="${mysql.password}" />
+	</bean>
+	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
+		<property name="dataSource" ref="dataSource"></property>
+		<property name="configLocation" value="classpath:mybatis-config.xml"></property>
+		<property name="mapperLocations" value="classpath:mapper/*.xml"/>
+	</bean>
+<!--	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
+		<property name="basePackage" value="com.lpc.dao"></property>
+	</bean>-->
+	<bean id="txManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
+		<property name="dataSource" ref="dataSource"></property>
+	</bean>
+	<tx:annotation-driven transaction-manager="txManager"/>
+
+	<!-- sqlSessionTemplate配置 -->
+	<bean id="sqlSession"    class="org.mybatis.spring.SqlSessionTemplate">
+		<constructor-arg index="0" ref="sqlSessionFactory" />
+	</bean>
+
+
+</beans>
\ No newline at end of file
Index: target/classes/mapper/SmbmsUserMapper.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- target/classes/mapper/SmbmsUserMapper.xml	(date 1594378071515)
+++ target/classes/mapper/SmbmsUserMapper.xml	(date 1594378071515)
@@ -0,0 +1,398 @@
+<?xml version="1.0" encoding="UTF-8" ?>
+<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
+<mapper namespace="SmbmsUserMapper" >
+  <resultMap id="BaseResultMap" type="com.lpc.pojo.SmbmsUser" >
+    <!--
+      WARNING - @mbggenerated
+      This element is automatically generated by MyBatis Generator, do not modify.
+    -->
+    <id column="id" property="id" jdbcType="INTEGER" />
+    <result column="userCode" property="usercode" jdbcType="VARCHAR" />
+    <result column="userName" property="username" jdbcType="VARCHAR" />
+    <result column="userPassword" property="userpassword" jdbcType="VARCHAR" />
+    <result column="gender" property="gender" jdbcType="INTEGER" />
+    <result column="birthday" property="birthday" jdbcType="DATE" />
+    <result column="phone" property="phone" jdbcType="VARCHAR" />
+    <result column="address" property="address" jdbcType="VARCHAR" />
+    <result column="userRole" property="userrole" jdbcType="INTEGER" />
+    <result column="createdBy" property="createdby" jdbcType="INTEGER" />
+    <result column="creationDate" property="creationdate" jdbcType="TIMESTAMP" />
+    <result column="modifyBy" property="modifyby" jdbcType="INTEGER" />
+    <result column="modifyDate" property="modifydate" jdbcType="TIMESTAMP" />
+  </resultMap>
+  <sql id="Example_Where_Clause" >
+    <!--
+      WARNING - @mbggenerated
+      This element is automatically generated by MyBatis Generator, do not modify.
+    -->
+    <where >
+      <foreach collection="oredCriteria" item="criteria" separator="or" >
+        <if test="criteria.valid" >
+          <trim prefix="(" suffix=")" prefixOverrides="and" >
+            <foreach collection="criteria.criteria" item="criterion" >
+              <choose >
+                <when test="criterion.noValue" >
+                  and ${criterion.condition}
+                </when>
+                <when test="criterion.singleValue" >
+                  and ${criterion.condition} #{criterion.value}
+                </when>
+                <when test="criterion.betweenValue" >
+                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
+                </when>
+                <when test="criterion.listValue" >
+                  and ${criterion.condition}
+                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
+                    #{listItem}
+                  </foreach>
+                </when>
+              </choose>
+            </foreach>
+          </trim>
+        </if>
+      </foreach>
+    </where>
+  </sql>
+  <sql id="Update_By_Example_Where_Clause" >
+    <!--
+      WARNING - @mbggenerated
+      This element is automatically generated by MyBatis Generator, do not modify.
+    -->
+    <where >
+      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
+        <if test="criteria.valid" >
+          <trim prefix="(" suffix=")" prefixOverrides="and" >
+            <foreach collection="criteria.criteria" item="criterion" >
+              <choose >
+                <when test="criterion.noValue" >
+                  and ${criterion.condition}
+                </when>
+                <when test="criterion.singleValue" >
+                  and ${criterion.condition} #{criterion.value}
+                </when>
+                <when test="criterion.betweenValue" >
+                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
+                </when>
+                <when test="criterion.listValue" >
+                  and ${criterion.condition}
+                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
+                    #{listItem}
+                  </foreach>
+                </when>
+              </choose>
+            </foreach>
+          </trim>
+        </if>
+      </foreach>
+    </where>
+  </sql>
+  <sql id="Base_Column_List" >
+    <!--
+      WARNING - @mbggenerated
+      This element is automatically generated by MyBatis Generator, do not modify.
+    -->
+    id, userCode, userName, userPassword, gender, birthday, phone, address, userRole, 
+    createdBy, creationDate, modifyBy, modifyDate
+  </sql>
+  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.lpc.pojo.SmbmsUserExample" >
+    <!--
+      WARNING - @mbggenerated
+      This element is automatically generated by MyBatis Generator, do not modify.
+    -->
+    select
+    <if test="distinct" >
+      distinct
+    </if>
+    <include refid="Base_Column_List" />
+    from smbms_user
+    <if test="_parameter != null" >
+      <include refid="Example_Where_Clause" />
+    </if>
+    <if test="orderByClause != null" >
+      order by ${orderByClause}
+    </if>
+  </select>
+  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
+    <!--
+      WARNING - @mbggenerated
+      This element is automatically generated by MyBatis Generator, do not modify.
+    -->
+    select 
+    <include refid="Base_Column_List" />
+    from smbms_user
+    where id = #{id,jdbcType=INTEGER}
+  </select>
+  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
+    <!--
+      WARNING - @mbggenerated
+      This element is automatically generated by MyBatis Generator, do not modify.
+    -->
+    delete from smbms_user
+    where id = #{id,jdbcType=INTEGER}
+  </delete>
+  <delete id="deleteByExample" parameterType="com.lpc.pojo.SmbmsUserExample" >
+    <!--
+      WARNING - @mbggenerated
+      This element is automatically generated by MyBatis Generator, do not modify.
+    -->
+    delete from smbms_user
+    <if test="_parameter != null" >
+      <include refid="Example_Where_Clause" />
+    </if>
+  </delete>
+  <insert id="insert" parameterType="com.lpc.pojo.SmbmsUser" >
+    <!--
+      WARNING - @mbggenerated
+      This element is automatically generated by MyBatis Generator, do not modify.
+    -->
+    insert into smbms_user (id, userCode, userName, 
+      userPassword, gender, birthday, 
+      phone, address, userRole, 
+      createdBy, creationDate, modifyBy, 
+      modifyDate)
+    values (#{id,jdbcType=INTEGER}, #{usercode,jdbcType=VARCHAR}, #{username,jdbcType=VARCHAR}, 
+      #{userpassword,jdbcType=VARCHAR}, #{gender,jdbcType=INTEGER}, #{birthday,jdbcType=DATE}, 
+      #{phone,jdbcType=VARCHAR}, #{address,jdbcType=VARCHAR}, #{userrole,jdbcType=INTEGER}, 
+      #{createdby,jdbcType=INTEGER}, #{creationdate,jdbcType=TIMESTAMP}, #{modifyby,jdbcType=INTEGER}, 
+      #{modifydate,jdbcType=TIMESTAMP})
+  </insert>
+  <insert id="insertSelective" parameterType="com.lpc.pojo.SmbmsUser" >
+    <!--
+      WARNING - @mbggenerated
+      This element is automatically generated by MyBatis Generator, do not modify.
+    -->
+    insert into smbms_user
+    <trim prefix="(" suffix=")" suffixOverrides="," >
+      <if test="id != null" >
+        id,
+      </if>
+      <if test="usercode != null" >
+        userCode,
+      </if>
+      <if test="username != null" >
+        userName,
+      </if>
+      <if test="userpassword != null" >
+        userPassword,
+      </if>
+      <if test="gender != null" >
+        gender,
+      </if>
+      <if test="birthday != null" >
+        birthday,
+      </if>
+      <if test="phone != null" >
+        phone,
+      </if>
+      <if test="address != null" >
+        address,
+      </if>
+      <if test="userrole != null" >
+        userRole,
+      </if>
+      <if test="createdby != null" >
+        createdBy,
+      </if>
+      <if test="creationdate != null" >
+        creationDate,
+      </if>
+      <if test="modifyby != null" >
+        modifyBy,
+      </if>
+      <if test="modifydate != null" >
+        modifyDate,
+      </if>
+    </trim>
+    <trim prefix="values (" suffix=")" suffixOverrides="," >
+      <if test="id != null" >
+        #{id,jdbcType=INTEGER},
+      </if>
+      <if test="usercode != null" >
+        #{usercode,jdbcType=VARCHAR},
+      </if>
+      <if test="username != null" >
+        #{username,jdbcType=VARCHAR},
+      </if>
+      <if test="userpassword != null" >
+        #{userpassword,jdbcType=VARCHAR},
+      </if>
+      <if test="gender != null" >
+        #{gender,jdbcType=INTEGER},
+      </if>
+      <if test="birthday != null" >
+        #{birthday,jdbcType=DATE},
+      </if>
+      <if test="phone != null" >
+        #{phone,jdbcType=VARCHAR},
+      </if>
+      <if test="address != null" >
+        #{address,jdbcType=VARCHAR},
+      </if>
+      <if test="userrole != null" >
+        #{userrole,jdbcType=INTEGER},
+      </if>
+      <if test="createdby != null" >
+        #{createdby,jdbcType=INTEGER},
+      </if>
+      <if test="creationdate != null" >
+        #{creationdate,jdbcType=TIMESTAMP},
+      </if>
+      <if test="modifyby != null" >
+        #{modifyby,jdbcType=INTEGER},
+      </if>
+      <if test="modifydate != null" >
+        #{modifydate,jdbcType=TIMESTAMP},
+      </if>
+    </trim>
+  </insert>
+  <select id="countByExample" parameterType="com.lpc.pojo.SmbmsUserExample" resultType="java.lang.Integer" >
+    <!--
+      WARNING - @mbggenerated
+      This element is automatically generated by MyBatis Generator, do not modify.
+    -->
+    select count(*) from smbms_user
+    <if test="_parameter != null" >
+      <include refid="Example_Where_Clause" />
+    </if>
+  </select>
+  <update id="updateByExampleSelective" parameterType="map" >
+    <!--
+      WARNING - @mbggenerated
+      This element is automatically generated by MyBatis Generator, do not modify.
+    -->
+    update smbms_user
+    <set >
+      <if test="record.id != null" >
+        id = #{record.id,jdbcType=INTEGER},
+      </if>
+      <if test="record.usercode != null" >
+        userCode = #{record.usercode,jdbcType=VARCHAR},
+      </if>
+      <if test="record.username != null" >
+        userName = #{record.username,jdbcType=VARCHAR},
+      </if>
+      <if test="record.userpassword != null" >
+        userPassword = #{record.userpassword,jdbcType=VARCHAR},
+      </if>
+      <if test="record.gender != null" >
+        gender = #{record.gender,jdbcType=INTEGER},
+      </if>
+      <if test="record.birthday != null" >
+        birthday = #{record.birthday,jdbcType=DATE},
+      </if>
+      <if test="record.phone != null" >
+        phone = #{record.phone,jdbcType=VARCHAR},
+      </if>
+      <if test="record.address != null" >
+        address = #{record.address,jdbcType=VARCHAR},
+      </if>
+      <if test="record.userrole != null" >
+        userRole = #{record.userrole,jdbcType=INTEGER},
+      </if>
+      <if test="record.createdby != null" >
+        createdBy = #{record.createdby,jdbcType=INTEGER},
+      </if>
+      <if test="record.creationdate != null" >
+        creationDate = #{record.creationdate,jdbcType=TIMESTAMP},
+      </if>
+      <if test="record.modifyby != null" >
+        modifyBy = #{record.modifyby,jdbcType=INTEGER},
+      </if>
+      <if test="record.modifydate != null" >
+        modifyDate = #{record.modifydate,jdbcType=TIMESTAMP},
+      </if>
+    </set>
+    <if test="_parameter != null" >
+      <include refid="Update_By_Example_Where_Clause" />
+    </if>
+  </update>
+  <update id="updateByExample" parameterType="map" >
+    <!--
+      WARNING - @mbggenerated
+      This element is automatically generated by MyBatis Generator, do not modify.
+    -->
+    update smbms_user
+    set id = #{record.id,jdbcType=INTEGER},
+      userCode = #{record.usercode,jdbcType=VARCHAR},
+      userName = #{record.username,jdbcType=VARCHAR},
+      userPassword = #{record.userpassword,jdbcType=VARCHAR},
+      gender = #{record.gender,jdbcType=INTEGER},
+      birthday = #{record.birthday,jdbcType=DATE},
+      phone = #{record.phone,jdbcType=VARCHAR},
+      address = #{record.address,jdbcType=VARCHAR},
+      userRole = #{record.userrole,jdbcType=INTEGER},
+      createdBy = #{record.createdby,jdbcType=INTEGER},
+      creationDate = #{record.creationdate,jdbcType=TIMESTAMP},
+      modifyBy = #{record.modifyby,jdbcType=INTEGER},
+      modifyDate = #{record.modifydate,jdbcType=TIMESTAMP}
+    <if test="_parameter != null" >
+      <include refid="Update_By_Example_Where_Clause" />
+    </if>
+  </update>
+  <update id="updateByPrimaryKeySelective" parameterType="com.lpc.pojo.SmbmsUser" >
+    <!--
+      WARNING - @mbggenerated
+      This element is automatically generated by MyBatis Generator, do not modify.
+    -->
+    update smbms_user
+    <set >
+      <if test="usercode != null" >
+        userCode = #{usercode,jdbcType=VARCHAR},
+      </if>
+      <if test="username != null" >
+        userName = #{username,jdbcType=VARCHAR},
+      </if>
+      <if test="userpassword != null" >
+        userPassword = #{userpassword,jdbcType=VARCHAR},
+      </if>
+      <if test="gender != null" >
+        gender = #{gender,jdbcType=INTEGER},
+      </if>
+      <if test="birthday != null" >
+        birthday = #{birthday,jdbcType=DATE},
+      </if>
+      <if test="phone != null" >
+        phone = #{phone,jdbcType=VARCHAR},
+      </if>
+      <if test="address != null" >
+        address = #{address,jdbcType=VARCHAR},
+      </if>
+      <if test="userrole != null" >
+        userRole = #{userrole,jdbcType=INTEGER},
+      </if>
+      <if test="createdby != null" >
+        createdBy = #{createdby,jdbcType=INTEGER},
+      </if>
+      <if test="creationdate != null" >
+        creationDate = #{creationdate,jdbcType=TIMESTAMP},
+      </if>
+      <if test="modifyby != null" >
+        modifyBy = #{modifyby,jdbcType=INTEGER},
+      </if>
+      <if test="modifydate != null" >
+        modifyDate = #{modifydate,jdbcType=TIMESTAMP},
+      </if>
+    </set>
+    where id = #{id,jdbcType=INTEGER}
+  </update>
+  <update id="updateByPrimaryKey" parameterType="com.lpc.pojo.SmbmsUser" >
+    <!--
+      WARNING - @mbggenerated
+      This element is automatically generated by MyBatis Generator, do not modify.
+    -->
+    update smbms_user
+    set userCode = #{usercode,jdbcType=VARCHAR},
+      userName = #{username,jdbcType=VARCHAR},
+      userPassword = #{userpassword,jdbcType=VARCHAR},
+      gender = #{gender,jdbcType=INTEGER},
+      birthday = #{birthday,jdbcType=DATE},
+      phone = #{phone,jdbcType=VARCHAR},
+      address = #{address,jdbcType=VARCHAR},
+      userRole = #{userrole,jdbcType=INTEGER},
+      createdBy = #{createdby,jdbcType=INTEGER},
+      creationDate = #{creationdate,jdbcType=TIMESTAMP},
+      modifyBy = #{modifyby,jdbcType=INTEGER},
+      modifyDate = #{modifydate,jdbcType=TIMESTAMP}
+    where id = #{id,jdbcType=INTEGER}
+  </update>
+</mapper>
\ No newline at end of file
Index: .idea/vcs.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- .idea/vcs.xml	(date 1594544237407)
+++ .idea/vcs.xml	(date 1594544237407)
@@ -0,0 +1,6 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project version="4">
+  <component name="VcsDirectoryMappings">
+    <mapping directory="$PROJECT_DIR$" vcs="Git" />
+  </component>
+</project>
\ No newline at end of file
Index: target/classes/redis.properties
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>GBK
===================================================================
--- target/classes/redis.properties	(date 1594540643254)
+++ target/classes/redis.properties	(date 1594540643254)
@@ -0,0 +1,25 @@
+
+redis.host=r-2zefd929b25639c4pd.redis.rds.aliyuncs.com
+redis.port=6379
+redis.sentinel.port=26879
+redis.pwd=Lpc123456
+redis.database=0
+#逐出扫描的时间间隔(毫秒) 如果为负数,则不运行逐出线程, 默认-1
+redis.pool.timeBetweenEvictionRunsMillis=30000
+redis.pool.testOnBorrow=true
+# 连接超时时间
+redis.timeout=1000
+redis.userPool=true
+#最大空闲数
+redis.pool.maxIdle=100
+redis.pool.minIdle=10
+#控制一个pool可分配多少个jedis实例,用来替换上面的redis.maxActive,如果是jedis 2.4以后用该属性
+redis.pool.maxTotal=200
+#最大建立连接等待时间。如果超过此时间将接到异常。设为-1表示无限制。
+redis.pool.maxWaitMillis=10000
+#连接的最小空闲时间 默认1800000毫秒(30分钟)
+redis.pool.minEvictableIdleTimeMillis=300000
+#每次释放连接的最大数目,默认3
+redis.pool.numTestsPerEvictionRun=10
+redis.pool.testOnReturn=true
+redis.pool.testWhileIdle=true
\ No newline at end of file
Index: target/classes/rebel.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- target/classes/rebel.xml	(date 1594524138994)
+++ target/classes/rebel.xml	(date 1594524138994)
@@ -0,0 +1,21 @@
+<?xml version="1.0" encoding="UTF-8"?>
+
+<!--
+  This is the JRebel configuration file. It maps the running application to your IDE workspace, enabling JRebel reloading for this project.
+  Refer to https://manuals.jrebel.com/jrebel/standalone/config.html for more information.
+-->
+<application generated-by="intellij" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://www.zeroturnaround.com" xsi:schemaLocation="http://www.zeroturnaround.com http://update.zeroturnaround.com/jrebel/rebel-2_1.xsd">
+
+	<classpath>
+		<dir name="F:/电商云上/日考/李金超0707日考文件/SuperMarketMaven/target/classes">
+		</dir>
+	</classpath>
+
+	<web>
+		<link target="/">
+			<dir name="F:/电商云上/日考/李金超0707日考文件/SuperMarketMaven/src/main/webapp">
+			</dir>
+		</link>
+	</web>
+
+</application>
Index: target/classes/mapper/SmbmsBillMapper.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- target/classes/mapper/SmbmsBillMapper.xml	(date 1594379246082)
+++ target/classes/mapper/SmbmsBillMapper.xml	(date 1594379246082)
@@ -0,0 +1,398 @@
+<?xml version="1.0" encoding="UTF-8" ?>
+<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
+<mapper namespace="SmbmsBillMapper" >
+  <resultMap id="BaseResultMap" type="com.lpc.pojo.SmbmsBill" >
+    <!--
+      WARNING - @mbggenerated
+      This element is automatically generated by MyBatis Generator, do not modify.
+    -->
+    <id column="id" property="id" jdbcType="BIGINT" />
+    <result column="billCode" property="billcode" jdbcType="VARCHAR" />
+    <result column="productName" property="productname" jdbcType="VARCHAR" />
+    <result column="productDesc" property="productdesc" jdbcType="VARCHAR" />
+    <result column="productUnit" property="productunit" jdbcType="VARCHAR" />
+    <result column="productCount" property="productcount" jdbcType="DECIMAL" />
+    <result column="totalPrice" property="totalprice" jdbcType="DECIMAL" />
+    <result column="isPayment" property="ispayment" jdbcType="INTEGER" />
+    <result column="createdBy" property="createdby" jdbcType="BIGINT" />
+    <result column="creationDate" property="creationdate" jdbcType="TIMESTAMP" />
+    <result column="modifyBy" property="modifyby" jdbcType="BIGINT" />
+    <result column="modifyDate" property="modifydate" jdbcType="TIMESTAMP" />
+    <result column="providerId" property="providerid" jdbcType="BIGINT" />
+  </resultMap>
+  <sql id="Example_Where_Clause" >
+    <!--
+      WARNING - @mbggenerated
+      This element is automatioredCriteriacally generated by MyBatis Generator, do not modify.
+    -->
+    <where >
+      <foreach collection="oredCriteria" item="criteria" separator="or" >
+        <if test="criteria.valid" >
+          <trim prefix="(" suffix=")" prefixOverrides="and" >
+            <foreach collection="criteria.criteria" item="criterion" >
+              <choose >
+                <when test="criterion.noValue" >
+                  and ${criterion.condition}
+                </when>
+                <when test="criterion.singleValue" >
+                  and ${criterion.condition} #{criterion.value}
+                </when>
+                <when test="criterion.betweenValue" >
+                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
+                </when>
+                <when test="criterion.listValue" >
+                  and ${criterion.condition}
+                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
+                    #{listItem}
+                  </foreach>
+                </when>
+              </choose>
+            </foreach>
+          </trim>
+        </if>
+      </foreach>
+    </where>
+  </sql>
+  <sql id="Update_By_Example_Where_Clause" >
+    <!--
+      WARNING - @mbggenerated
+      This element is automatically generated by MyBatis Generator, do not modify.
+    -->
+    <where >
+      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
+        <if test="criteria.valid" >
+          <trim prefix="(" suffix=")" prefixOverrides="and" >
+            <foreach collection="criteria.criteria" item="criterion" >
+              <choose >
+                <when test="criterion.noValue" >
+                  and ${criterion.condition}
+                </when>
+                <when test="criterion.singleValue" >
+                  and ${criterion.condition} #{criterion.value}
+                </when>
+                <when test="criterion.betweenValue" >
+                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
+                </when>
+                <when test="criterion.listValue" >
+                  and ${criterion.condition}
+                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
+                    #{listItem}
+                  </foreach>
+                </when>
+              </choose>
+            </foreach>
+          </trim>
+        </if>
+      </foreach>
+    </where>
+  </sql>
+  <sql id="Base_Column_List" >
+    <!--
+      WARNING - @mbggenerated
+      This element is automatically generated by MyBatis Generator, do not modify.
+    -->
+    id, billCode, productName, productDesc, productUnit, productCount, totalPrice, isPayment, 
+    createdBy, creationDate, modifyBy, modifyDate, providerId
+  </sql>
+  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.lpc.pojo.SmbmsBillExample" >
+    <!--
+      WARNING - @mbggenerated
+      This element is automatically generated by MyBatis Generator, do not modify.
+    -->
+    select
+    <if test="distinct" >
+      distinct
+    </if>
+    <include refid="Base_Column_List" />
+    from smbms_bill
+    <if test="_parameter != null" >
+      <include refid="Example_Where_Clause" />
+    </if>
+    <if test="orderByClause != null" >
+      order by ${orderByClause}
+    </if>
+  </select>
+  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
+    <!--
+      WARNING - @mbggenerated
+      This element is automatically generated by MyBatis Generator, do not modify.
+    -->
+    select 
+    <include refid="Base_Column_List" />
+    from smbms_bill
+    where id = #{id,jdbcType=BIGINT}
+  </select>
+  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
+    <!--
+      WARNING - @mbggenerated
+      This element is automatically generated by MyBatis Generator, do not modify.
+    -->
+    delete from smbms_bill
+    where id = #{id,jdbcType=BIGINT}
+  </delete>
+  <delete id="deleteByExample" parameterType="com.lpc.pojo.SmbmsBillExample" >
+    <!--
+      WARNING - @mbggenerated
+      This element is automatically generated by MyBatis Generator, do not modify.
+    -->
+    delete from smbms_bill
+    <if test="_parameter != null" >
+      <include refid="Example_Where_Clause" />
+    </if>
+  </delete>
+  <insert id="insert" parameterType="com.lpc.pojo.SmbmsBill" >
+    <!--
+      WARNING - @mbggenerated
+      This element is automatically generated by MyBatis Generator, do not modify.
+    -->
+    insert into smbms_bill (id, billCode, productName, 
+      productDesc, productUnit, productCount, 
+      totalPrice, isPayment, createdBy, 
+      creationDate, modifyBy, modifyDate, 
+      providerId)
+    values (#{id,jdbcType=BIGINT}, #{billcode,jdbcType=VARCHAR}, #{productname,jdbcType=VARCHAR}, 
+      #{productdesc,jdbcType=VARCHAR}, #{productunit,jdbcType=VARCHAR}, #{productcount,jdbcType=DECIMAL}, 
+      #{totalprice,jdbcType=DECIMAL}, #{ispayment,jdbcType=INTEGER}, #{createdby,jdbcType=BIGINT}, 
+      #{creationdate,jdbcType=TIMESTAMP}, #{modifyby,jdbcType=BIGINT}, #{modifydate,jdbcType=TIMESTAMP}, 
+      #{providerid,jdbcType=BIGINT})
+  </insert>
+  <insert id="insertSelective" parameterType="com.lpc.pojo.SmbmsBill" >
+    <!--
+      WARNING - @mbggenerated
+      This element is automatically generated by MyBatis Generator, do not modify.
+    -->
+    insert into smbms_bill
+    <trim prefix="(" suffix=")" suffixOverrides="," >
+      <if test="id != null" >
+        id,
+      </if>
+      <if test="billcode != null" >
+        billCode,
+      </if>
+      <if test="productname != null" >
+        productName,
+      </if>
+      <if test="productdesc != null" >
+        productDesc,
+      </if>
+      <if test="productunit != null" >
+        productUnit,
+      </if>
+      <if test="productcount != null" >
+        productCount,
+      </if>
+      <if test="totalprice != null" >
+        totalPrice,
+      </if>
+      <if test="ispayment != null" >
+        isPayment,
+      </if>
+      <if test="createdby != null" >
+        createdBy,
+      </if>
+      <if test="creationdate != null" >
+        creationDate,
+      </if>
+      <if test="modifyby != null" >
+        modifyBy,
+      </if>
+      <if test="modifydate != null" >
+        modifyDate,
+      </if>
+      <if test="providerid != null" >
+        providerId,
+      </if>
+    </trim>
+    <trim prefix="values (" suffix=")" suffixOverrides="," >
+      <if test="id != null" >
+        #{id,jdbcType=BIGINT},
+      </if>
+      <if test="billcode != null" >
+        #{billcode,jdbcType=VARCHAR},
+      </if>
+      <if test="productname != null" >
+        #{productname,jdbcType=VARCHAR},
+      </if>
+      <if test="productdesc != null" >
+        #{productdesc,jdbcType=VARCHAR},
+      </if>
+      <if test="productunit != null" >
+        #{productunit,jdbcType=VARCHAR},
+      </if>
+      <if test="productcount != null" >
+        #{productcount,jdbcType=DECIMAL},
+      </if>
+      <if test="totalprice != null" >
+        #{totalprice,jdbcType=DECIMAL},
+      </if>
+      <if test="ispayment != null" >
+        #{ispayment,jdbcType=INTEGER},
+      </if>
+      <if test="createdby != null" >
+        #{createdby,jdbcType=BIGINT},
+      </if>
+      <if test="creationdate != null" >
+        #{creationdate,jdbcType=TIMESTAMP},
+      </if>
+      <if test="modifyby != null" >
+        #{modifyby,jdbcType=BIGINT},
+      </if>
+      <if test="modifydate != null" >
+        #{modifydate,jdbcType=TIMESTAMP},
+      </if>
+      <if test="providerid != null" >
+        #{providerid,jdbcType=BIGINT},
+      </if>
+    </trim>
+  </insert>
+  <select id="countByExample" parameterType="com.lpc.pojo.SmbmsBillExample" resultType="java.lang.Integer" >
+    <!--
+      WARNING - @mbggenerated
+      This element is automatically generated by MyBatis Generator, do not modify.
+    -->
+    select count(*) from smbms_bill
+    <if test="_parameter != null" >
+      <include refid="Example_Where_Clause" />
+    </if>
+  </select>
+  <update id="updateByExampleSelective" parameterType="map" >
+    <!--
+      WARNING - @mbggenerated
+      This element is automatically generated by MyBatis Generator, do not modify.
+    -->
+    update smbms_bill
+    <set >
+      <if test="record.id != null" >
+        id = #{record.id,jdbcType=BIGINT},
+      </if>
+      <if test="record.billcode != null" >
+        billCode = #{record.billcode,jdbcType=VARCHAR},
+      </if>
+      <if test="record.productname != null" >
+        productName = #{record.productname,jdbcType=VARCHAR},
+      </if>
+      <if test="record.productdesc != null" >
+        productDesc = #{record.productdesc,jdbcType=VARCHAR},
+      </if>
+      <if test="record.productunit != null" >
+        productUnit = #{record.productunit,jdbcType=VARCHAR},
+      </if>
+      <if test="record.productcount != null" >
+        productCount = #{record.productcount,jdbcType=DECIMAL},
+      </if>
+      <if test="record.totalprice != null" >
+        totalPrice = #{record.totalprice,jdbcType=DECIMAL},
+      </if>
+      <if test="record.ispayment != null" >
+        isPayment = #{record.ispayment,jdbcType=INTEGER},
+      </if>
+      <if test="record.createdby != null" >
+        createdBy = #{record.createdby,jdbcType=BIGINT},
+      </if>
+      <if test="record.creationdate != null" >
+        creationDate = #{record.creationdate,jdbcType=TIMESTAMP},
+      </if>
+      <if test="record.modifyby != null" >
+        modifyBy = #{record.modifyby,jdbcType=BIGINT},
+      </if>
+      <if test="record.modifydate != null" >
+        modifyDate = #{record.modifydate,jdbcType=TIMESTAMP},
+      </if>
+      <if test="record.providerid != null" >
+        providerId = #{record.providerid,jdbcType=BIGINT},
+      </if>
+    </set>
+    <if test="_parameter != null" >
+      <include refid="Update_By_Example_Where_Clause" />
+    </if>
+  </update>
+  <update id="updateByExample" parameterType="map" >
+    <!--
+      WARNING - @mbggenerated
+      This element is automatically generated by MyBatis Generator, do not modify.
+    -->
+    update smbms_bill
+    set id = #{record.id,jdbcType=BIGINT},
+      billCode = #{record.billcode,jdbcType=VARCHAR},
+      productName = #{record.productname,jdbcType=VARCHAR},
+      productDesc = #{record.productdesc,jdbcType=VARCHAR},
+      productUnit = #{record.productunit,jdbcType=VARCHAR},
+      productCount = #{record.productcount,jdbcType=DECIMAL},
+      totalPrice = #{record.totalprice,jdbcType=DECIMAL},
+      isPayment = #{record.ispayment,jdbcType=INTEGER},
+      createdBy = #{record.createdby,jdbcType=BIGINT},
+      creationDate = #{record.creationdate,jdbcType=TIMESTAMP},
+      modifyBy = #{record.modifyby,jdbcType=BIGINT},
+      modifyDate = #{record.modifydate,jdbcType=TIMESTAMP},
+      providerId = #{record.providerid,jdbcType=BIGINT}
+    <if test="_parameter != null" >
+      <include refid="Update_By_Example_Where_Clause" />
+    </if>
+  </update>
+  <update id="updateByPrimaryKeySelective" parameterType="com.lpc.pojo.SmbmsBill" >
+    <!--
+      WARNING - @mbggenerated
+      This element is automatically generated by MyBatis Generator, do not modify.
+    -->
+    update smbms_bill
+    <set >
+      <if test="billcode != null" >
+        billCode = #{billcode,jdbcType=VARCHAR},
+      </if>
+      <if test="productname != null" >
+        productName = #{productname,jdbcType=VARCHAR},
+      </if>
+      <if test="productdesc != null" >
+        productDesc = #{productdesc,jdbcType=VARCHAR},
+      </if>
+      <if test="productunit != null" >
+        productUnit = #{productunit,jdbcType=VARCHAR},
+      </if>
+      <if test="productcount != null" >
+        productCount = #{productcount,jdbcType=DECIMAL},
+      </if>
+      <if test="totalprice != null" >
+        totalPrice = #{totalprice,jdbcType=DECIMAL},
+      </if>
+      <if test="ispayment != null" >
+        isPayment = #{ispayment,jdbcType=INTEGER},
+      </if>
+      <if test="createdby != null" >
+        createdBy = #{createdby,jdbcType=BIGINT},
+      </if>
+      <if test="creationdate != null" >
+        creationDate = #{creationdate,jdbcType=TIMESTAMP},
+      </if>
+      <if test="modifyby != null" >
+        modifyBy = #{modifyby,jdbcType=BIGINT},
+      </if>
+      <if test="modifydate != null" >
+        modifyDate = #{modifydate,jdbcType=TIMESTAMP},
+      </if>
+      <if test="providerid != null" >
+        providerId = #{providerid,jdbcType=BIGINT},
+      </if>
+    </set>
+    where id = #{id,jdbcType=BIGINT}
+  </update>
+  <update id="updateByPrimaryKey" parameterType="com.lpc.pojo.SmbmsBill" >
+    <!--
+      WARNING - @mbggenerated
+      This element is automatically generated by MyBatis Generator, do not modify.
+    -->
+    update smbms_bill
+    set billCode = #{billcode,jdbcType=VARCHAR},
+      productName = #{productname,jdbcType=VARCHAR},
+      productDesc = #{productdesc,jdbcType=VARCHAR},
+      productUnit = #{productunit,jdbcType=VARCHAR},
+      productCount = #{productcount,jdbcType=DECIMAL},
+      totalPrice = #{totalprice,jdbcType=DECIMAL},
+      isPayment = #{ispayment,jdbcType=INTEGER},
+      createdBy = #{createdby,jdbcType=BIGINT},
+      creationDate = #{creationdate,jdbcType=TIMESTAMP},
+      modifyBy = #{modifyby,jdbcType=BIGINT},
+      modifyDate = #{modifydate,jdbcType=TIMESTAMP},
+      providerId = #{providerid,jdbcType=BIGINT}
+    where id = #{id,jdbcType=BIGINT}
+  </update>
+</mapper>
\ No newline at end of file
Index: target/classes/mapper/SmbmsProviderMapper.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- target/classes/mapper/SmbmsProviderMapper.xml	(date 1594378695266)
+++ target/classes/mapper/SmbmsProviderMapper.xml	(date 1594378695266)
@@ -0,0 +1,383 @@
+<?xml version="1.0" encoding="UTF-8" ?>
+<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
+<mapper namespace="SmbmsProviderMapper" >
+  <resultMap id="BaseResultMap" type="com.lpc.pojo.SmbmsProvider" >
+    <!--
+      WARNING - @mbggenerated
+      This element is automatically generated by MyBatis Generator, do not modify.
+    -->
+    <id column="id" property="id" jdbcType="BIGINT" />
+    <result column="proCode" property="procode" jdbcType="VARCHAR" />
+    <result column="proName" property="proname" jdbcType="VARCHAR" />
+    <result column="proDesc" property="prodesc" jdbcType="VARCHAR" />
+    <result column="proContact" property="procontact" jdbcType="VARCHAR" />
+    <result column="proPhone" property="prophone" jdbcType="VARCHAR" />
+    <result column="proAddress" property="proaddress" jdbcType="VARCHAR" />
+    <result column="proFax" property="profax" jdbcType="VARCHAR" />
+    <result column="createdBy" property="createdby" jdbcType="BIGINT" />
+    <result column="creationDate" property="creationdate" jdbcType="TIMESTAMP" />
+    <result column="modifyDate" property="modifydate" jdbcType="TIMESTAMP" />
+    <result column="modifyBy" property="modifyby" jdbcType="BIGINT" />
+  </resultMap>
+  <sql id="Example_Where_Clause" >
+    <!--
+      WARNING - @mbggenerated
+      This element is automatically generated by MyBatis Generator, do not modify.
+    -->
+    <where >
+      <foreach collection="oredCriteria" item="criteria" separator="or" >
+        <if test="criteria.valid" >
+          <trim prefix="(" suffix=")" prefixOverrides="and" >
+            <foreach collection="criteria.criteria" item="criterion" >
+              <choose >
+                <when test="criterion.noValue" >
+                  and ${criterion.condition}
+                </when>
+                <when test="criterion.singleValue" >
+                  and ${criterion.condition} #{criterion.value}
+                </when>
+                <when test="criterion.betweenValue" >
+                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
+                </when>
+                <when test="criterion.listValue" >
+                  and ${criterion.condition}
+                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
+                    #{listItem}
+                  </foreach>
+                </when>
+              </choose>
+            </foreach>
+          </trim>
+        </if>
+      </foreach>
+    </where>
+  </sql>
+  <sql id="Update_By_Example_Where_Clause" >
+    <!--
+      WARNING - @mbggenerated
+      This element is automatically generated by MyBatis Generator, do not modify.
+    -->
+    <where >
+      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
+        <if test="criteria.valid" >
+          <trim prefix="(" suffix=")" prefixOverrides="and" >
+            <foreach collection="criteria.criteria" item="criterion" >
+              <choose >
+                <when test="criterion.noValue" >
+                  and ${criterion.condition}
+                </when>
+                <when test="criterion.singleValue" >
+                  and ${criterion.condition} #{criterion.value}
+                </when>
+                <when test="criterion.betweenValue" >
+                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
+                </when>
+                <when test="criterion.listValue" >
+                  and ${criterion.condition}
+                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
+                    #{listItem}
+                  </foreach>
+                </when>
+              </choose>
+            </foreach>
+          </trim>
+        </if>
+      </foreach>
+    </where>
+  </sql>
+  <sql id="Base_Column_List" >
+    <!--
+      WARNING - @mbggenerated
+      This element is automatically generated by MyBatis Generator, do not modify.
+    -->
+    id, proCode, proName, proDesc, proContact, proPhone, proAddress, proFax, createdBy, 
+    creationDate, modifyDate, modifyBy
+  </sql>
+  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.lpc.pojo.SmbmsProviderExample" >
+    <!--
+      WARNING - @mbggenerated
+      This element is automatically generated by MyBatis Generator, do not modify.
+    -->
+    select
+    <if test="distinct" >
+      distinct
+    </if>
+    <include refid="Base_Column_List" />
+    from smbms_provider
+    <if test="_parameter != null" >
+      <include refid="Example_Where_Clause" />
+    </if>
+    <if test="orderByClause != null" >
+      order by ${orderByClause}
+    </if>
+  </select>
+  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
+    <!--
+      WARNING - @mbggenerated
+      This element is automatically generated by MyBatis Generator, do not modify.
+    -->
+    select 
+    <include refid="Base_Column_List" />
+    from smbms_provider
+    where id = #{id,jdbcType=BIGINT}
+  </select>
+  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
+    <!--
+      WARNING - @mbggenerated
+      This element is automatically generated by MyBatis Generator, do not modify.
+    -->
+    delete from smbms_provider
+    where id = #{id,jdbcType=BIGINT}
+  </delete>
+  <delete id="deleteByExample" parameterType="com.lpc.pojo.SmbmsProviderExample" >
+    <!--
+      WARNING - @mbggenerated
+      This element is automatically generated by MyBatis Generator, do not modify.
+    -->
+    delete from smbms_provider
+    <if test="_parameter != null" >
+      <include refid="Example_Where_Clause" />
+    </if>
+  </delete>
+  <insert id="insert" parameterType="com.lpc.pojo.SmbmsProvider" >
+    <!--
+      WARNING - @mbggenerated
+      This element is automatically generated by MyBatis Generator, do not modify.
+    -->
+    insert into smbms_provider (id, proCode, proName, 
+      proDesc, proContact, proPhone, 
+      proAddress, proFax, createdBy, 
+      creationDate, modifyDate, modifyBy
+      )
+    values (#{id,jdbcType=BIGINT}, #{procode,jdbcType=VARCHAR}, #{proname,jdbcType=VARCHAR}, 
+      #{prodesc,jdbcType=VARCHAR}, #{procontact,jdbcType=VARCHAR}, #{prophone,jdbcType=VARCHAR}, 
+      #{proaddress,jdbcType=VARCHAR}, #{profax,jdbcType=VARCHAR}, #{createdby,jdbcType=BIGINT}, 
+      #{creationdate,jdbcType=TIMESTAMP}, #{modifydate,jdbcType=TIMESTAMP}, #{modifyby,jdbcType=BIGINT}
+      )
+  </insert>
+  <insert id="insertSelective" parameterType="com.lpc.pojo.SmbmsProvider" >
+    <!--
+      WARNING - @mbggenerated
+      This element is automatically generated by MyBatis Generator, do not modify.
+    -->
+    insert into smbms_provider
+    <trim prefix="(" suffix=")" suffixOverrides="," >
+      <if test="id != null" >
+        id,
+      </if>
+      <if test="procode != null" >
+        proCode,
+      </if>
+      <if test="proname != null" >
+        proName,
+      </if>
+      <if test="prodesc != null" >
+        proDesc,
+      </if>
+      <if test="procontact != null" >
+        proContact,
+      </if>
+      <if test="prophone != null" >
+        proPhone,
+      </if>
+      <if test="proaddress != null" >
+        proAddress,
+      </if>
+      <if test="profax != null" >
+        proFax,
+      </if>
+      <if test="createdby != null" >
+        createdBy,
+      </if>
+      <if test="creationdate != null" >
+        creationDate,
+      </if>
+      <if test="modifydate != null" >
+        modifyDate,
+      </if>
+      <if test="modifyby != null" >
+        modifyBy,
+      </if>
+    </trim>
+    <trim prefix="values (" suffix=")" suffixOverrides="," >
+      <if test="id != null" >
+        #{id,jdbcType=BIGINT},
+      </if>
+      <if test="procode != null" >
+        #{procode,jdbcType=VARCHAR},
+      </if>
+      <if test="proname != null" >
+        #{proname,jdbcType=VARCHAR},
+      </if>
+      <if test="prodesc != null" >
+        #{prodesc,jdbcType=VARCHAR},
+      </if>
+      <if test="procontact != null" >
+        #{procontact,jdbcType=VARCHAR},
+      </if>
+      <if test="prophone != null" >
+        #{prophone,jdbcType=VARCHAR},
+      </if>
+      <if test="proaddress != null" >
+        #{proaddress,jdbcType=VARCHAR},
+      </if>
+      <if test="profax != null" >
+        #{profax,jdbcType=VARCHAR},
+      </if>
+      <if test="createdby != null" >
+        #{createdby,jdbcType=BIGINT},
+      </if>
+      <if test="creationdate != null" >
+        #{creationdate,jdbcType=TIMESTAMP},
+      </if>
+      <if test="modifydate != null" >
+        #{modifydate,jdbcType=TIMESTAMP},
+      </if>
+      <if test="modifyby != null" >
+        #{modifyby,jdbcType=BIGINT},
+      </if>
+    </trim>
+  </insert>
+  <select id="countByExample" parameterType="com.lpc.pojo.SmbmsProviderExample" resultType="java.lang.Integer" >
+    <!--
+      WARNING - @mbggenerated
+      This element is automatically generated by MyBatis Generator, do not modify.
+    -->
+    select count(*) from smbms_provider
+    <if test="_parameter != null" >
+      <include refid="Example_Where_Clause" />
+    </if>
+  </select>
+  <update id="updateByExampleSelective" parameterType="map" >
+    <!--
+      WARNING - @mbggenerated
+      This element is automatically generated by MyBatis Generator, do not modify.
+    -->
+    update smbms_provider
+    <set >
+      <if test="record.id != null" >
+        id = #{record.id,jdbcType=BIGINT},
+      </if>
+      <if test="record.procode != null" >
+        proCode = #{record.procode,jdbcType=VARCHAR},
+      </if>
+      <if test="record.proname != null" >
+        proName = #{record.proname,jdbcType=VARCHAR},
+      </if>
+      <if test="record.prodesc != null" >
+        proDesc = #{record.prodesc,jdbcType=VARCHAR},
+      </if>
+      <if test="record.procontact != null" >
+        proContact = #{record.procontact,jdbcType=VARCHAR},
+      </if>
+      <if test="record.prophone != null" >
+        proPhone = #{record.prophone,jdbcType=VARCHAR},
+      </if>
+      <if test="record.proaddress != null" >
+        proAddress = #{record.proaddress,jdbcType=VARCHAR},
+      </if>
+      <if test="record.profax != null" >
+        proFax = #{record.profax,jdbcType=VARCHAR},
+      </if>
+      <if test="record.createdby != null" >
+        createdBy = #{record.createdby,jdbcType=BIGINT},
+      </if>
+      <if test="record.creationdate != null" >
+        creationDate = #{record.creationdate,jdbcType=TIMESTAMP},
+      </if>
+      <if test="record.modifydate != null" >
+        modifyDate = #{record.modifydate,jdbcType=TIMESTAMP},
+      </if>
+      <if test="record.modifyby != null" >
+        modifyBy = #{record.modifyby,jdbcType=BIGINT},
+      </if>
+    </set>
+    <if test="_parameter != null" >
+      <include refid="Update_By_Example_Where_Clause" />
+    </if>
+  </update>
+  <update id="updateByExample" parameterType="map" >
+    <!--
+      WARNING - @mbggenerated
+      This element is automatically generated by MyBatis Generator, do not modify.
+    -->
+    update smbms_provider
+    set id = #{record.id,jdbcType=BIGINT},
+      proCode = #{record.procode,jdbcType=VARCHAR},
+      proName = #{record.proname,jdbcType=VARCHAR},
+      proDesc = #{record.prodesc,jdbcType=VARCHAR},
+      proContact = #{record.procontact,jdbcType=VARCHAR},
+      proPhone = #{record.prophone,jdbcType=VARCHAR},
+      proAddress = #{record.proaddress,jdbcType=VARCHAR},
+      proFax = #{record.profax,jdbcType=VARCHAR},
+      createdBy = #{record.createdby,jdbcType=BIGINT},
+      creationDate = #{record.creationdate,jdbcType=TIMESTAMP},
+      modifyDate = #{record.modifydate,jdbcType=TIMESTAMP},
+      modifyBy = #{record.modifyby,jdbcType=BIGINT}
+    <if test="_parameter != null" >
+      <include refid="Update_By_Example_Where_Clause" />
+    </if>
+  </update>
+  <update id="updateByPrimaryKeySelective" parameterType="com.lpc.pojo.SmbmsProvider" >
+    <!--
+      WARNING - @mbggenerated
+      This element is automatically generated by MyBatis Generator, do not modify.
+    -->
+    update smbms_provider
+    <set >
+      <if test="procode != null" >
+        proCode = #{procode,jdbcType=VARCHAR},
+      </if>
+      <if test="proname != null" >
+        proName = #{proname,jdbcType=VARCHAR},
+      </if>
+      <if test="prodesc != null" >
+        proDesc = #{prodesc,jdbcType=VARCHAR},
+      </if>
+      <if test="procontact != null" >
+        proContact = #{procontact,jdbcType=VARCHAR},
+      </if>
+      <if test="prophone != null" >
+        proPhone = #{prophone,jdbcType=VARCHAR},
+      </if>
+      <if test="proaddress != null" >
+        proAddress = #{proaddress,jdbcType=VARCHAR},
+      </if>
+      <if test="profax != null" >
+        proFax = #{profax,jdbcType=VARCHAR},
+      </if>
+      <if test="createdby != null" >
+        createdBy = #{createdby,jdbcType=BIGINT},
+      </if>
+      <if test="creationdate != null" >
+        creationDate = #{creationdate,jdbcType=TIMESTAMP},
+      </if>
+      <if test="modifydate != null" >
+        modifyDate = #{modifydate,jdbcType=TIMESTAMP},
+      </if>
+      <if test="modifyby != null" >
+        modifyBy = #{modifyby,jdbcType=BIGINT},
+      </if>
+    </set>
+    where id = #{id,jdbcType=BIGINT}
+  </update>
+  <update id="updateByPrimaryKey" parameterType="com.lpc.pojo.SmbmsProvider" >
+    <!--
+      WARNING - @mbggenerated
+      This element is automatically generated by MyBatis Generator, do not modify.
+    -->
+    update smbms_provider
+    set proCode = #{procode,jdbcType=VARCHAR},
+      proName = #{proname,jdbcType=VARCHAR},
+      proDesc = #{prodesc,jdbcType=VARCHAR},
+      proContact = #{procontact,jdbcType=VARCHAR},
+      proPhone = #{prophone,jdbcType=VARCHAR},
+      proAddress = #{proaddress,jdbcType=VARCHAR},
+      proFax = #{profax,jdbcType=VARCHAR},
+      createdBy = #{createdby,jdbcType=BIGINT},
+      creationDate = #{creationdate,jdbcType=TIMESTAMP},
+      modifyDate = #{modifydate,jdbcType=TIMESTAMP},
+      modifyBy = #{modifyby,jdbcType=BIGINT}
+    where id = #{id,jdbcType=BIGINT}
+  </update>
+</mapper>
\ No newline at end of file
Index: .idea/libraries/lib.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- .idea/libraries/lib.xml	(date 1594538498336)
+++ .idea/libraries/lib.xml	(date 1594538498336)
@@ -0,0 +1,10 @@
+<component name="libraryTable">
+  <library name="lib">
+    <CLASSES>
+      <root url="file://D:/apache-tomcat-8.5.38/lib" />
+    </CLASSES>
+    <JAVADOC />
+    <SOURCES />
+    <jarDirectory url="file://D:/apache-tomcat-8.5.38/lib" recursive="false" />
+  </library>
+</component>
\ No newline at end of file
Index: src/main/java/com/lpc/utils/SysInterceptor.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/java/com/lpc/utils/SysInterceptor.java	(date 1594539855053)
+++ src/main/java/com/lpc/utils/SysInterceptor.java	(date 1594539855053)
@@ -0,0 +1,22 @@
+package com.lpc.utils;
+
+import org.springframework.web.servlet.handler.HandlerInterceptorAdapter;
+
+import javax.servlet.http.HttpServletRequest;
+import javax.servlet.http.HttpServletResponse;
+import javax.servlet.http.HttpSession;
+
+public class SysInterceptor extends HandlerInterceptorAdapter {
+	@Override
+	public boolean preHandle(HttpServletRequest request, HttpServletResponse response, Object handler) throws Exception {
+		HttpSession session=request.getSession();
+		Object obj=session.getAttribute("userOnLogin");
+		if(obj==null){
+			String path=request.getContextPath();
+			session.setAttribute("error", "未登陆，请先登陆");
+			response.sendRedirect(path+"/login");
+			return false;
+		}
+		return true;
+	}
+}
Index: target/classes/jdbc.properties
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>GBK
===================================================================
--- target/classes/jdbc.properties	(date 1593999284480)
+++ target/classes/jdbc.properties	(date 1593999284480)
@@ -0,0 +1,4 @@
+mysql.driver=com.mysql.jdbc.Driver
+mysql.url=jdbc:mysql://lpc-test.mysql.rds.aliyuncs.com:3306/smbms?useUnicode=true&characterEncoding=UTF-8
+mysql.username=root
+mysql.password=Lpc123456
\ No newline at end of file
Index: target/classes/applicationContext-redis.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- target/classes/applicationContext-redis.xml	(date 1594540670352)
+++ target/classes/applicationContext-redis.xml	(date 1594540670352)
@@ -0,0 +1,66 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<beans xmlns="http://www.springframework.org/schema/beans"
+       xmlns:context="http://www.springframework.org/schema/context"
+       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
+       xsi:schemaLocation="
+    http://www.springframework.org/schema/beans
+    http://www.springframework.org/schema/beans/spring-beans.xsd
+    http://www.springframework.org/schema/context
+    http://www.springframework.org/schema/context/spring-context.xsd">
+    <context:property-placeholder order="1" location="classpath:redis.properties" ignore-unresolvable="true"/>
+    <!-- Redis -->
+    <!-- 连接池参数 -->
+    <bean id="jedisPoolConfig" class="redis.clients.jedis.JedisPoolConfig">
+        <property name="maxIdle" value="${redis.pool.maxIdle}" />
+        <property name="minIdle" value="${redis.pool.minIdle}" />
+        <property name="maxTotal" value="${redis.pool.maxTotal}" />
+        <property name="maxWaitMillis" value="${redis.pool.maxWaitMillis}" />
+        <property name="minEvictableIdleTimeMillis" value="${redis.pool.minEvictableIdleTimeMillis}"></property>
+        <property name="numTestsPerEvictionRun" value="${redis.pool.numTestsPerEvictionRun}"></property>
+        <property name="timeBetweenEvictionRunsMillis" value="${redis.pool.timeBetweenEvictionRunsMillis}"></property>
+        <property name="testOnBorrow" value="${redis.pool.testOnBorrow}" />
+        <property name="testOnReturn" value="${redis.pool.testOnReturn}" />
+        <property name="testWhileIdle" value="${redis.pool.testWhileIdle}"></property>
+    </bean>
+
+    <bean id="jedisConnectionFactory" class="org.springframework.data.redis.connection.jedis.JedisConnectionFactory">
+        <property name="poolConfig" ref="jedisPoolConfig" />
+        <property name="hostName" value="${redis.host}" />
+        <property name="port" value="${redis.port}" />
+        <property name="password" value="${redis.pwd}" />
+        <property name="usePool" value="${redis.userPool}" />
+        <property name="database" value="${redis.database}" />
+        <property name="timeout" value="${redis.timeout}" />
+    </bean>
+
+    <bean id="redisTemplate" class="org.springframework.data.redis.core.RedisTemplate">
+        <property name="connectionFactory" ref="jedisConnectionFactory" />
+
+        <!-- 序列化方式 建议key/hashKey采用StringRedisSerializer -->
+        <property name="keySerializer">
+            <bean
+                    class="org.springframework.data.redis.serializer.StringRedisSerializer" />
+        </property>
+        <property name="valueSerializer">
+            <bean
+                    class="org.springframework.data.redis.serializer.JdkSerializationRedisSerializer" />
+        </property>
+        <property name="hashKeySerializer">
+            <bean
+                    class="org.springframework.data.redis.serializer.StringRedisSerializer" />
+        </property>
+        <property name="hashValueSerializer">
+            <bean class="org.springframework.data.redis.serializer.JdkSerializationRedisSerializer" />
+        </property>
+        <!-- 开启REIDS事务支持 -->
+        <property name="enableTransactionSupport" value="false" />
+    </bean>
+
+    <!-- 对string操作的封装 -->
+    <bean id="stringRedisTemplate" class="org.springframework.data.redis.core.StringRedisTemplate">
+        <constructor-arg ref="jedisConnectionFactory" />
+        <!-- 开启REIDS事务支持 -->
+        <property name="enableTransactionSupport" value="false" />
+    </bean>
+
+</beans>
\ No newline at end of file
Index: target/classes/mybatis-config.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- target/classes/mybatis-config.xml	(date 1594529192112)
+++ target/classes/mybatis-config.xml	(date 1594529192112)
@@ -0,0 +1,18 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<!DOCTYPE configuration
+PUBLIC "-//mybatis.org//DTD Config 3.0//EN"
+"http://mybatis.org/dtd/mybatis-3-config.dtd">
+<configuration>
+	<typeAliases>
+		<package name="com.lpc.pojo"/>
+	</typeAliases>
+	<plugins>
+		<plugin interceptor="com.github.pagehelper.PageInterceptor">
+			<!--reasonable：分页合理化参数，默认值为false。
+                当该参数设置为 true 时，pageNum<=0 时会查询第一页，
+                pageNum>pages（超过总数时），会查询最后一页。
+                默认false 时，直接根据参数进行查询。-->
+			<property name="reasonable" value="true"/>
+		</plugin>
+	</plugins>
+</configuration>
\ No newline at end of file
Index: src/main/webapp/index.jsp
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/webapp/index.jsp	(date 1594377590332)
+++ src/main/webapp/index.jsp	(date 1594377590332)
@@ -0,0 +1,28 @@
+<%@ page language="java" import="java.util.*" pageEncoding="UTF-8"%>
+<%
+String path = request.getContextPath();
+String basePath = request.getScheme()+"://"+request.getServerName()+":"+request.getServerPort()+path+"/";
+%>
+
+<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
+<html>
+  <head>
+    <base href="<%=basePath%>">
+    
+    <title>My JSP 'index.jsp' starting page</title>
+	<meta http-equiv="pragma" content="no-cache">
+	<meta http-equiv="cache-control" content="no-cache">
+	<meta http-equiv="expires" content="0">    
+	<meta http-equiv="keywords" content="keyword1,keyword2,keyword3">
+	<meta http-equiv="description" content="This is my page">
+	<!--
+	<link rel="stylesheet" type="text/css" href="styles.css">
+	-->
+  </head>
+  <script>
+      window.location.href="/login";
+  </script>
+  <body>
+    This is my JSP page. <br>
+  </body>
+</html>
Index: src/main/webapp/401.jsp
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/webapp/401.jsp	(date 1578576648850)
+++ src/main/webapp/401.jsp	(date 1578576648850)
@@ -0,0 +1,21 @@
+<%@ page language="java" contentType="text/html; charset=UTF-8"
+	pageEncoding="UTF-8"%>
+<%@ taglib uri="http://java.sun.com/jsp/jstl/core" prefix="c" %>	
+<html>
+<head>
+<meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
+<title>超市账单管理系统</title>
+<link type="text/css" rel="stylesheet" href="${pageContext.request.contextPath }/statics/css/style.css">
+</head>
+<body>
+	<div>
+		<h2>对不起，您没有权限访问，请返回到<a href="${pageContext.request.contextPath }/login">首页</a></h2>
+	</div><!--/span-->
+	<div>
+		<img src="${pageContext.request.contextPath }/statics/images/jg.png"/>
+	</div><!--/span-->
+
+</body>
+</html>
+
+
Index: target/classes/mapper/SmbmsAddressMapper.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- target/classes/mapper/SmbmsAddressMapper.xml	(date 1594378695259)
+++ target/classes/mapper/SmbmsAddressMapper.xml	(date 1594378695259)
@@ -0,0 +1,351 @@
+<?xml version="1.0" encoding="UTF-8" ?>
+<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
+<mapper namespace="SmbmsAddressMapper" >
+  <resultMap id="BaseResultMap" type="com.lpc.pojo.SmbmsAddress" >
+    <!--
+      WARNING - @mbggenerated
+      This element is automatically generated by MyBatis Generator, do not modify.
+    -->
+    <id column="id" property="id" jdbcType="BIGINT" />
+    <result column="contact" property="contact" jdbcType="VARCHAR" />
+    <result column="addressDesc" property="addressdesc" jdbcType="VARCHAR" />
+    <result column="postCode" property="postcode" jdbcType="VARCHAR" />
+    <result column="tel" property="tel" jdbcType="VARCHAR" />
+    <result column="createdBy" property="createdby" jdbcType="BIGINT" />
+    <result column="creationDate" property="creationdate" jdbcType="TIMESTAMP" />
+    <result column="modifyBy" property="modifyby" jdbcType="BIGINT" />
+    <result column="modifyDate" property="modifydate" jdbcType="TIMESTAMP" />
+    <result column="userId" property="userid" jdbcType="BIGINT" />
+  </resultMap>
+  <sql id="Example_Where_Clause" >
+    <!--
+      WARNING - @mbggenerated
+      This element is automatically generated by MyBatis Generator, do not modify.
+    -->
+    <where >
+      <foreach collection="oredCriteria" item="criteria" separator="or" >
+        <if test="criteria.valid" >
+          <trim prefix="(" suffix=")" prefixOverrides="and" >
+            <foreach collection="criteria.criteria" item="criterion" >
+              <choose >
+                <when test="criterion.noValue" >
+                  and ${criterion.condition}
+                </when>
+                <when test="criterion.singleValue" >
+                  and ${criterion.condition} #{criterion.value}
+                </when>
+                <when test="criterion.betweenValue" >
+                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
+                </when>
+                <when test="criterion.listValue" >
+                  and ${criterion.condition}
+                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
+                    #{listItem}
+                  </foreach>
+                </when>
+              </choose>
+            </foreach>
+          </trim>
+        </if>
+      </foreach>
+    </where>
+  </sql>
+  <sql id="Update_By_Example_Where_Clause" >
+    <!--
+      WARNING - @mbggenerated
+      This element is automatically generated by MyBatis Generator, do not modify.
+    -->
+    <where >
+      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
+        <if test="criteria.valid" >
+          <trim prefix="(" suffix=")" prefixOverrides="and" >
+            <foreach collection="criteria.criteria" item="criterion" >
+              <choose >
+                <when test="criterion.noValue" >
+                  and ${criterion.condition}
+                </when>
+                <when test="criterion.singleValue" >
+                  and ${criterion.condition} #{criterion.value}
+                </when>
+                <when test="criterion.betweenValue" >
+                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
+                </when>
+                <when test="criterion.listValue" >
+                  and ${criterion.condition}
+                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
+                    #{listItem}
+                  </foreach>
+                </when>
+              </choose>
+            </foreach>
+          </trim>
+        </if>
+      </foreach>
+    </where>
+  </sql>
+  <sql id="Base_Column_List" >
+    <!--
+      WARNING - @mbggenerated
+      This element is automatically generated by MyBatis Generator, do not modify.
+    -->
+    id, contact, addressDesc, postCode, tel, createdBy, creationDate, modifyBy, modifyDate, 
+    userId
+  </sql>
+  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.lpc.pojo.SmbmsAddressExample" >
+    <!--
+      WARNING - @mbggenerated
+      This element is automatically generated by MyBatis Generator, do not modify.
+    -->
+    select
+    <if test="distinct" >
+      distinct
+    </if>
+    <include refid="Base_Column_List" />
+    from smbms_address
+    <if test="_parameter != null" >
+      <include refid="Example_Where_Clause" />
+    </if>
+    <if test="orderByClause != null" >
+      order by ${orderByClause}
+    </if>
+  </select>
+  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
+    <!--
+      WARNING - @mbggenerated
+      This element is automatically generated by MyBatis Generator, do not modify.
+    -->
+    select 
+    <include refid="Base_Column_List" />
+    from smbms_address
+    where id = #{id,jdbcType=BIGINT}
+  </select>
+  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
+    <!--
+      WARNING - @mbggenerated
+      This element is automatically generated by MyBatis Generator, do not modify.
+    -->
+    delete from smbms_address
+    where id = #{id,jdbcType=BIGINT}
+  </delete>
+  <delete id="deleteByExample" parameterType="com.lpc.pojo.SmbmsAddressExample" >
+    <!--
+      WARNING - @mbggenerated
+      This element is automatically generated by MyBatis Generator, do not modify.
+    -->
+    delete from smbms_address
+    <if test="_parameter != null" >
+      <include refid="Example_Where_Clause" />
+    </if>
+  </delete>
+  <insert id="insert" parameterType="com.lpc.pojo.SmbmsAddress" >
+    <!--
+      WARNING - @mbggenerated
+      This element is automatically generated by MyBatis Generator, do not modify.
+    -->
+    insert into smbms_address (id, contact, addressDesc, 
+      postCode, tel, createdBy, 
+      creationDate, modifyBy, modifyDate, 
+      userId)
+    values (#{id,jdbcType=BIGINT}, #{contact,jdbcType=VARCHAR}, #{addressdesc,jdbcType=VARCHAR}, 
+      #{postcode,jdbcType=VARCHAR}, #{tel,jdbcType=VARCHAR}, #{createdby,jdbcType=BIGINT}, 
+      #{creationdate,jdbcType=TIMESTAMP}, #{modifyby,jdbcType=BIGINT}, #{modifydate,jdbcType=TIMESTAMP}, 
+      #{userid,jdbcType=BIGINT})
+  </insert>
+  <insert id="insertSelective" parameterType="com.lpc.pojo.SmbmsAddress" >
+    <!--
+      WARNING - @mbggenerated
+      This element is automatically generated by MyBatis Generator, do not modify.
+    -->
+    insert into smbms_address
+    <trim prefix="(" suffix=")" suffixOverrides="," >
+      <if test="id != null" >
+        id,
+      </if>
+      <if test="contact != null" >
+        contact,
+      </if>
+      <if test="addressdesc != null" >
+        addressDesc,
+      </if>
+      <if test="postcode != null" >
+        postCode,
+      </if>
+      <if test="tel != null" >
+        tel,
+      </if>
+      <if test="createdby != null" >
+        createdBy,
+      </if>
+      <if test="creationdate != null" >
+        creationDate,
+      </if>
+      <if test="modifyby != null" >
+        modifyBy,
+      </if>
+      <if test="modifydate != null" >
+        modifyDate,
+      </if>
+      <if test="userid != null" >
+        userId,
+      </if>
+    </trim>
+    <trim prefix="values (" suffix=")" suffixOverrides="," >
+      <if test="id != null" >
+        #{id,jdbcType=BIGINT},
+      </if>
+      <if test="contact != null" >
+        #{contact,jdbcType=VARCHAR},
+      </if>
+      <if test="addressdesc != null" >
+        #{addressdesc,jdbcType=VARCHAR},
+      </if>
+      <if test="postcode != null" >
+        #{postcode,jdbcType=VARCHAR},
+      </if>
+      <if test="tel != null" >
+        #{tel,jdbcType=VARCHAR},
+      </if>
+      <if test="createdby != null" >
+        #{createdby,jdbcType=BIGINT},
+      </if>
+      <if test="creationdate != null" >
+        #{creationdate,jdbcType=TIMESTAMP},
+      </if>
+      <if test="modifyby != null" >
+        #{modifyby,jdbcType=BIGINT},
+      </if>
+      <if test="modifydate != null" >
+        #{modifydate,jdbcType=TIMESTAMP},
+      </if>
+      <if test="userid != null" >
+        #{userid,jdbcType=BIGINT},
+      </if>
+    </trim>
+  </insert>
+  <select id="countByExample" parameterType="com.lpc.pojo.SmbmsAddressExample" resultType="java.lang.Integer" >
+    <!--
+      WARNING - @mbggenerated
+      This element is automatically generated by MyBatis Generator, do not modify.
+    -->
+    select count(*) from smbms_address
+    <if test="_parameter != null" >
+      <include refid="Example_Where_Clause" />
+    </if>
+  </select>
+  <update id="updateByExampleSelective" parameterType="map" >
+    <!--
+      WARNING - @mbggenerated
+      This element is automatically generated by MyBatis Generator, do not modify.
+    -->
+    update smbms_address
+    <set >
+      <if test="record.id != null" >
+        id = #{record.id,jdbcType=BIGINT},
+      </if>
+      <if test="record.contact != null" >
+        contact = #{record.contact,jdbcType=VARCHAR},
+      </if>
+      <if test="record.addressdesc != null" >
+        addressDesc = #{record.addressdesc,jdbcType=VARCHAR},
+      </if>
+      <if test="record.postcode != null" >
+        postCode = #{record.postcode,jdbcType=VARCHAR},
+      </if>
+      <if test="record.tel != null" >
+        tel = #{record.tel,jdbcType=VARCHAR},
+      </if>
+      <if test="record.createdby != null" >
+        createdBy = #{record.createdby,jdbcType=BIGINT},
+      </if>
+      <if test="record.creationdate != null" >
+        creationDate = #{record.creationdate,jdbcType=TIMESTAMP},
+      </if>
+      <if test="record.modifyby != null" >
+        modifyBy = #{record.modifyby,jdbcType=BIGINT},
+      </if>
+      <if test="record.modifydate != null" >
+        modifyDate = #{record.modifydate,jdbcType=TIMESTAMP},
+      </if>
+      <if test="record.userid != null" >
+        userId = #{record.userid,jdbcType=BIGINT},
+      </if>
+    </set>
+    <if test="_parameter != null" >
+      <include refid="Update_By_Example_Where_Clause" />
+    </if>
+  </update>
+  <update id="updateByExample" parameterType="map" >
+    <!--
+      WARNING - @mbggenerated
+      This element is automatically generated by MyBatis Generator, do not modify.
+    -->
+    update smbms_address
+    set id = #{record.id,jdbcType=BIGINT},
+      contact = #{record.contact,jdbcType=VARCHAR},
+      addressDesc = #{record.addressdesc,jdbcType=VARCHAR},
+      postCode = #{record.postcode,jdbcType=VARCHAR},
+      tel = #{record.tel,jdbcType=VARCHAR},
+      createdBy = #{record.createdby,jdbcType=BIGINT},
+      creationDate = #{record.creationdate,jdbcType=TIMESTAMP},
+      modifyBy = #{record.modifyby,jdbcType=BIGINT},
+      modifyDate = #{record.modifydate,jdbcType=TIMESTAMP},
+      userId = #{record.userid,jdbcType=BIGINT}
+    <if test="_parameter != null" >
+      <include refid="Update_By_Example_Where_Clause" />
+    </if>
+  </update>
+  <update id="updateByPrimaryKeySelective" parameterType="com.lpc.pojo.SmbmsAddress" >
+    <!--
+      WARNING - @mbggenerated
+      This element is automatically generated by MyBatis Generator, do not modify.
+    -->
+    update smbms_address
+    <set >
+      <if test="contact != null" >
+        contact = #{contact,jdbcType=VARCHAR},
+      </if>
+      <if test="addressdesc != null" >
+        addressDesc = #{addressdesc,jdbcType=VARCHAR},
+      </if>
+      <if test="postcode != null" >
+        postCode = #{postcode,jdbcType=VARCHAR},
+      </if>
+      <if test="tel != null" >
+        tel = #{tel,jdbcType=VARCHAR},
+      </if>
+      <if test="createdby != null" >
+        createdBy = #{createdby,jdbcType=BIGINT},
+      </if>
+      <if test="creationdate != null" >
+        creationDate = #{creationdate,jdbcType=TIMESTAMP},
+      </if>
+      <if test="modifyby != null" >
+        modifyBy = #{modifyby,jdbcType=BIGINT},
+      </if>
+      <if test="modifydate != null" >
+        modifyDate = #{modifydate,jdbcType=TIMESTAMP},
+      </if>
+      <if test="userid != null" >
+        userId = #{userid,jdbcType=BIGINT},
+      </if>
+    </set>
+    where id = #{id,jdbcType=BIGINT}
+  </update>
+  <update id="updateByPrimaryKey" parameterType="com.lpc.pojo.SmbmsAddress" >
+    <!--
+      WARNING - @mbggenerated
+      This element is automatically generated by MyBatis Generator, do not modify.
+    -->
+    update smbms_address
+    set contact = #{contact,jdbcType=VARCHAR},
+      addressDesc = #{addressdesc,jdbcType=VARCHAR},
+      postCode = #{postcode,jdbcType=VARCHAR},
+      tel = #{tel,jdbcType=VARCHAR},
+      createdBy = #{createdby,jdbcType=BIGINT},
+      creationDate = #{creationdate,jdbcType=TIMESTAMP},
+      modifyBy = #{modifyby,jdbcType=BIGINT},
+      modifyDate = #{modifydate,jdbcType=TIMESTAMP},
+      userId = #{userid,jdbcType=BIGINT}
+    where id = #{id,jdbcType=BIGINT}
+  </update>
+</mapper>
\ No newline at end of file
Index: src/main/webapp/WEB-INF/web.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/webapp/WEB-INF/web.xml	(date 1594540589519)
+++ src/main/webapp/WEB-INF/web.xml	(date 1594540589519)
@@ -0,0 +1,63 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<web-app xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://java.sun.com/xml/ns/javaee" xsi:schemaLocation="http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_3_0.xsd" id="WebApp_ID" version="3.0">
+  <display-name>supermarket</display-name>
+
+   <context-param>
+    <param-name>contextConfigLocation</param-name>
+    <param-value>
+        classpath:applicationContext.xml,
+        classpath:applicationContext-redis.xml
+    </param-value>
+  </context-param>
+    <filter>
+        <filter-name>encodingFilter</filter-name>
+        <filter-class>org.springframework.web.filter.CharacterEncodingFilter</filter-class>
+        <init-param>
+            <param-name>encoding</param-name>
+            <param-value>UTF-8</param-value>
+        </init-param>
+    </filter>
+    <filter-mapping>
+        <filter-name>encodingFilter</filter-name>
+        <url-pattern>/*</url-pattern>
+    </filter-mapping>
+
+
+
+    <!--配置PUT请求-->
+    <filter>
+        <filter-name>HiddenHttpMethodFilter</filter-name>
+        <filter-class>org.springframework.web.filter.HiddenHttpMethodFilter</filter-class>
+    </filter>
+    <filter-mapping>
+        <filter-name>HiddenHttpMethodFilter</filter-name>
+        <url-pattern>/*</url-pattern>
+        <servlet-name>springmvc</servlet-name>
+    </filter-mapping>
+    <!--结束-->
+  <servlet>
+  	<servlet-name>springmvc</servlet-name>
+  	<servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
+  	<init-param>
+  		<param-name>contextConfigLocation</param-name>
+  		<param-value>classpath:springmvc-servlet.xml</param-value>
+  	</init-param>
+  	<load-on-startup>1</load-on-startup>
+  </servlet>
+  <servlet-mapping>
+  	<servlet-name>springmvc</servlet-name>
+  	<url-pattern>/</url-pattern>
+  </servlet-mapping>
+  <listener>
+    <listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
+  </listener>
+
+  <welcome-file-list>
+    <welcome-file>index.html</welcome-file>
+    <welcome-file>index.htm</welcome-file>
+    <welcome-file>index.jsp</welcome-file>
+    <welcome-file>default.html</welcome-file>
+    <welcome-file>default.htm</welcome-file>
+    <welcome-file>default.jsp</welcome-file>
+  </welcome-file-list>
+</web-app>
\ No newline at end of file
Index: src/main/java/com/lpc/service/SysService.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/java/com/lpc/service/SysService.java	(date 1594543632883)
+++ src/main/java/com/lpc/service/SysService.java	(date 1594543632883)
@@ -0,0 +1,493 @@
+package com.lpc.service;
+
+import com.github.pagehelper.PageHelper;
+import com.github.pagehelper.PageInfo;
+import com.lpc.constant.ConstantKey;
+import com.lpc.dao.DAO;
+import com.lpc.pojo.*;
+import org.springframework.beans.factory.annotation.Autowired;
+import org.springframework.data.redis.core.RedisTemplate;
+import org.springframework.stereotype.Service;
+
+import java.util.*;
+
+/**
+ * @User lpc/李金超
+ * @ClassName SysService  类名
+ * @Author AUSUA  作者
+ * @Date 2020/7/10 19:04  时间
+ * @Version 1.0 版本
+ */
+@Service
+public class SysService {
+
+    @Autowired
+    private DAO dao;
+    @Autowired
+    private RedisTemplate redisTemplate;
+
+    /**
+     * 查询列表+模糊查询
+     * @param productName
+     * @param providerId
+     * @param isPayment
+     * @return
+     */
+    public List<Map<String, Object>> billList(String productName, String providerId, String isPayment) {
+        try {
+            List<Map<String,Object>> listMap = new ArrayList<>();
+            SmbmsBillExample smbmsBillExample = new SmbmsBillExample();
+            SmbmsBillExample.Criteria criteria = smbmsBillExample.createCriteria();
+            boolean b1 = null != productName && !"".equals(productName);
+            if(b1){
+                criteria.andProductnameLike("%"+productName+"%");
+            }
+            boolean b = null != providerId && !"".equals(providerId) && !"0".equals(providerId);
+            if(b){
+                criteria.andProvideridEqualTo(Long.valueOf(providerId));
+            }
+            boolean b2 = null != isPayment && !"".equals(isPayment) && !"0".equals(isPayment);
+            if(b2){
+                criteria.andIspaymentEqualTo(Integer.valueOf(isPayment));
+            }
+            if(b1 || b || b2){
+                List<SmbmsBill> forList = (List<SmbmsBill>) dao.findForList("SmbmsBillMapper.selectByExample", smbmsBillExample);
+                for (SmbmsBill smbmsBill : forList) {
+                    SmbmsProviderExample smbmsProviderExample = new SmbmsProviderExample();
+                    smbmsProviderExample.createCriteria().andIdEqualTo(smbmsBill.getProviderid());
+                    SmbmsProvider forObject = (SmbmsProvider) dao.findForObject("SmbmsProviderMapper.selectByExample", smbmsProviderExample);
+                    Map<String, Object> mapVo = getMap(smbmsBill);
+                    if (forObject!=null){
+                        mapVo.put("proName",forObject.getProname());
+                    }else {
+                        mapVo.put("proName","");
+                    }
+                    listMap.add(mapVo);
+                }
+            }else {
+                listMap = (List<Map<String, Object>>) redisTemplate.opsForValue().get(ConstantKey.BILLLIST);
+                if(listMap==null||listMap.size()==0){
+                    listMap = new ArrayList<>();
+                    List<SmbmsBill> forList = (List<SmbmsBill>) dao.findForList("SmbmsBillMapper.selectByExample", smbmsBillExample);
+                    for (SmbmsBill smbmsBill : forList) {
+                        SmbmsProviderExample smbmsProviderExample = new SmbmsProviderExample();
+                        smbmsProviderExample.createCriteria().andIdEqualTo(smbmsBill.getProviderid());
+                        SmbmsProvider forObject = (SmbmsProvider) dao.findForObject("SmbmsProviderMapper.selectByExample", smbmsProviderExample);
+                        Map<String, Object> mapVo = getMap(smbmsBill);
+                        if (forObject!=null){
+                            mapVo.put("proName",forObject.getProname());
+                        }else {
+                            mapVo.put("proName","");
+                        }
+                        listMap.add(mapVo);
+                    }
+                    redisTemplate.opsForValue().set(ConstantKey.BILLLIST,listMap);
+                }
+            }
+            return listMap;
+        } catch (Exception e) {
+            e.printStackTrace();
+        }
+        return null;
+    }
+
+    /**
+     * 默认无参查询全部
+     * @return
+     */
+    public List<SmbmsProvider> providerList() {
+        try {
+            List<SmbmsProvider> forList = (List<SmbmsProvider>) redisTemplate.opsForValue().get(ConstantKey.PROVIDERLIST);
+            if(forList==null||forList.size()==0){
+                forList=       (List<SmbmsProvider>) dao.findForList("SmbmsProviderMapper.selectByExample", null);
+                redisTemplate.opsForValue().set("providerList",forList);
+            }
+            return forList;
+        } catch (Exception e) {
+            e.printStackTrace();
+            return null;
+        }
+    }
+
+    /**
+     * 重写查询
+     * @param queryProCode
+     * @param queryProName
+     * @return
+     */
+    public List<SmbmsProvider> providerList(String queryProCode,String queryProName) {
+        try {
+            List<SmbmsProvider> forList = null;
+            SmbmsProviderExample smbmsProviderExample = new SmbmsProviderExample();
+            SmbmsProviderExample.Criteria criteria = smbmsProviderExample.createCriteria();
+            boolean b = null != queryProCode && !"".equals(queryProCode);
+            if(b){
+                criteria.andProcodeLike("%"+queryProCode+"%");
+            }
+            boolean b1 = null != queryProName && !"".equals(queryProName);
+            if(b1){
+                criteria.andPronameLike("%"+queryProName+"%");
+            }
+            if (b||b1){
+                forList = (List<SmbmsProvider>) dao.findForList("SmbmsProviderMapper.selectByExample", smbmsProviderExample);
+                redisTemplate.opsForValue().set(ConstantKey.PROVIDERLIST2,forList);
+            }else {
+                forList = (List<SmbmsProvider>) redisTemplate.opsForValue().get("providerList");
+            }
+            return forList;
+        } catch (Exception e) {
+            e.printStackTrace();
+        }
+        return null;
+    }
+
+    /**
+     * 订单删除
+     * @param billid
+     * @return
+     */
+    public int billdel(Long billid) {
+        try {
+            dao.delete("SmbmsBillMapper.selectByPrimaryKey", billid);
+            redisTemplate.delete(ConstantKey.PROVIDERLIST);
+            redisTemplate.delete(ConstantKey.PROVIDERLIST2);
+        } catch (Exception e) {
+            e.printStackTrace();
+        }
+        return 1;
+    }
+
+    /**
+     * 订单详情
+     * @param id
+     * @return
+     */
+    public Map<String, Object> billview(Long id) {
+        try {
+            SmbmsBill smbmsBill = (SmbmsBill) dao.findForObject("SmbmsBillMapper.selectByPrimaryKey", id);
+            Map<String, Object> mapVo = getMap(smbmsBill);
+            SmbmsProvider forObject = (SmbmsProvider) dao.findForObject("SmbmsProviderMapper.selectByPrimaryKey", smbmsBill.getProviderid());
+            mapVo.put("proName",forObject.getProname());
+            mapVo.put("productUnit",smbmsBill.getProductunit());
+            mapVo.put("productCount",smbmsBill.getProductcount());
+            return mapVo;
+        } catch (Exception e) {
+            e.printStackTrace();
+        }
+        return null;
+    }
+
+    /**
+     * 通用获取（类似于Vo）
+     * @param smbmsBill
+     * @return
+     */
+    private Map<String,Object> getMap(SmbmsBill smbmsBill){
+        Map<String ,Object> mapVo = new HashMap<>();
+        mapVo.put("id",smbmsBill.getId());
+        mapVo.put("billCode",smbmsBill.getBillcode());
+        mapVo.put("productName",smbmsBill.getProductname());
+        mapVo.put("totalPrice",smbmsBill.getTotalprice());
+        mapVo.put("isPayment",smbmsBill.getIspayment());
+        mapVo.put("creationDate",smbmsBill.getCreationdate());
+        return mapVo;
+    }
+
+    /**
+     * 下拉框 并插入Redis
+     * @return
+     */
+    public List<Map<String ,Object>> billselect() {
+        try {
+            List<Map<String ,Object>> mapList = (List<Map<String, Object>>) redisTemplate.opsForValue().get("billselect");
+            if(null==mapList||mapList.size()==0){
+                List<SmbmsProvider> forList = (List<SmbmsProvider>) dao.findForList("SmbmsProviderMapper.selectByExample", new SmbmsProviderExample());
+                for (SmbmsProvider smbmsProvider : forList) {
+                    Map<String ,Object> map1 = new HashMap<>();
+                    map1.put("id",smbmsProvider.getId());
+                    map1.put("proName",smbmsProvider.getProname());
+                    mapList.add(map1);
+                }
+                redisTemplate.opsForValue().set(ConstantKey.BILLSELECT,mapList);
+            }
+            return mapList;
+        } catch (Exception e) {
+            e.printStackTrace();
+        }
+        return null;
+    }
+
+    /**
+     * 根据Id查询订单详情
+     * @param id
+     * @return
+     */
+    public SmbmsBill billmodify(Long id) {
+        try {
+            SmbmsBill smbmsBill = (SmbmsBill) dao.findForObject("SmbmsBillMapper.selectByPrimaryKey", id);
+            return smbmsBill;
+        } catch (Exception e) {
+            e.printStackTrace();
+        }
+        return null;
+    }
+
+    /**
+     * 修改订单信息
+     * @param smbmsBill
+     */
+    public void updateByBill(SmbmsBill smbmsBill) {
+        try {
+            dao.update("SmbmsBillMapper.updateByPrimaryKeySelective",smbmsBill);
+            redisTemplate.delete(ConstantKey.BILLSELECT);
+            redisTemplate.delete(ConstantKey.BILLLIST);
+        } catch (Exception e) {
+            e.printStackTrace();
+        }
+    }
+
+    /**
+     * 添加订单
+     * @param smbmsBill
+     */
+    public void dobilladd(SmbmsBill smbmsBill) {
+        try {
+            dao.save("SmbmsBillMapper.insert",smbmsBill);
+            redisTemplate.delete(ConstantKey.BILLSELECT);
+            redisTemplate.delete(ConstantKey.BILLLIST);
+        } catch (Exception e) {
+            e.printStackTrace();
+        }
+    }
+
+    /**
+     * 删除厂家
+     * @param id
+     * @return
+     * @throws Exception
+     */
+    public int delprovider(Long id) throws Exception {
+
+        Integer delete = (Integer) dao.delete("SmbmsProviderMapper.deleteByPrimaryKey", id);
+        redisTemplate.delete(ConstantKey.PROVIDERLIST);
+        redisTemplate.delete(ConstantKey.PROVIDERLIST2);
+        return delete;
+    }
+
+    /**
+     * 添加厂家
+     * @param smbmsProvider
+     */
+    public void provideraddsave(SmbmsProvider smbmsProvider) {
+        try {
+            dao.save("SmbmsProviderMapper.insert",smbmsProvider);
+            redisTemplate.delete(ConstantKey.PROVIDERLIST);
+            redisTemplate.delete(ConstantKey.PROVIDERLIST2);
+        } catch (Exception e) {
+            e.printStackTrace();
+        }
+    }
+
+    /**
+     * 根据Id查询厂家
+     * @param id
+     * @return
+     */
+    public SmbmsProvider providermodifyById(Long id) {
+        try {
+            SmbmsProvider forObject = (SmbmsProvider) dao.findForObject("SmbmsProviderMapper.selectByPrimaryKey", id);
+            return forObject;
+        } catch (Exception e) {
+            e.printStackTrace();
+        }
+        return null;
+    }
+
+    /**
+     * 修改厂家
+     * @param smbmsProvider
+     */
+    public void providermodifysave(SmbmsProvider smbmsProvider) {
+        try {
+            dao.update("SmbmsProviderMapper.updateByPrimaryKeySelective",smbmsProvider);
+            redisTemplate.delete(ConstantKey.PROVIDERLIST);
+            redisTemplate.delete(ConstantKey.PROVIDERLIST2);
+        } catch (Exception e) {
+            e.printStackTrace();
+        }
+    }
+
+    /**
+     * 根据Id查询厂家具体信息
+     * @param proid
+     * @return
+     */
+    public SmbmsProvider proview(Long proid) {
+        try {
+            SmbmsProvider forObject = (SmbmsProvider) dao.findForObject("SmbmsProviderMapper.selectByPrimaryKey", proid);
+            return forObject;
+        } catch (Exception e) {
+            e.printStackTrace();
+        }
+        return null;
+    }
+
+    /**
+     * 查询全部权限
+     * @return
+     */
+    public List<SmbmsRole> findByRole() {
+        try {
+            List<SmbmsRole> smbmsRole = (List<SmbmsRole>) redisTemplate.opsForValue().get(ConstantKey.ROLELIST);
+            if(null==smbmsRole||smbmsRole.size()==0){
+                smbmsRole= (List<SmbmsRole>) dao.findForList("SmbmsRoleMapper.selectByExample", null);
+                redisTemplate.opsForValue().set(ConstantKey.ROLELIST,smbmsRole);
+            }
+            return smbmsRole;
+        } catch (Exception e) {
+            e.printStackTrace();
+            return null;
+        }
+    }
+
+    /**
+     * 查询用户列表+分页+模糊
+     * @param queryname
+     * @param userRole
+     * @param page
+     * @return
+     */
+    public Map<Object, Object> findUserByCount(String queryname, String userRole, Page page) {
+        SmbmsUserExample smbmsUserExample = new SmbmsUserExample();
+        SmbmsUserExample.Criteria criteria = smbmsUserExample.createCriteria();
+        if(null!=queryname&&!"".equals(queryname)){
+            criteria.andUsernameLike("%"+queryname+"%");
+        }
+        if(null!=userRole&&!"".equals(userRole)&&!"0".equals(userRole)){
+            criteria.andUserroleEqualTo(Integer.valueOf(userRole));
+        }
+        try {
+            PageHelper.startPage(page.getCurrentpage(),5);
+            List<SmbmsUser> forList = (List<SmbmsUser>) dao.findForList("SmbmsUserMapper.selectByExample", smbmsUserExample);
+            PageInfo<SmbmsUser> pageInfo = new PageInfo<>(forList);
+            List<SmbmsUser> list = pageInfo.getList();
+            List<Map<String ,Object>> mapList = new ArrayList<>();
+            for (SmbmsUser smbmsUser : list) {
+                Map<String ,Object> mapVo = new HashMap<>();
+                mapVo.put("id",smbmsUser.getId());
+                mapVo.put("usercode",smbmsUser.getUsercode());
+                mapVo.put("username",smbmsUser.getUsername());
+                mapVo.put("gender",smbmsUser.getGender());
+                mapVo.put("phone",smbmsUser.getPhone());
+                int age = getAgeByBirth(smbmsUser.getBirthday());
+                mapVo.put("age",age);
+                mapVo.put("roleName",smbmsUser.getUsercode());
+                mapList.add(mapVo);
+            }
+            Map<Object, Object> objectObjectMap = new HashMap<>();
+            objectObjectMap.put("userList",mapList);
+            objectObjectMap.put("totalCount",pageInfo.getTotal());
+            objectObjectMap.put("currentPage",pageInfo.getPageNum());
+            objectObjectMap.put("totalPage",pageInfo.getPages());
+            return objectObjectMap;
+        } catch (Exception e) {
+            e.printStackTrace();
+        }
+        return null;
+    }
+
+    /**
+     * 根据生日计算年龄
+     * @param birthday
+     * @return
+     */
+    private static int getAgeByBirth(Date birthday) {
+        int age = 0;
+        try {
+            Calendar now = Calendar.getInstance();
+            now.setTime(new Date());
+            Calendar birth = Calendar.getInstance();
+            birth.setTime(birthday);
+            if (birth.after(now)) {
+                age = 0;
+            } else {
+                age = now.get(Calendar.YEAR) - birth.get(Calendar.YEAR);
+                if (now.get(Calendar.DAY_OF_YEAR) > birth.get(Calendar.DAY_OF_YEAR)) {
+                    age += 1;
+                }
+            }
+            return age;
+        } catch (Exception e) {
+            return 0;
+        }
+    }
+
+    /**
+     * 删除用户
+     * @param uid
+     * @return
+     */
+    public Integer deleteUser(Long uid) {
+        try {
+            Integer delete = (Integer) dao.delete("SmbmsUserMapper.deleteByPrimaryKey", uid);
+            return delete;
+        } catch (Exception e) {
+            e.printStackTrace();
+        }
+        return 0;
+    }
+
+    /**
+     * 查询用户信息
+     * @param uid
+     * @return
+     */
+    public Map<String, Object> getViewUser(Long uid) {
+        try {
+            SmbmsUser forObject = (SmbmsUser) dao.findForObject("SmbmsUserMapper.selectByPrimaryKey", uid);
+            if(forObject!=null){
+                Map<String ,Object> map1 = new HashMap<>();
+                map1.put("userCode",forObject.getUsercode());
+                map1.put("userName",forObject.getUsername());
+                map1.put("gender",forObject.getGender());
+                map1.put("birthday",forObject.getBirthday());
+                map1.put("phone",forObject.getPhone());
+                map1.put("address",forObject.getAddress());
+                SmbmsRole forObject1 = (SmbmsRole) dao.findForObject("SmbmsRoleMapper.selectByPrimaryKey", forObject.getUserrole());
+                map1.put("roleName",forObject1.getRolename());
+                return map1;
+            }
+
+        } catch (Exception e) {
+            e.printStackTrace();
+        }
+        return null;
+    }
+
+    /**
+     * 根据Id查询用户
+     * @param uid
+     * @return
+     */
+    public SmbmsUser findByUserId(Long uid) {
+        try {
+            SmbmsUser forObject = (SmbmsUser) dao.findForObject("SmbmsUserMapper.selectByPrimaryKey", uid);
+            return forObject;
+        } catch (Exception e) {
+            e.printStackTrace();
+        }
+        return null;
+    }
+
+    /**
+     * 修改用户信息
+     * @param smbmsUser
+     */
+    public void ModifyUser(SmbmsUser smbmsUser) {
+        try {
+            dao.update("SmbmsUserMapper.updateByPrimaryKeySelective",smbmsUser);
+        } catch (Exception e) {
+            e.printStackTrace();
+        }
+    }
+}
Index: src/main/java/com/lpc/controller/SysController.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/java/com/lpc/controller/SysController.java	(date 1594540282987)
+++ src/main/java/com/lpc/controller/SysController.java	(date 1594540282987)
@@ -0,0 +1,275 @@
+package com.lpc.controller;
+
+import com.lpc.pojo.*;
+import com.lpc.service.SmbmsUserService;
+import com.lpc.service.SysService;
+import org.springframework.beans.factory.annotation.Autowired;
+import org.springframework.stereotype.Controller;
+import org.springframework.ui.Model;
+import org.springframework.web.bind.annotation.*;
+
+import javax.servlet.http.HttpServletRequest;
+import javax.servlet.http.HttpSession;
+import java.util.Date;
+import java.util.HashMap;
+import java.util.List;
+import java.util.Map;
+
+/**
+ * @User lpc/李金超
+ * @ClassName billController  类名
+ * @Author AUSUA  作者
+ * @Date 2020/7/10 19:02  时间
+ * @Version 1.0 版本
+ */
+@Controller
+@RequestMapping("/sys")
+public class SysController {
+
+    @Autowired
+    private SysService sysService;
+
+    @Autowired
+    private SmbmsUserService smbmsUserService;
+
+    /**
+     *订单列表
+     * @param productName  模糊查询的名称
+     * @param providerId
+     * @param isPayment
+     * @param request
+     * @return
+     */
+    @GetMapping("/bill")
+    public String billList(String productName,String providerId,String isPayment,HttpServletRequest request){
+        List<Map<String ,Object>> list = sysService.billList(productName,providerId,isPayment);
+        List<SmbmsProvider> listsb = sysService.providerList();
+        request.setAttribute("billList",list);
+        request.setAttribute("providerList",listsb);
+        request.setAttribute("providerId",providerId);
+        request.setAttribute("isPayment",isPayment);
+        return "bill/billlist";
+    }
+
+    @GetMapping("/billdel")
+    @ResponseBody
+    public Map<String ,Object> billdel(Long billid){
+        System.out.println(billid);
+        Map<String,Object> objectMap = new HashMap<>();
+        int billdel = 0;
+        try {
+            billdel = sysService.billdel(billid);
+            if(billdel>0){
+                objectMap.put("delResult","true");
+                return objectMap;
+            }else {
+                objectMap.put("delResult","false");
+                return objectMap;
+            }
+        } catch (Exception e) {
+            e.printStackTrace();
+            objectMap.put("delResult","notexist");
+            return objectMap;
+        }
+    }
+
+    /**
+     * 查看
+     * @param id 订单Id
+     * @return
+     */
+    @GetMapping("/billview/{id}")
+    public String billview(@PathVariable Long id,HttpServletRequest request){
+        Map<String ,Object> map1 =  sysService.billview(id);
+        request.setAttribute("bill",map1);
+        return "bill/billview";
+    }
+    @GetMapping("/billmodify/{id}")
+    public String billmodify(@PathVariable Long id,HttpServletRequest request){
+        SmbmsBill smbmsBill = sysService.billmodify(id);
+        request.setAttribute("bill",smbmsBill);
+        return "bill/billmodify";
+    }
+
+    @GetMapping("/billselect")
+    @ResponseBody
+    public List<Map<String ,Object>>  billselect(){
+        List<Map<String ,Object>> billselect = sysService.billselect();
+        return billselect;
+    }
+    @PostMapping("/dobillmodify")
+    public String dobillmodify(SmbmsBill smbmsBill,HttpServletRequest request){
+        HttpSession session = request.getSession();
+        SmbmsUser userOnLogin  = (SmbmsUser) session.getAttribute("userOnLogin");
+        smbmsBill.setModifyby(Long.valueOf(userOnLogin.getId()));
+        smbmsBill.setModifydate(new Date());
+        sysService.updateByBill(smbmsBill);
+        return "redirect:/sys/bill";
+    }
+    @GetMapping("/billadd")
+    public String billadd(){
+        return "bill/billadd";
+    }
+
+    @PostMapping("/dobilladd")
+    public String dobilladd(SmbmsBill smbmsBill,HttpServletRequest request){
+        HttpSession session = request.getSession();
+        SmbmsUser userOnLogin = (SmbmsUser) session.getAttribute("userOnLogin");
+        smbmsBill.setCreatedby(Long.valueOf(userOnLogin.getId()));
+        smbmsBill.setCreationdate(new Date());
+        sysService.dobilladd(smbmsBill);
+        return"redirect:/sys/bill";
+    }
+
+    /*供货商*/
+    @GetMapping("/provider")
+    public String provider(String queryProCode,String queryProName,HttpServletRequest request){
+        List<SmbmsProvider> smbmsProviders = sysService.providerList(queryProCode,queryProName);
+        request.setAttribute("queryProCode",queryProCode);
+        request.setAttribute("queryProName",queryProName);
+        request.setAttribute("proList",smbmsProviders);
+        return "pro/providerlist";
+    }
+    @GetMapping("/delprovider")
+    @ResponseBody
+    public Map delprovider(Long proid){
+        Map map = new HashMap();
+        try {
+            int delprovider = sysService.delprovider(proid);
+            if(delprovider>0){
+                map.put("delResult","true");
+                return map;
+            }else {
+                map.put("delResult","false");
+                return map;
+            }
+        } catch (Exception e) {
+            e.printStackTrace();
+            map.put("delResult","接口异常");
+        }
+        return map;
+    }
+
+    @GetMapping("/provideradd")
+    public String provideradd(){
+        return "pro/provideradd";
+    }
+
+    @PostMapping("/provideraddsave")
+    public String provideraddsave(SmbmsProvider smbmsProvider){
+        smbmsProvider.setCreationdate(new Date());
+        sysService.provideraddsave(smbmsProvider);
+        return "redirect:/sys/provider";
+    }
+    @GetMapping("/providermodify")
+    public String providermodify(Long proid,HttpServletRequest request){
+        SmbmsProvider smbmsProvider = sysService.providermodifyById(proid);
+        request.setAttribute("provider",smbmsProvider);
+        return "pro/providermodify";
+    }
+    @PostMapping("/providermodifysave")
+    public String providermodifysave(SmbmsProvider smbmsProvider,HttpServletRequest request){
+        HttpSession session = request.getSession();
+        SmbmsUser userOnLogin = (SmbmsUser) session.getAttribute("userOnLogin");
+        smbmsProvider.setModifyby(Long.valueOf(userOnLogin.getId()));
+        smbmsProvider.setModifydate(new Date());
+        sysService.providermodifysave(smbmsProvider);
+        return "redirect:/sys/provider";
+    }
+    //proview?proid=16
+    @GetMapping("/proview")
+    public String proview(Long proid,HttpServletRequest request){
+        SmbmsProvider smbmsProvider = sysService.proview(proid);
+        request.setAttribute("provider",smbmsProvider);
+        return "pro/providerview";
+    }
+
+    @GetMapping("/user")
+    public String getAllUser(HttpServletRequest request, Model model,String queryname,String queryUserRole,@RequestParam(defaultValue = "1") Integer currentPage){
+        HttpSession session = request.getSession();
+        SmbmsUser userOnLogin = (SmbmsUser) session.getAttribute("userOnLogin");
+        if(userOnLogin.getUserrole()==1){
+            Page page=new Page();
+            page.setCurrentpage(currentPage);
+            request.setAttribute("currentPage",currentPage);
+            Map<Object, Object> userByCount = sysService.findUserByCount(queryname, queryUserRole, page);
+            request.setAttribute("totalPage",userByCount.get("totalPage"));
+            request.setAttribute("totalCount", userByCount.get("totalCount"));
+            List<SmbmsRole> roleList=sysService.findByRole();
+            model.addAttribute("roleList", roleList);
+            model.addAttribute("userList", (List<SmbmsUser>)userByCount.get("userList"));
+            model.addAttribute("queryUserRole", queryUserRole);
+            model.addAttribute("queryUserName", queryname);
+            return "/user/userlist";
+        }
+        return "redirect:/401.jsp";
+    }
+
+    @GetMapping("/deleteUser")
+    @ResponseBody
+    public Map<String ,Object> deleteUser(Long uid){
+        Map<String ,Object> map1 = null;
+        try {
+            map1 = new HashMap<>();
+            Integer i = sysService.deleteUser(uid);
+            if(i>0){
+                map1.put("delResult","true");
+                return map1;
+            }else {
+                map1.put("delResult","false");
+                return map1;
+            }
+        } catch (Exception e) {
+            e.printStackTrace();
+        }
+        return map1;
+    }
+
+
+    @GetMapping("viewUser")
+    public String viewUser(Long uid,Model model){
+        Map<String, Object> viewUser = sysService.getViewUser(uid);
+        model.addAttribute("user",viewUser);
+        return "user/userview";
+    }
+    @GetMapping("/modifyUser")
+    public String modifyUser(Long uid,Model model){
+        SmbmsUser smbmsUser = sysService.findByUserId(uid);
+        model.addAttribute("user",smbmsUser);
+        return "user/usermodify";
+    }
+
+    @GetMapping("/getrolelist")
+    @ResponseBody
+    public List<SmbmsRole> findAllRole(){
+        return sysService.findByRole();
+    }
+
+    @PostMapping("/modifyusersave")
+    public String modifyusersave(SmbmsUser smbmsUser){
+        sysService.ModifyUser(smbmsUser);
+        return "redirect:/sys/user";
+    }
+    @GetMapping("/useradd")
+    public String useradd(){
+
+        return "user/useradd";
+    }
+
+    @GetMapping("/logout")
+    public String logout(HttpSession httpSession){
+        httpSession.removeAttribute("userOnLogin");
+        return "redirect:/login";
+    }
+    @GetMapping("/pwdmodify")
+    public String pwdmodify(){
+        return "user/pwdmodify";
+    }
+    @PostMapping("/savepwdmodify")
+    public String savepwdmodify(String rnewpassword,HttpSession session){
+        SmbmsUser userOnLogin = (SmbmsUser) session.getAttribute("userOnLogin");
+        userOnLogin.setUserpassword(rnewpassword);
+        smbmsUserService.savepwdmodify(userOnLogin);
+        return "redirect:/login";
+    }
+}
Index: src/main/java/com/lpc/pojo/SmbmsRoleExample.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/java/com/lpc/pojo/SmbmsRoleExample.java	(date 1594541675410)
+++ src/main/java/com/lpc/pojo/SmbmsRoleExample.java	(date 1594541675410)
@@ -0,0 +1,744 @@
+package com.lpc.pojo;
+
+import java.io.Serializable;
+import java.util.ArrayList;
+import java.util.Date;
+import java.util.List;
+
+public class SmbmsRoleExample implements Serializable {
+    /**
+     * This field was generated by MyBatis Generator.
+     * This field corresponds to the database table smbms_role
+     *
+     * @mbggenerated
+     */
+    protected String orderByClause;
+
+    /**
+     * This field was generated by MyBatis Generator.
+     * This field corresponds to the database table smbms_role
+     *
+     * @mbggenerated
+     */
+    protected boolean distinct;
+
+    /**
+     * This field was generated by MyBatis Generator.
+     * This field corresponds to the database table smbms_role
+     *
+     * @mbggenerated
+     */
+    protected List<Criteria> oredCriteria;
+
+    /**
+     * This method was generated by MyBatis Generator.
+     * This method corresponds to the database table smbms_role
+     *
+     * @mbggenerated
+     */
+    public SmbmsRoleExample() {
+        oredCriteria = new ArrayList<Criteria>();
+    }
+
+    /**
+     * This method was generated by MyBatis Generator.
+     * This method corresponds to the database table smbms_role
+     *
+     * @mbggenerated
+     */
+    public void setOrderByClause(String orderByClause) {
+        this.orderByClause = orderByClause;
+    }
+
+    /**
+     * This method was generated by MyBatis Generator.
+     * This method corresponds to the database table smbms_role
+     *
+     * @mbggenerated
+     */
+    public String getOrderByClause() {
+        return orderByClause;
+    }
+
+    /**
+     * This method was generated by MyBatis Generator.
+     * This method corresponds to the database table smbms_role
+     *
+     * @mbggenerated
+     */
+    public void setDistinct(boolean distinct) {
+        this.distinct = distinct;
+    }
+
+    /**
+     * This method was generated by MyBatis Generator.
+     * This method corresponds to the database table smbms_role
+     *
+     * @mbggenerated
+     */
+    public boolean isDistinct() {
+        return distinct;
+    }
+
+    /**
+     * This method was generated by MyBatis Generator.
+     * This method corresponds to the database table smbms_role
+     *
+     * @mbggenerated
+     */
+    public List<Criteria> getOredCriteria() {
+        return oredCriteria;
+    }
+
+    /**
+     * This method was generated by MyBatis Generator.
+     * This method corresponds to the database table smbms_role
+     *
+     * @mbggenerated
+     */
+    public void or(Criteria criteria) {
+        oredCriteria.add(criteria);
+    }
+
+    /**
+     * This method was generated by MyBatis Generator.
+     * This method corresponds to the database table smbms_role
+     *
+     * @mbggenerated
+     */
+    public Criteria or() {
+        Criteria criteria = createCriteriaInternal();
+        oredCriteria.add(criteria);
+        return criteria;
+    }
+
+    /**
+     * This method was generated by MyBatis Generator.
+     * This method corresponds to the database table smbms_role
+     *
+     * @mbggenerated
+     */
+    public Criteria createCriteria() {
+        Criteria criteria = createCriteriaInternal();
+        if (oredCriteria.size() == 0) {
+            oredCriteria.add(criteria);
+        }
+        return criteria;
+    }
+
+    /**
+     * This method was generated by MyBatis Generator.
+     * This method corresponds to the database table smbms_role
+     *
+     * @mbggenerated
+     */
+    protected Criteria createCriteriaInternal() {
+        Criteria criteria = new Criteria();
+        return criteria;
+    }
+
+    /**
+     * This method was generated by MyBatis Generator.
+     * This method corresponds to the database table smbms_role
+     *
+     * @mbggenerated
+     */
+    public void clear() {
+        oredCriteria.clear();
+        orderByClause = null;
+        distinct = false;
+    }
+
+    /**
+     * This class was generated by MyBatis Generator.
+     * This class corresponds to the database table smbms_role
+     *
+     * @mbggenerated
+     */
+    protected abstract static class GeneratedCriteria {
+        protected List<Criterion> criteria;
+
+        protected GeneratedCriteria() {
+            super();
+            criteria = new ArrayList<Criterion>();
+        }
+
+        public boolean isValid() {
+            return criteria.size() > 0;
+        }
+
+        public List<Criterion> getAllCriteria() {
+            return criteria;
+        }
+
+        public List<Criterion> getCriteria() {
+            return criteria;
+        }
+
+        protected void addCriterion(String condition) {
+            if (condition == null) {
+                throw new RuntimeException("Value for condition cannot be null");
+            }
+            criteria.add(new Criterion(condition));
+        }
+
+        protected void addCriterion(String condition, Object value, String property) {
+            if (value == null) {
+                throw new RuntimeException("Value for " + property + " cannot be null");
+            }
+            criteria.add(new Criterion(condition, value));
+        }
+
+        protected void addCriterion(String condition, Object value1, Object value2, String property) {
+            if (value1 == null || value2 == null) {
+                throw new RuntimeException("Between values for " + property + " cannot be null");
+            }
+            criteria.add(new Criterion(condition, value1, value2));
+        }
+
+        public Criteria andIdIsNull() {
+            addCriterion("id is null");
+            return (Criteria) this;
+        }
+
+        public Criteria andIdIsNotNull() {
+            addCriterion("id is not null");
+            return (Criteria) this;
+        }
+
+        public Criteria andIdEqualTo(Long value) {
+            addCriterion("id =", value, "id");
+            return (Criteria) this;
+        }
+
+        public Criteria andIdNotEqualTo(Long value) {
+            addCriterion("id <>", value, "id");
+            return (Criteria) this;
+        }
+
+        public Criteria andIdGreaterThan(Long value) {
+            addCriterion("id >", value, "id");
+            return (Criteria) this;
+        }
+
+        public Criteria andIdGreaterThanOrEqualTo(Long value) {
+            addCriterion("id >=", value, "id");
+            return (Criteria) this;
+        }
+
+        public Criteria andIdLessThan(Long value) {
+            addCriterion("id <", value, "id");
+            return (Criteria) this;
+        }
+
+        public Criteria andIdLessThanOrEqualTo(Long value) {
+            addCriterion("id <=", value, "id");
+            return (Criteria) this;
+        }
+
+        public Criteria andIdIn(List<Long> values) {
+            addCriterion("id in", values, "id");
+            return (Criteria) this;
+        }
+
+        public Criteria andIdNotIn(List<Long> values) {
+            addCriterion("id not in", values, "id");
+            return (Criteria) this;
+        }
+
+        public Criteria andIdBetween(Long value1, Long value2) {
+            addCriterion("id between", value1, value2, "id");
+            return (Criteria) this;
+        }
+
+        public Criteria andIdNotBetween(Long value1, Long value2) {
+            addCriterion("id not between", value1, value2, "id");
+            return (Criteria) this;
+        }
+
+        public Criteria andRolecodeIsNull() {
+            addCriterion("roleCode is null");
+            return (Criteria) this;
+        }
+
+        public Criteria andRolecodeIsNotNull() {
+            addCriterion("roleCode is not null");
+            return (Criteria) this;
+        }
+
+        public Criteria andRolecodeEqualTo(String value) {
+            addCriterion("roleCode =", value, "rolecode");
+            return (Criteria) this;
+        }
+
+        public Criteria andRolecodeNotEqualTo(String value) {
+            addCriterion("roleCode <>", value, "rolecode");
+            return (Criteria) this;
+        }
+
+        public Criteria andRolecodeGreaterThan(String value) {
+            addCriterion("roleCode >", value, "rolecode");
+            return (Criteria) this;
+        }
+
+        public Criteria andRolecodeGreaterThanOrEqualTo(String value) {
+            addCriterion("roleCode >=", value, "rolecode");
+            return (Criteria) this;
+        }
+
+        public Criteria andRolecodeLessThan(String value) {
+            addCriterion("roleCode <", value, "rolecode");
+            return (Criteria) this;
+        }
+
+        public Criteria andRolecodeLessThanOrEqualTo(String value) {
+            addCriterion("roleCode <=", value, "rolecode");
+            return (Criteria) this;
+        }
+
+        public Criteria andRolecodeLike(String value) {
+            addCriterion("roleCode like", value, "rolecode");
+            return (Criteria) this;
+        }
+
+        public Criteria andRolecodeNotLike(String value) {
+            addCriterion("roleCode not like", value, "rolecode");
+            return (Criteria) this;
+        }
+
+        public Criteria andRolecodeIn(List<String> values) {
+            addCriterion("roleCode in", values, "rolecode");
+            return (Criteria) this;
+        }
+
+        public Criteria andRolecodeNotIn(List<String> values) {
+            addCriterion("roleCode not in", values, "rolecode");
+            return (Criteria) this;
+        }
+
+        public Criteria andRolecodeBetween(String value1, String value2) {
+            addCriterion("roleCode between", value1, value2, "rolecode");
+            return (Criteria) this;
+        }
+
+        public Criteria andRolecodeNotBetween(String value1, String value2) {
+            addCriterion("roleCode not between", value1, value2, "rolecode");
+            return (Criteria) this;
+        }
+
+        public Criteria andRolenameIsNull() {
+            addCriterion("roleName is null");
+            return (Criteria) this;
+        }
+
+        public Criteria andRolenameIsNotNull() {
+            addCriterion("roleName is not null");
+            return (Criteria) this;
+        }
+
+        public Criteria andRolenameEqualTo(String value) {
+            addCriterion("roleName =", value, "rolename");
+            return (Criteria) this;
+        }
+
+        public Criteria andRolenameNotEqualTo(String value) {
+            addCriterion("roleName <>", value, "rolename");
+            return (Criteria) this;
+        }
+
+        public Criteria andRolenameGreaterThan(String value) {
+            addCriterion("roleName >", value, "rolename");
+            return (Criteria) this;
+        }
+
+        public Criteria andRolenameGreaterThanOrEqualTo(String value) {
+            addCriterion("roleName >=", value, "rolename");
+            return (Criteria) this;
+        }
+
+        public Criteria andRolenameLessThan(String value) {
+            addCriterion("roleName <", value, "rolename");
+            return (Criteria) this;
+        }
+
+        public Criteria andRolenameLessThanOrEqualTo(String value) {
+            addCriterion("roleName <=", value, "rolename");
+            return (Criteria) this;
+        }
+
+        public Criteria andRolenameLike(String value) {
+            addCriterion("roleName like", value, "rolename");
+            return (Criteria) this;
+        }
+
+        public Criteria andRolenameNotLike(String value) {
+            addCriterion("roleName not like", value, "rolename");
+            return (Criteria) this;
+        }
+
+        public Criteria andRolenameIn(List<String> values) {
+            addCriterion("roleName in", values, "rolename");
+            return (Criteria) this;
+        }
+
+        public Criteria andRolenameNotIn(List<String> values) {
+            addCriterion("roleName not in", values, "rolename");
+            return (Criteria) this;
+        }
+
+        public Criteria andRolenameBetween(String value1, String value2) {
+            addCriterion("roleName between", value1, value2, "rolename");
+            return (Criteria) this;
+        }
+
+        public Criteria andRolenameNotBetween(String value1, String value2) {
+            addCriterion("roleName not between", value1, value2, "rolename");
+            return (Criteria) this;
+        }
+
+        public Criteria andCreatedbyIsNull() {
+            addCriterion("createdBy is null");
+            return (Criteria) this;
+        }
+
+        public Criteria andCreatedbyIsNotNull() {
+            addCriterion("createdBy is not null");
+            return (Criteria) this;
+        }
+
+        public Criteria andCreatedbyEqualTo(Long value) {
+            addCriterion("createdBy =", value, "createdby");
+            return (Criteria) this;
+        }
+
+        public Criteria andCreatedbyNotEqualTo(Long value) {
+            addCriterion("createdBy <>", value, "createdby");
+            return (Criteria) this;
+        }
+
+        public Criteria andCreatedbyGreaterThan(Long value) {
+            addCriterion("createdBy >", value, "createdby");
+            return (Criteria) this;
+        }
+
+        public Criteria andCreatedbyGreaterThanOrEqualTo(Long value) {
+            addCriterion("createdBy >=", value, "createdby");
+            return (Criteria) this;
+        }
+
+        public Criteria andCreatedbyLessThan(Long value) {
+            addCriterion("createdBy <", value, "createdby");
+            return (Criteria) this;
+        }
+
+        public Criteria andCreatedbyLessThanOrEqualTo(Long value) {
+            addCriterion("createdBy <=", value, "createdby");
+            return (Criteria) this;
+        }
+
+        public Criteria andCreatedbyIn(List<Long> values) {
+            addCriterion("createdBy in", values, "createdby");
+            return (Criteria) this;
+        }
+
+        public Criteria andCreatedbyNotIn(List<Long> values) {
+            addCriterion("createdBy not in", values, "createdby");
+            return (Criteria) this;
+        }
+
+        public Criteria andCreatedbyBetween(Long value1, Long value2) {
+            addCriterion("createdBy between", value1, value2, "createdby");
+            return (Criteria) this;
+        }
+
+        public Criteria andCreatedbyNotBetween(Long value1, Long value2) {
+            addCriterion("createdBy not between", value1, value2, "createdby");
+            return (Criteria) this;
+        }
+
+        public Criteria andCreationdateIsNull() {
+            addCriterion("creationDate is null");
+            return (Criteria) this;
+        }
+
+        public Criteria andCreationdateIsNotNull() {
+            addCriterion("creationDate is not null");
+            return (Criteria) this;
+        }
+
+        public Criteria andCreationdateEqualTo(Date value) {
+            addCriterion("creationDate =", value, "creationdate");
+            return (Criteria) this;
+        }
+
+        public Criteria andCreationdateNotEqualTo(Date value) {
+            addCriterion("creationDate <>", value, "creationdate");
+            return (Criteria) this;
+        }
+
+        public Criteria andCreationdateGreaterThan(Date value) {
+            addCriterion("creationDate >", value, "creationdate");
+            return (Criteria) this;
+        }
+
+        public Criteria andCreationdateGreaterThanOrEqualTo(Date value) {
+            addCriterion("creationDate >=", value, "creationdate");
+            return (Criteria) this;
+        }
+
+        public Criteria andCreationdateLessThan(Date value) {
+            addCriterion("creationDate <", value, "creationdate");
+            return (Criteria) this;
+        }
+
+        public Criteria andCreationdateLessThanOrEqualTo(Date value) {
+            addCriterion("creationDate <=", value, "creationdate");
+            return (Criteria) this;
+        }
+
+        public Criteria andCreationdateIn(List<Date> values) {
+            addCriterion("creationDate in", values, "creationdate");
+            return (Criteria) this;
+        }
+
+        public Criteria andCreationdateNotIn(List<Date> values) {
+            addCriterion("creationDate not in", values, "creationdate");
+            return (Criteria) this;
+        }
+
+        public Criteria andCreationdateBetween(Date value1, Date value2) {
+            addCriterion("creationDate between", value1, value2, "creationdate");
+            return (Criteria) this;
+        }
+
+        public Criteria andCreationdateNotBetween(Date value1, Date value2) {
+            addCriterion("creationDate not between", value1, value2, "creationdate");
+            return (Criteria) this;
+        }
+
+        public Criteria andModifybyIsNull() {
+            addCriterion("modifyBy is null");
+            return (Criteria) this;
+        }
+
+        public Criteria andModifybyIsNotNull() {
+            addCriterion("modifyBy is not null");
+            return (Criteria) this;
+        }
+
+        public Criteria andModifybyEqualTo(Long value) {
+            addCriterion("modifyBy =", value, "modifyby");
+            return (Criteria) this;
+        }
+
+        public Criteria andModifybyNotEqualTo(Long value) {
+            addCriterion("modifyBy <>", value, "modifyby");
+            return (Criteria) this;
+        }
+
+        public Criteria andModifybyGreaterThan(Long value) {
+            addCriterion("modifyBy >", value, "modifyby");
+            return (Criteria) this;
+        }
+
+        public Criteria andModifybyGreaterThanOrEqualTo(Long value) {
+            addCriterion("modifyBy >=", value, "modifyby");
+            return (Criteria) this;
+        }
+
+        public Criteria andModifybyLessThan(Long value) {
+            addCriterion("modifyBy <", value, "modifyby");
+            return (Criteria) this;
+        }
+
+        public Criteria andModifybyLessThanOrEqualTo(Long value) {
+            addCriterion("modifyBy <=", value, "modifyby");
+            return (Criteria) this;
+        }
+
+        public Criteria andModifybyIn(List<Long> values) {
+            addCriterion("modifyBy in", values, "modifyby");
+            return (Criteria) this;
+        }
+
+        public Criteria andModifybyNotIn(List<Long> values) {
+            addCriterion("modifyBy not in", values, "modifyby");
+            return (Criteria) this;
+        }
+
+        public Criteria andModifybyBetween(Long value1, Long value2) {
+            addCriterion("modifyBy between", value1, value2, "modifyby");
+            return (Criteria) this;
+        }
+
+        public Criteria andModifybyNotBetween(Long value1, Long value2) {
+            addCriterion("modifyBy not between", value1, value2, "modifyby");
+            return (Criteria) this;
+        }
+
+        public Criteria andModifydateIsNull() {
+            addCriterion("modifyDate is null");
+            return (Criteria) this;
+        }
+
+        public Criteria andModifydateIsNotNull() {
+            addCriterion("modifyDate is not null");
+            return (Criteria) this;
+        }
+
+        public Criteria andModifydateEqualTo(Date value) {
+            addCriterion("modifyDate =", value, "modifydate");
+            return (Criteria) this;
+        }
+
+        public Criteria andModifydateNotEqualTo(Date value) {
+            addCriterion("modifyDate <>", value, "modifydate");
+            return (Criteria) this;
+        }
+
+        public Criteria andModifydateGreaterThan(Date value) {
+            addCriterion("modifyDate >", value, "modifydate");
+            return (Criteria) this;
+        }
+
+        public Criteria andModifydateGreaterThanOrEqualTo(Date value) {
+            addCriterion("modifyDate >=", value, "modifydate");
+            return (Criteria) this;
+        }
+
+        public Criteria andModifydateLessThan(Date value) {
+            addCriterion("modifyDate <", value, "modifydate");
+            return (Criteria) this;
+        }
+
+        public Criteria andModifydateLessThanOrEqualTo(Date value) {
+            addCriterion("modifyDate <=", value, "modifydate");
+            return (Criteria) this;
+        }
+
+        public Criteria andModifydateIn(List<Date> values) {
+            addCriterion("modifyDate in", values, "modifydate");
+            return (Criteria) this;
+        }
+
+        public Criteria andModifydateNotIn(List<Date> values) {
+            addCriterion("modifyDate not in", values, "modifydate");
+            return (Criteria) this;
+        }
+
+        public Criteria andModifydateBetween(Date value1, Date value2) {
+            addCriterion("modifyDate between", value1, value2, "modifydate");
+            return (Criteria) this;
+        }
+
+        public Criteria andModifydateNotBetween(Date value1, Date value2) {
+            addCriterion("modifyDate not between", value1, value2, "modifydate");
+            return (Criteria) this;
+        }
+    }
+
+    /**
+     * This class was generated by MyBatis Generator.
+     * This class corresponds to the database table smbms_role
+     *
+     * @mbggenerated do_not_delete_during_merge
+     */
+    public static class Criteria extends GeneratedCriteria {
+
+        protected Criteria() {
+            super();
+        }
+    }
+
+    /**
+     * This class was generated by MyBatis Generator.
+     * This class corresponds to the database table smbms_role
+     *
+     * @mbggenerated
+     */
+    public static class Criterion {
+        private String condition;
+
+        private Object value;
+
+        private Object secondValue;
+
+        private boolean noValue;
+
+        private boolean singleValue;
+
+        private boolean betweenValue;
+
+        private boolean listValue;
+
+        private String typeHandler;
+
+        public String getCondition() {
+            return condition;
+        }
+
+        public Object getValue() {
+            return value;
+        }
+
+        public Object getSecondValue() {
+            return secondValue;
+        }
+
+        public boolean isNoValue() {
+            return noValue;
+        }
+
+        public boolean isSingleValue() {
+            return singleValue;
+        }
+
+        public boolean isBetweenValue() {
+            return betweenValue;
+        }
+
+        public boolean isListValue() {
+            return listValue;
+        }
+
+        public String getTypeHandler() {
+            return typeHandler;
+        }
+
+        protected Criterion(String condition) {
+            super();
+            this.condition = condition;
+            this.typeHandler = null;
+            this.noValue = true;
+        }
+
+        protected Criterion(String condition, Object value, String typeHandler) {
+            super();
+            this.condition = condition;
+            this.value = value;
+            this.typeHandler = typeHandler;
+            if (value instanceof List<?>) {
+                this.listValue = true;
+            } else {
+                this.singleValue = true;
+            }
+        }
+
+        protected Criterion(String condition, Object value) {
+            this(condition, value, null);
+        }
+
+        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
+            super();
+            this.condition = condition;
+            this.value = value;
+            this.secondValue = secondValue;
+            this.typeHandler = typeHandler;
+            this.betweenValue = true;
+        }
+
+        protected Criterion(String condition, Object value, Object secondValue) {
+            this(condition, value, secondValue, null);
+        }
+    }
+}
\ No newline at end of file
Index: src/main/java/com/lpc/pojo/SmbmsBillExample.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/java/com/lpc/pojo/SmbmsBillExample.java	(date 1594541675431)
+++ src/main/java/com/lpc/pojo/SmbmsBillExample.java	(date 1594541675431)
@@ -0,0 +1,1125 @@
+package com.lpc.pojo;
+
+import java.io.Serializable;
+import java.math.BigDecimal;
+import java.util.ArrayList;
+import java.util.Date;
+import java.util.List;
+
+public class SmbmsBillExample implements Serializable {
+    /**
+     * This field was generated by MyBatis Generator.
+     * This field corresponds to the database table smbms_bill
+     *
+     * @mbggenerated
+     */
+    protected String orderByClause;
+
+    /**
+     * This field was generated by MyBatis Generator.
+     * This field corresponds to the database table smbms_bill
+     *
+     * @mbggenerated
+     */
+    protected boolean distinct;
+
+    /**
+     * This field was generated by MyBatis Generator.
+     * This field corresponds to the database table smbms_bill
+     *
+     * @mbggenerated
+     */
+    protected List<Criteria> oredCriteria;
+
+    /**
+     * This method was generated by MyBatis Generator.
+     * This method corresponds to the database table smbms_bill
+     *
+     * @mbggenerated
+     */
+    public SmbmsBillExample() {
+        oredCriteria = new ArrayList<Criteria>();
+    }
+
+    /**
+     * This method was generated by MyBatis Generator.
+     * This method corresponds to the database table smbms_bill
+     *
+     * @mbggenerated
+     */
+    public void setOrderByClause(String orderByClause) {
+        this.orderByClause = orderByClause;
+    }
+
+    /**
+     * This method was generated by MyBatis Generator.
+     * This method corresponds to the database table smbms_bill
+     *
+     * @mbggenerated
+     */
+    public String getOrderByClause() {
+        return orderByClause;
+    }
+
+    /**
+     * This method was generated by MyBatis Generator.
+     * This method corresponds to the database table smbms_bill
+     *
+     * @mbggenerated
+     */
+    public void setDistinct(boolean distinct) {
+        this.distinct = distinct;
+    }
+
+    /**
+     * This method was generated by MyBatis Generator.
+     * This method corresponds to the database table smbms_bill
+     *
+     * @mbggenerated
+     */
+    public boolean isDistinct() {
+        return distinct;
+    }
+
+    /**
+     * This method was generated by MyBatis Generator.
+     * This method corresponds to the database table smbms_bill
+     *
+     * @mbggenerated
+     */
+    public List<Criteria> getOredCriteria() {
+        return oredCriteria;
+    }
+
+    /**
+     * This method was generated by MyBatis Generator.
+     * This method corresponds to the database table smbms_bill
+     *
+     * @mbggenerated
+     */
+    public void or(Criteria criteria) {
+        oredCriteria.add(criteria);
+    }
+
+    /**
+     * This method was generated by MyBatis Generator.
+     * This method corresponds to the database table smbms_bill
+     *
+     * @mbggenerated
+     */
+    public Criteria or() {
+        Criteria criteria = createCriteriaInternal();
+        oredCriteria.add(criteria);
+        return criteria;
+    }
+
+    /**
+     * This method was generated by MyBatis Generator.
+     * This method corresponds to the database table smbms_bill
+     *
+     * @mbggenerated
+     */
+    public Criteria createCriteria() {
+        Criteria criteria = createCriteriaInternal();
+        if (oredCriteria.size() == 0) {
+            oredCriteria.add(criteria);
+        }
+        return criteria;
+    }
+
+    /**
+     * This method was generated by MyBatis Generator.
+     * This method corresponds to the database table smbms_bill
+     *
+     * @mbggenerated
+     */
+    protected Criteria createCriteriaInternal() {
+        Criteria criteria = new Criteria();
+        return criteria;
+    }
+
+    /**
+     * This method was generated by MyBatis Generator.
+     * This method corresponds to the database table smbms_bill
+     *
+     * @mbggenerated
+     */
+    public void clear() {
+        oredCriteria.clear();
+        orderByClause = null;
+        distinct = false;
+    }
+
+    /**
+     * This class was generated by MyBatis Generator.
+     * This class corresponds to the database table smbms_bill
+     *
+     * @mbggenerated
+     */
+    protected abstract static class GeneratedCriteria {
+        protected List<Criterion> criteria;
+
+        protected GeneratedCriteria() {
+            super();
+            criteria = new ArrayList<Criterion>();
+        }
+
+        public boolean isValid() {
+            return criteria.size() > 0;
+        }
+
+        public List<Criterion> getAllCriteria() {
+            return criteria;
+        }
+
+        public List<Criterion> getCriteria() {
+            return criteria;
+        }
+
+        protected void addCriterion(String condition) {
+            if (condition == null) {
+                throw new RuntimeException("Value for condition cannot be null");
+            }
+            criteria.add(new Criterion(condition));
+        }
+
+        protected void addCriterion(String condition, Object value, String property) {
+            if (value == null) {
+                throw new RuntimeException("Value for " + property + " cannot be null");
+            }
+            criteria.add(new Criterion(condition, value));
+        }
+
+        protected void addCriterion(String condition, Object value1, Object value2, String property) {
+            if (value1 == null || value2 == null) {
+                throw new RuntimeException("Between values for " + property + " cannot be null");
+            }
+            criteria.add(new Criterion(condition, value1, value2));
+        }
+
+        public Criteria andIdIsNull() {
+            addCriterion("id is null");
+            return (Criteria) this;
+        }
+
+        public Criteria andIdIsNotNull() {
+            addCriterion("id is not null");
+            return (Criteria) this;
+        }
+
+        public Criteria andIdEqualTo(Long value) {
+            addCriterion("id =", value, "id");
+            return (Criteria) this;
+        }
+
+        public Criteria andIdNotEqualTo(Long value) {
+            addCriterion("id <>", value, "id");
+            return (Criteria) this;
+        }
+
+        public Criteria andIdGreaterThan(Long value) {
+            addCriterion("id >", value, "id");
+            return (Criteria) this;
+        }
+
+        public Criteria andIdGreaterThanOrEqualTo(Long value) {
+            addCriterion("id >=", value, "id");
+            return (Criteria) this;
+        }
+
+        public Criteria andIdLessThan(Long value) {
+            addCriterion("id <", value, "id");
+            return (Criteria) this;
+        }
+
+        public Criteria andIdLessThanOrEqualTo(Long value) {
+            addCriterion("id <=", value, "id");
+            return (Criteria) this;
+        }
+
+        public Criteria andIdIn(List<Long> values) {
+            addCriterion("id in", values, "id");
+            return (Criteria) this;
+        }
+
+        public Criteria andIdNotIn(List<Long> values) {
+            addCriterion("id not in", values, "id");
+            return (Criteria) this;
+        }
+
+        public Criteria andIdBetween(Long value1, Long value2) {
+            addCriterion("id between", value1, value2, "id");
+            return (Criteria) this;
+        }
+
+        public Criteria andIdNotBetween(Long value1, Long value2) {
+            addCriterion("id not between", value1, value2, "id");
+            return (Criteria) this;
+        }
+
+        public Criteria andBillcodeIsNull() {
+            addCriterion("billCode is null");
+            return (Criteria) this;
+        }
+
+        public Criteria andBillcodeIsNotNull() {
+            addCriterion("billCode is not null");
+            return (Criteria) this;
+        }
+
+        public Criteria andBillcodeEqualTo(String value) {
+            addCriterion("billCode =", value, "billcode");
+            return (Criteria) this;
+        }
+
+        public Criteria andBillcodeNotEqualTo(String value) {
+            addCriterion("billCode <>", value, "billcode");
+            return (Criteria) this;
+        }
+
+        public Criteria andBillcodeGreaterThan(String value) {
+            addCriterion("billCode >", value, "billcode");
+            return (Criteria) this;
+        }
+
+        public Criteria andBillcodeGreaterThanOrEqualTo(String value) {
+            addCriterion("billCode >=", value, "billcode");
+            return (Criteria) this;
+        }
+
+        public Criteria andBillcodeLessThan(String value) {
+            addCriterion("billCode <", value, "billcode");
+            return (Criteria) this;
+        }
+
+        public Criteria andBillcodeLessThanOrEqualTo(String value) {
+            addCriterion("billCode <=", value, "billcode");
+            return (Criteria) this;
+        }
+
+        public Criteria andBillcodeLike(String value) {
+            addCriterion("billCode like", value, "billcode");
+            return (Criteria) this;
+        }
+
+        public Criteria andBillcodeNotLike(String value) {
+            addCriterion("billCode not like", value, "billcode");
+            return (Criteria) this;
+        }
+
+        public Criteria andBillcodeIn(List<String> values) {
+            addCriterion("billCode in", values, "billcode");
+            return (Criteria) this;
+        }
+
+        public Criteria andBillcodeNotIn(List<String> values) {
+            addCriterion("billCode not in", values, "billcode");
+            return (Criteria) this;
+        }
+
+        public Criteria andBillcodeBetween(String value1, String value2) {
+            addCriterion("billCode between", value1, value2, "billcode");
+            return (Criteria) this;
+        }
+
+        public Criteria andBillcodeNotBetween(String value1, String value2) {
+            addCriterion("billCode not between", value1, value2, "billcode");
+            return (Criteria) this;
+        }
+
+        public Criteria andProductnameIsNull() {
+            addCriterion("productName is null");
+            return (Criteria) this;
+        }
+
+        public Criteria andProductnameIsNotNull() {
+            addCriterion("productName is not null");
+            return (Criteria) this;
+        }
+
+        public Criteria andProductnameEqualTo(String value) {
+            addCriterion("productName =", value, "productname");
+            return (Criteria) this;
+        }
+
+        public Criteria andProductnameNotEqualTo(String value) {
+            addCriterion("productName <>", value, "productname");
+            return (Criteria) this;
+        }
+
+        public Criteria andProductnameGreaterThan(String value) {
+            addCriterion("productName >", value, "productname");
+            return (Criteria) this;
+        }
+
+        public Criteria andProductnameGreaterThanOrEqualTo(String value) {
+            addCriterion("productName >=", value, "productname");
+            return (Criteria) this;
+        }
+
+        public Criteria andProductnameLessThan(String value) {
+            addCriterion("productName <", value, "productname");
+            return (Criteria) this;
+        }
+
+        public Criteria andProductnameLessThanOrEqualTo(String value) {
+            addCriterion("productName <=", value, "productname");
+            return (Criteria) this;
+        }
+
+        public Criteria andProductnameLike(String value) {
+            addCriterion("productName like", value, "productname");
+            return (Criteria) this;
+        }
+
+        public Criteria andProductnameNotLike(String value) {
+            addCriterion("productName not like", value, "productname");
+            return (Criteria) this;
+        }
+
+        public Criteria andProductnameIn(List<String> values) {
+            addCriterion("productName in", values, "productname");
+            return (Criteria) this;
+        }
+
+        public Criteria andProductnameNotIn(List<String> values) {
+            addCriterion("productName not in", values, "productname");
+            return (Criteria) this;
+        }
+
+        public Criteria andProductnameBetween(String value1, String value2) {
+            addCriterion("productName between", value1, value2, "productname");
+            return (Criteria) this;
+        }
+
+        public Criteria andProductnameNotBetween(String value1, String value2) {
+            addCriterion("productName not between", value1, value2, "productname");
+            return (Criteria) this;
+        }
+
+        public Criteria andProductdescIsNull() {
+            addCriterion("productDesc is null");
+            return (Criteria) this;
+        }
+
+        public Criteria andProductdescIsNotNull() {
+            addCriterion("productDesc is not null");
+            return (Criteria) this;
+        }
+
+        public Criteria andProductdescEqualTo(String value) {
+            addCriterion("productDesc =", value, "productdesc");
+            return (Criteria) this;
+        }
+
+        public Criteria andProductdescNotEqualTo(String value) {
+            addCriterion("productDesc <>", value, "productdesc");
+            return (Criteria) this;
+        }
+
+        public Criteria andProductdescGreaterThan(String value) {
+            addCriterion("productDesc >", value, "productdesc");
+            return (Criteria) this;
+        }
+
+        public Criteria andProductdescGreaterThanOrEqualTo(String value) {
+            addCriterion("productDesc >=", value, "productdesc");
+            return (Criteria) this;
+        }
+
+        public Criteria andProductdescLessThan(String value) {
+            addCriterion("productDesc <", value, "productdesc");
+            return (Criteria) this;
+        }
+
+        public Criteria andProductdescLessThanOrEqualTo(String value) {
+            addCriterion("productDesc <=", value, "productdesc");
+            return (Criteria) this;
+        }
+
+        public Criteria andProductdescLike(String value) {
+            addCriterion("productDesc like", value, "productdesc");
+            return (Criteria) this;
+        }
+
+        public Criteria andProductdescNotLike(String value) {
+            addCriterion("productDesc not like", value, "productdesc");
+            return (Criteria) this;
+        }
+
+        public Criteria andProductdescIn(List<String> values) {
+            addCriterion("productDesc in", values, "productdesc");
+            return (Criteria) this;
+        }
+
+        public Criteria andProductdescNotIn(List<String> values) {
+            addCriterion("productDesc not in", values, "productdesc");
+            return (Criteria) this;
+        }
+
+        public Criteria andProductdescBetween(String value1, String value2) {
+            addCriterion("productDesc between", value1, value2, "productdesc");
+            return (Criteria) this;
+        }
+
+        public Criteria andProductdescNotBetween(String value1, String value2) {
+            addCriterion("productDesc not between", value1, value2, "productdesc");
+            return (Criteria) this;
+        }
+
+        public Criteria andProductunitIsNull() {
+            addCriterion("productUnit is null");
+            return (Criteria) this;
+        }
+
+        public Criteria andProductunitIsNotNull() {
+            addCriterion("productUnit is not null");
+            return (Criteria) this;
+        }
+
+        public Criteria andProductunitEqualTo(String value) {
+            addCriterion("productUnit =", value, "productunit");
+            return (Criteria) this;
+        }
+
+        public Criteria andProductunitNotEqualTo(String value) {
+            addCriterion("productUnit <>", value, "productunit");
+            return (Criteria) this;
+        }
+
+        public Criteria andProductunitGreaterThan(String value) {
+            addCriterion("productUnit >", value, "productunit");
+            return (Criteria) this;
+        }
+
+        public Criteria andProductunitGreaterThanOrEqualTo(String value) {
+            addCriterion("productUnit >=", value, "productunit");
+            return (Criteria) this;
+        }
+
+        public Criteria andProductunitLessThan(String value) {
+            addCriterion("productUnit <", value, "productunit");
+            return (Criteria) this;
+        }
+
+        public Criteria andProductunitLessThanOrEqualTo(String value) {
+            addCriterion("productUnit <=", value, "productunit");
+            return (Criteria) this;
+        }
+
+        public Criteria andProductunitLike(String value) {
+            addCriterion("productUnit like", value, "productunit");
+            return (Criteria) this;
+        }
+
+        public Criteria andProductunitNotLike(String value) {
+            addCriterion("productUnit not like", value, "productunit");
+            return (Criteria) this;
+        }
+
+        public Criteria andProductunitIn(List<String> values) {
+            addCriterion("productUnit in", values, "productunit");
+            return (Criteria) this;
+        }
+
+        public Criteria andProductunitNotIn(List<String> values) {
+            addCriterion("productUnit not in", values, "productunit");
+            return (Criteria) this;
+        }
+
+        public Criteria andProductunitBetween(String value1, String value2) {
+            addCriterion("productUnit between", value1, value2, "productunit");
+            return (Criteria) this;
+        }
+
+        public Criteria andProductunitNotBetween(String value1, String value2) {
+            addCriterion("productUnit not between", value1, value2, "productunit");
+            return (Criteria) this;
+        }
+
+        public Criteria andProductcountIsNull() {
+            addCriterion("productCount is null");
+            return (Criteria) this;
+        }
+
+        public Criteria andProductcountIsNotNull() {
+            addCriterion("productCount is not null");
+            return (Criteria) this;
+        }
+
+        public Criteria andProductcountEqualTo(BigDecimal value) {
+            addCriterion("productCount =", value, "productcount");
+            return (Criteria) this;
+        }
+
+        public Criteria andProductcountNotEqualTo(BigDecimal value) {
+            addCriterion("productCount <>", value, "productcount");
+            return (Criteria) this;
+        }
+
+        public Criteria andProductcountGreaterThan(BigDecimal value) {
+            addCriterion("productCount >", value, "productcount");
+            return (Criteria) this;
+        }
+
+        public Criteria andProductcountGreaterThanOrEqualTo(BigDecimal value) {
+            addCriterion("productCount >=", value, "productcount");
+            return (Criteria) this;
+        }
+
+        public Criteria andProductcountLessThan(BigDecimal value) {
+            addCriterion("productCount <", value, "productcount");
+            return (Criteria) this;
+        }
+
+        public Criteria andProductcountLessThanOrEqualTo(BigDecimal value) {
+            addCriterion("productCount <=", value, "productcount");
+            return (Criteria) this;
+        }
+
+        public Criteria andProductcountIn(List<BigDecimal> values) {
+            addCriterion("productCount in", values, "productcount");
+            return (Criteria) this;
+        }
+
+        public Criteria andProductcountNotIn(List<BigDecimal> values) {
+            addCriterion("productCount not in", values, "productcount");
+            return (Criteria) this;
+        }
+
+        public Criteria andProductcountBetween(BigDecimal value1, BigDecimal value2) {
+            addCriterion("productCount between", value1, value2, "productcount");
+            return (Criteria) this;
+        }
+
+        public Criteria andProductcountNotBetween(BigDecimal value1, BigDecimal value2) {
+            addCriterion("productCount not between", value1, value2, "productcount");
+            return (Criteria) this;
+        }
+
+        public Criteria andTotalpriceIsNull() {
+            addCriterion("totalPrice is null");
+            return (Criteria) this;
+        }
+
+        public Criteria andTotalpriceIsNotNull() {
+            addCriterion("totalPrice is not null");
+            return (Criteria) this;
+        }
+
+        public Criteria andTotalpriceEqualTo(BigDecimal value) {
+            addCriterion("totalPrice =", value, "totalprice");
+            return (Criteria) this;
+        }
+
+        public Criteria andTotalpriceNotEqualTo(BigDecimal value) {
+            addCriterion("totalPrice <>", value, "totalprice");
+            return (Criteria) this;
+        }
+
+        public Criteria andTotalpriceGreaterThan(BigDecimal value) {
+            addCriterion("totalPrice >", value, "totalprice");
+            return (Criteria) this;
+        }
+
+        public Criteria andTotalpriceGreaterThanOrEqualTo(BigDecimal value) {
+            addCriterion("totalPrice >=", value, "totalprice");
+            return (Criteria) this;
+        }
+
+        public Criteria andTotalpriceLessThan(BigDecimal value) {
+            addCriterion("totalPrice <", value, "totalprice");
+            return (Criteria) this;
+        }
+
+        public Criteria andTotalpriceLessThanOrEqualTo(BigDecimal value) {
+            addCriterion("totalPrice <=", value, "totalprice");
+            return (Criteria) this;
+        }
+
+        public Criteria andTotalpriceIn(List<BigDecimal> values) {
+            addCriterion("totalPrice in", values, "totalprice");
+            return (Criteria) this;
+        }
+
+        public Criteria andTotalpriceNotIn(List<BigDecimal> values) {
+            addCriterion("totalPrice not in", values, "totalprice");
+            return (Criteria) this;
+        }
+
+        public Criteria andTotalpriceBetween(BigDecimal value1, BigDecimal value2) {
+            addCriterion("totalPrice between", value1, value2, "totalprice");
+            return (Criteria) this;
+        }
+
+        public Criteria andTotalpriceNotBetween(BigDecimal value1, BigDecimal value2) {
+            addCriterion("totalPrice not between", value1, value2, "totalprice");
+            return (Criteria) this;
+        }
+
+        public Criteria andIspaymentIsNull() {
+            addCriterion("isPayment is null");
+            return (Criteria) this;
+        }
+
+        public Criteria andIspaymentIsNotNull() {
+            addCriterion("isPayment is not null");
+            return (Criteria) this;
+        }
+
+        public Criteria andIspaymentEqualTo(Integer value) {
+            addCriterion("isPayment =", value, "ispayment");
+            return (Criteria) this;
+        }
+
+        public Criteria andIspaymentNotEqualTo(Integer value) {
+            addCriterion("isPayment <>", value, "ispayment");
+            return (Criteria) this;
+        }
+
+        public Criteria andIspaymentGreaterThan(Integer value) {
+            addCriterion("isPayment >", value, "ispayment");
+            return (Criteria) this;
+        }
+
+        public Criteria andIspaymentGreaterThanOrEqualTo(Integer value) {
+            addCriterion("isPayment >=", value, "ispayment");
+            return (Criteria) this;
+        }
+
+        public Criteria andIspaymentLessThan(Integer value) {
+            addCriterion("isPayment <", value, "ispayment");
+            return (Criteria) this;
+        }
+
+        public Criteria andIspaymentLessThanOrEqualTo(Integer value) {
+            addCriterion("isPayment <=", value, "ispayment");
+            return (Criteria) this;
+        }
+
+        public Criteria andIspaymentIn(List<Integer> values) {
+            addCriterion("isPayment in", values, "ispayment");
+            return (Criteria) this;
+        }
+
+        public Criteria andIspaymentNotIn(List<Integer> values) {
+            addCriterion("isPayment not in", values, "ispayment");
+            return (Criteria) this;
+        }
+
+        public Criteria andIspaymentBetween(Integer value1, Integer value2) {
+            addCriterion("isPayment between", value1, value2, "ispayment");
+            return (Criteria) this;
+        }
+
+        public Criteria andIspaymentNotBetween(Integer value1, Integer value2) {
+            addCriterion("isPayment not between", value1, value2, "ispayment");
+            return (Criteria) this;
+        }
+
+        public Criteria andCreatedbyIsNull() {
+            addCriterion("createdBy is null");
+            return (Criteria) this;
+        }
+
+        public Criteria andCreatedbyIsNotNull() {
+            addCriterion("createdBy is not null");
+            return (Criteria) this;
+        }
+
+        public Criteria andCreatedbyEqualTo(Long value) {
+            addCriterion("createdBy =", value, "createdby");
+            return (Criteria) this;
+        }
+
+        public Criteria andCreatedbyNotEqualTo(Long value) {
+            addCriterion("createdBy <>", value, "createdby");
+            return (Criteria) this;
+        }
+
+        public Criteria andCreatedbyGreaterThan(Long value) {
+            addCriterion("createdBy >", value, "createdby");
+            return (Criteria) this;
+        }
+
+        public Criteria andCreatedbyGreaterThanOrEqualTo(Long value) {
+            addCriterion("createdBy >=", value, "createdby");
+            return (Criteria) this;
+        }
+
+        public Criteria andCreatedbyLessThan(Long value) {
+            addCriterion("createdBy <", value, "createdby");
+            return (Criteria) this;
+        }
+
+        public Criteria andCreatedbyLessThanOrEqualTo(Long value) {
+            addCriterion("createdBy <=", value, "createdby");
+            return (Criteria) this;
+        }
+
+        public Criteria andCreatedbyIn(List<Long> values) {
+            addCriterion("createdBy in", values, "createdby");
+            return (Criteria) this;
+        }
+
+        public Criteria andCreatedbyNotIn(List<Long> values) {
+            addCriterion("createdBy not in", values, "createdby");
+            return (Criteria) this;
+        }
+
+        public Criteria andCreatedbyBetween(Long value1, Long value2) {
+            addCriterion("createdBy between", value1, value2, "createdby");
+            return (Criteria) this;
+        }
+
+        public Criteria andCreatedbyNotBetween(Long value1, Long value2) {
+            addCriterion("createdBy not between", value1, value2, "createdby");
+            return (Criteria) this;
+        }
+
+        public Criteria andCreationdateIsNull() {
+            addCriterion("creationDate is null");
+            return (Criteria) this;
+        }
+
+        public Criteria andCreationdateIsNotNull() {
+            addCriterion("creationDate is not null");
+            return (Criteria) this;
+        }
+
+        public Criteria andCreationdateEqualTo(Date value) {
+            addCriterion("creationDate =", value, "creationdate");
+            return (Criteria) this;
+        }
+
+        public Criteria andCreationdateNotEqualTo(Date value) {
+            addCriterion("creationDate <>", value, "creationdate");
+            return (Criteria) this;
+        }
+
+        public Criteria andCreationdateGreaterThan(Date value) {
+            addCriterion("creationDate >", value, "creationdate");
+            return (Criteria) this;
+        }
+
+        public Criteria andCreationdateGreaterThanOrEqualTo(Date value) {
+            addCriterion("creationDate >=", value, "creationdate");
+            return (Criteria) this;
+        }
+
+        public Criteria andCreationdateLessThan(Date value) {
+            addCriterion("creationDate <", value, "creationdate");
+            return (Criteria) this;
+        }
+
+        public Criteria andCreationdateLessThanOrEqualTo(Date value) {
+            addCriterion("creationDate <=", value, "creationdate");
+            return (Criteria) this;
+        }
+
+        public Criteria andCreationdateIn(List<Date> values) {
+            addCriterion("creationDate in", values, "creationdate");
+            return (Criteria) this;
+        }
+
+        public Criteria andCreationdateNotIn(List<Date> values) {
+            addCriterion("creationDate not in", values, "creationdate");
+            return (Criteria) this;
+        }
+
+        public Criteria andCreationdateBetween(Date value1, Date value2) {
+            addCriterion("creationDate between", value1, value2, "creationdate");
+            return (Criteria) this;
+        }
+
+        public Criteria andCreationdateNotBetween(Date value1, Date value2) {
+            addCriterion("creationDate not between", value1, value2, "creationdate");
+            return (Criteria) this;
+        }
+
+        public Criteria andModifybyIsNull() {
+            addCriterion("modifyBy is null");
+            return (Criteria) this;
+        }
+
+        public Criteria andModifybyIsNotNull() {
+            addCriterion("modifyBy is not null");
+            return (Criteria) this;
+        }
+
+        public Criteria andModifybyEqualTo(Long value) {
+            addCriterion("modifyBy =", value, "modifyby");
+            return (Criteria) this;
+        }
+
+        public Criteria andModifybyNotEqualTo(Long value) {
+            addCriterion("modifyBy <>", value, "modifyby");
+            return (Criteria) this;
+        }
+
+        public Criteria andModifybyGreaterThan(Long value) {
+            addCriterion("modifyBy >", value, "modifyby");
+            return (Criteria) this;
+        }
+
+        public Criteria andModifybyGreaterThanOrEqualTo(Long value) {
+            addCriterion("modifyBy >=", value, "modifyby");
+            return (Criteria) this;
+        }
+
+        public Criteria andModifybyLessThan(Long value) {
+            addCriterion("modifyBy <", value, "modifyby");
+            return (Criteria) this;
+        }
+
+        public Criteria andModifybyLessThanOrEqualTo(Long value) {
+            addCriterion("modifyBy <=", value, "modifyby");
+            return (Criteria) this;
+        }
+
+        public Criteria andModifybyIn(List<Long> values) {
+            addCriterion("modifyBy in", values, "modifyby");
+            return (Criteria) this;
+        }
+
+        public Criteria andModifybyNotIn(List<Long> values) {
+            addCriterion("modifyBy not in", values, "modifyby");
+            return (Criteria) this;
+        }
+
+        public Criteria andModifybyBetween(Long value1, Long value2) {
+            addCriterion("modifyBy between", value1, value2, "modifyby");
+            return (Criteria) this;
+        }
+
+        public Criteria andModifybyNotBetween(Long value1, Long value2) {
+            addCriterion("modifyBy not between", value1, value2, "modifyby");
+            return (Criteria) this;
+        }
+
+        public Criteria andModifydateIsNull() {
+            addCriterion("modifyDate is null");
+            return (Criteria) this;
+        }
+
+        public Criteria andModifydateIsNotNull() {
+            addCriterion("modifyDate is not null");
+            return (Criteria) this;
+        }
+
+        public Criteria andModifydateEqualTo(Date value) {
+            addCriterion("modifyDate =", value, "modifydate");
+            return (Criteria) this;
+        }
+
+        public Criteria andModifydateNotEqualTo(Date value) {
+            addCriterion("modifyDate <>", value, "modifydate");
+            return (Criteria) this;
+        }
+
+        public Criteria andModifydateGreaterThan(Date value) {
+            addCriterion("modifyDate >", value, "modifydate");
+            return (Criteria) this;
+        }
+
+        public Criteria andModifydateGreaterThanOrEqualTo(Date value) {
+            addCriterion("modifyDate >=", value, "modifydate");
+            return (Criteria) this;
+        }
+
+        public Criteria andModifydateLessThan(Date value) {
+            addCriterion("modifyDate <", value, "modifydate");
+            return (Criteria) this;
+        }
+
+        public Criteria andModifydateLessThanOrEqualTo(Date value) {
+            addCriterion("modifyDate <=", value, "modifydate");
+            return (Criteria) this;
+        }
+
+        public Criteria andModifydateIn(List<Date> values) {
+            addCriterion("modifyDate in", values, "modifydate");
+            return (Criteria) this;
+        }
+
+        public Criteria andModifydateNotIn(List<Date> values) {
+            addCriterion("modifyDate not in", values, "modifydate");
+            return (Criteria) this;
+        }
+
+        public Criteria andModifydateBetween(Date value1, Date value2) {
+            addCriterion("modifyDate between", value1, value2, "modifydate");
+            return (Criteria) this;
+        }
+
+        public Criteria andModifydateNotBetween(Date value1, Date value2) {
+            addCriterion("modifyDate not between", value1, value2, "modifydate");
+            return (Criteria) this;
+        }
+
+        public Criteria andProvideridIsNull() {
+            addCriterion("providerId is null");
+            return (Criteria) this;
+        }
+
+        public Criteria andProvideridIsNotNull() {
+            addCriterion("providerId is not null");
+            return (Criteria) this;
+        }
+
+        public Criteria andProvideridEqualTo(Long value) {
+            addCriterion("providerId =", value, "providerid");
+            return (Criteria) this;
+        }
+
+        public Criteria andProvideridNotEqualTo(Long value) {
+            addCriterion("providerId <>", value, "providerid");
+            return (Criteria) this;
+        }
+
+        public Criteria andProvideridGreaterThan(Long value) {
+            addCriterion("providerId >", value, "providerid");
+            return (Criteria) this;
+        }
+
+        public Criteria andProvideridGreaterThanOrEqualTo(Long value) {
+            addCriterion("providerId >=", value, "providerid");
+            return (Criteria) this;
+        }
+
+        public Criteria andProvideridLessThan(Long value) {
+            addCriterion("providerId <", value, "providerid");
+            return (Criteria) this;
+        }
+
+        public Criteria andProvideridLessThanOrEqualTo(Long value) {
+            addCriterion("providerId <=", value, "providerid");
+            return (Criteria) this;
+        }
+
+        public Criteria andProvideridIn(List<Long> values) {
+            addCriterion("providerId in", values, "providerid");
+            return (Criteria) this;
+        }
+
+        public Criteria andProvideridNotIn(List<Long> values) {
+            addCriterion("providerId not in", values, "providerid");
+            return (Criteria) this;
+        }
+
+        public Criteria andProvideridBetween(Long value1, Long value2) {
+            addCriterion("providerId between", value1, value2, "providerid");
+            return (Criteria) this;
+        }
+
+        public Criteria andProvideridNotBetween(Long value1, Long value2) {
+            addCriterion("providerId not between", value1, value2, "providerid");
+            return (Criteria) this;
+        }
+    }
+
+    /**
+     * This class was generated by MyBatis Generator.
+     * This class corresponds to the database table smbms_bill
+     *
+     * @mbggenerated do_not_delete_during_merge
+     */
+    public static class Criteria extends GeneratedCriteria {
+
+        protected Criteria() {
+            super();
+        }
+    }
+
+    /**
+     * This class was generated by MyBatis Generator.
+     * This class corresponds to the database table smbms_bill
+     *
+     * @mbggenerated
+     */
+    public static class Criterion {
+        private String condition;
+
+        private Object value;
+
+        private Object secondValue;
+
+        private boolean noValue;
+
+        private boolean singleValue;
+
+        private boolean betweenValue;
+
+        private boolean listValue;
+
+        private String typeHandler;
+
+        public String getCondition() {
+            return condition;
+        }
+
+        public Object getValue() {
+            return value;
+        }
+
+        public Object getSecondValue() {
+            return secondValue;
+        }
+
+        public boolean isNoValue() {
+            return noValue;
+        }
+
+        public boolean isSingleValue() {
+            return singleValue;
+        }
+
+        public boolean isBetweenValue() {
+            return betweenValue;
+        }
+
+        public boolean isListValue() {
+            return listValue;
+        }
+
+        public String getTypeHandler() {
+            return typeHandler;
+        }
+
+        protected Criterion(String condition) {
+            super();
+            this.condition = condition;
+            this.typeHandler = null;
+            this.noValue = true;
+        }
+
+        protected Criterion(String condition, Object value, String typeHandler) {
+            super();
+            this.condition = condition;
+            this.value = value;
+            this.typeHandler = typeHandler;
+            if (value instanceof List<?>) {
+                this.listValue = true;
+            } else {
+                this.singleValue = true;
+            }
+        }
+
+        protected Criterion(String condition, Object value) {
+            this(condition, value, null);
+        }
+
+        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
+            super();
+            this.condition = condition;
+            this.value = value;
+            this.secondValue = secondValue;
+            this.typeHandler = typeHandler;
+            this.betweenValue = true;
+        }
+
+        protected Criterion(String condition, Object value, Object secondValue) {
+            this(condition, value, secondValue, null);
+        }
+    }
+}
\ No newline at end of file
Index: .idea/.gitignore
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- .idea/.gitignore	(date 1594131715300)
+++ .idea/.gitignore	(date 1594131715300)
@@ -0,0 +1,8 @@
+# Default ignored files
+/shelf/
+/workspace.xml
+# Datasource local storage ignored files
+/dataSources/
+/dataSources.local.xml
+# Editor-based HTTP Client requests
+/httpRequests/
Index: src/main/java/com/lpc/dao/DAO.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/java/com/lpc/dao/DAO.java	(date 1594528047224)
+++ src/main/java/com/lpc/dao/DAO.java	(date 1594528047224)
@@ -0,0 +1,97 @@
+package com.lpc.dao;
+
+import java.util.List;
+
+public interface DAO {
+
+    /**
+     * 保存对象
+     *
+     * @param str
+     * @param obj
+     * @return
+     * @throws Exception
+     */
+    public Object save(String str, Object obj) throws Exception;
+
+    /**
+     * 修改对象
+     *
+     * @param str
+     * @param obj
+     * @return
+     * @throws Exception
+     */
+    public Object update(String str, Object obj) throws Exception;
+
+    /**
+     * 删除对象
+     *
+     * @param str
+     * @param obj
+     * @return
+     * @throws Exception
+     */
+    public Object delete(String str, Object obj) throws Exception;
+
+    /**
+     * 查找对象
+     *
+     * @param str
+     * @param obj
+     * @return
+     * @throws Exception
+     */
+    public Object findForObject(String str, Object obj) throws Exception;
+
+    /**
+     * 查找对象
+     *
+     * @param str
+     * @param obj
+     * @return
+     * @throws Exception
+     */
+    public Object findForList(String str, Object obj) throws Exception;
+
+    /**
+     * 查找对象封装成Map
+     *
+     * @param s
+     * @param obj
+     * @return
+     * @throws Exception
+     */
+    public Object findForMap(String sql, Object obj, String key, String value) throws Exception;
+
+    /**
+     * 批量删除
+     *
+     * @param str
+     * @param objs
+     * @return
+     * @throws Exception
+     */
+    public Object batchDelete(String str, List objs) throws Exception;
+
+    /**
+     * 批量更新
+     *
+     * @param str
+     * @param objs
+     * @return
+     * @throws Exception
+     */
+    public void batchUpdate(String str, List objs) throws Exception;
+
+    /**
+     * 批量更新
+     *
+     * @param str
+     * @param objs
+     * @return
+     * @throws Exception
+     */
+    public Object batchSave(String str, List objs) throws Exception;
+
+}
\ No newline at end of file
Index: src/main/java/com/lpc/pojo/SmbmsUser.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/java/com/lpc/pojo/SmbmsUser.java	(date 1594541675439)
+++ src/main/java/com/lpc/pojo/SmbmsUser.java	(date 1594541675439)
@@ -0,0 +1,462 @@
+package com.lpc.pojo;
+
+import org.springframework.format.annotation.DateTimeFormat;
+
+import java.io.Serializable;
+import java.util.Calendar;
+import java.util.Date;
+
+public class SmbmsUser implements Serializable {
+    /**
+     * This field was generated by MyBatis Generator.
+     * This field corresponds to the database column smbms_user.id
+     *
+     * @mbggenerated
+     */
+    private Integer id;
+
+    /**
+     * This field was generated by MyBatis Generator.
+     * This field corresponds to the database column smbms_user.userCode
+     *
+     * @mbggenerated
+     */
+    private String usercode;
+
+    /**
+     * This field was generated by MyBatis Generator.
+     * This field corresponds to the database column smbms_user.userName
+     *
+     * @mbggenerated
+     */
+    private String username;
+
+    /**
+     * This field was generated by MyBatis Generator.
+     * This field corresponds to the database column smbms_user.userPassword
+     *
+     * @mbggenerated
+     */
+    private String userpassword;
+
+    /**
+     * This field was generated by MyBatis Generator.
+     * This field corresponds to the database column smbms_user.gender
+     *
+     * @mbggenerated
+     */
+    private Integer gender;
+
+    /**
+     * This field was generated by MyBatis Generator.
+     * This field corresponds to the database column smbms_user.birthday
+     *
+     * @mbggenerated
+     */
+    @DateTimeFormat(pattern = "yyyy-MM-dd")
+    private Date birthday;
+
+    /**
+     * This field was generated by MyBatis Generator.
+     * This field corresponds to the database column smbms_user.phone
+     *
+     * @mbggenerated
+     */
+    private String phone;
+
+    /**
+     * This field was generated by MyBatis Generator.
+     * This field corresponds to the database column smbms_user.address
+     *
+     * @mbggenerated
+     */
+    private String address;
+
+    /**
+     * This field was generated by MyBatis Generator.
+     * This field corresponds to the database column smbms_user.userRole
+     *
+     * @mbggenerated
+     */
+    private Integer userrole;
+
+    /**
+     * This field was generated by MyBatis Generator.
+     * This field corresponds to the database column smbms_user.createdBy
+     *
+     * @mbggenerated
+     */
+    private Integer createdby;
+
+    /**
+     * This field was generated by MyBatis Generator.
+     * This field corresponds to the database column smbms_user.creationDate
+     *
+     * @mbggenerated
+     */
+    private Date creationdate;
+
+    /**
+     * This field was generated by MyBatis Generator.
+     * This field corresponds to the database column smbms_user.modifyBy
+     *
+     * @mbggenerated
+     */
+    private Integer modifyby;
+
+    /**
+     * This field was generated by MyBatis Generator.
+     * This field corresponds to the database column smbms_user.modifyDate
+     *
+     * @mbggenerated
+     */
+    private Date modifydate;
+
+    private Integer age;
+
+    public Integer getAge() {
+        Date birthday=this.getBirthday();
+        Calendar c1=Calendar.getInstance();
+        c1.setTime(new Date());
+        Calendar c2=Calendar.getInstance();
+        c2.setTime(birthday);
+        int age=c1.get(Calendar.YEAR)-c2.get(Calendar.YEAR);
+        return age;
+    }
+
+    public void setAge(Integer age) {
+        this.age = age;
+    }
+
+    public SmbmsUser() {
+    }
+
+    public SmbmsUser(Integer id, String usercode, String username, String userpassword, Integer gender, Date birthday, String phone, String address, Integer userrole, Integer createdby, Date creationdate, Integer modifyby, Date modifydate, Integer age) {
+        this.id = id;
+        this.usercode = usercode;
+        this.username = username;
+        this.userpassword = userpassword;
+        this.gender = gender;
+        this.birthday = birthday;
+        this.phone = phone;
+        this.address = address;
+        this.userrole = userrole;
+        this.createdby = createdby;
+        this.creationdate = creationdate;
+        this.modifyby = modifyby;
+        this.modifydate = modifydate;
+        this.age = age;
+    }
+
+    /**
+     * This method was generated by MyBatis Generator.
+     * This method returns the value of the database column smbms_user.id
+     *
+     * @return the value of smbms_user.id
+     *
+     * @mbggenerated
+     */
+    public Integer getId() {
+        return id;
+    }
+
+    /**
+     * This method was generated by MyBatis Generator.
+     * This method sets the value of the database column smbms_user.id
+     *
+     * @param id the value for smbms_user.id
+     *
+     * @mbggenerated
+     */
+    public void setId(Integer id) {
+        this.id = id;
+    }
+
+    /**
+     * This method was generated by MyBatis Generator.
+     * This method returns the value of the database column smbms_user.userCode
+     *
+     * @return the value of smbms_user.userCode
+     *
+     * @mbggenerated
+     */
+    public String getUsercode() {
+        return usercode;
+    }
+
+    /**
+     * This method was generated by MyBatis Generator.
+     * This method sets the value of the database column smbms_user.userCode
+     *
+     * @param usercode the value for smbms_user.userCode
+     *
+     * @mbggenerated
+     */
+    public void setUsercode(String usercode) {
+        this.usercode = usercode == null ? null : usercode.trim();
+    }
+
+    /**
+     * This method was generated by MyBatis Generator.
+     * This method returns the value of the database column smbms_user.userName
+     *
+     * @return the value of smbms_user.userName
+     *
+     * @mbggenerated
+     */
+    public String getUsername() {
+        return username;
+    }
+
+    /**
+     * This method was generated by MyBatis Generator.
+     * This method sets the value of the database column smbms_user.userName
+     *
+     * @param username the value for smbms_user.userName
+     *
+     * @mbggenerated
+     */
+    public void setUsername(String username) {
+        this.username = username == null ? null : username.trim();
+    }
+
+    /**
+     * This method was generated by MyBatis Generator.
+     * This method returns the value of the database column smbms_user.userPassword
+     *
+     * @return the value of smbms_user.userPassword
+     *
+     * @mbggenerated
+     */
+    public String getUserpassword() {
+        return userpassword;
+    }
+
+    /**
+     * This method was generated by MyBatis Generator.
+     * This method sets the value of the database column smbms_user.userPassword
+     *
+     * @param userpassword the value for smbms_user.userPassword
+     *
+     * @mbggenerated
+     */
+    public void setUserpassword(String userpassword) {
+        this.userpassword = userpassword == null ? null : userpassword.trim();
+    }
+
+    /**
+     * This method was generated by MyBatis Generator.
+     * This method returns the value of the database column smbms_user.gender
+     *
+     * @return the value of smbms_user.gender
+     *
+     * @mbggenerated
+     */
+    public Integer getGender() {
+        return gender;
+    }
+
+    /**
+     * This method was generated by MyBatis Generator.
+     * This method sets the value of the database column smbms_user.gender
+     *
+     * @param gender the value for smbms_user.gender
+     *
+     * @mbggenerated
+     */
+    public void setGender(Integer gender) {
+        this.gender = gender;
+    }
+
+    /**
+     * This method was generated by MyBatis Generator.
+     * This method returns the value of the database column smbms_user.birthday
+     *
+     * @return the value of smbms_user.birthday
+     *
+     * @mbggenerated
+     */
+    public Date getBirthday() {
+        return birthday;
+    }
+
+    /**
+     * This method was generated by MyBatis Generator.
+     * This method sets the value of the database column smbms_user.birthday
+     *
+     * @param birthday the value for smbms_user.birthday
+     *
+     * @mbggenerated
+     */
+    public void setBirthday(Date birthday) {
+        this.birthday = birthday;
+    }
+
+    /**
+     * This method was generated by MyBatis Generator.
+     * This method returns the value of the database column smbms_user.phone
+     *
+     * @return the value of smbms_user.phone
+     *
+     * @mbggenerated
+     */
+    public String getPhone() {
+        return phone;
+    }
+
+    /**
+     * This method was generated by MyBatis Generator.
+     * This method sets the value of the database column smbms_user.phone
+     *
+     * @param phone the value for smbms_user.phone
+     *
+     * @mbggenerated
+     */
+    public void setPhone(String phone) {
+        this.phone = phone == null ? null : phone.trim();
+    }
+
+    /**
+     * This method was generated by MyBatis Generator.
+     * This method returns the value of the database column smbms_user.address
+     *
+     * @return the value of smbms_user.address
+     *
+     * @mbggenerated
+     */
+    public String getAddress() {
+        return address;
+    }
+
+    /**
+     * This method was generated by MyBatis Generator.
+     * This method sets the value of the database column smbms_user.address
+     *
+     * @param address the value for smbms_user.address
+     *
+     * @mbggenerated
+     */
+    public void setAddress(String address) {
+        this.address = address == null ? null : address.trim();
+    }
+
+    /**
+     * This method was generated by MyBatis Generator.
+     * This method returns the value of the database column smbms_user.userRole
+     *
+     * @return the value of smbms_user.userRole
+     *
+     * @mbggenerated
+     */
+    public Integer getUserrole() {
+        return userrole;
+    }
+
+    /**
+     * This method was generated by MyBatis Generator.
+     * This method sets the value of the database column smbms_user.userRole
+     *
+     * @param userrole the value for smbms_user.userRole
+     *
+     * @mbggenerated
+     */
+    public void setUserrole(Integer userrole) {
+        this.userrole = userrole;
+    }
+
+    /**
+     * This method was generated by MyBatis Generator.
+     * This method returns the value of the database column smbms_user.createdBy
+     *
+     * @return the value of smbms_user.createdBy
+     *
+     * @mbggenerated
+     */
+    public Integer getCreatedby() {
+        return createdby;
+    }
+
+    /**
+     * This method was generated by MyBatis Generator.
+     * This method sets the value of the database column smbms_user.createdBy
+     *
+     * @param createdby the value for smbms_user.createdBy
+     *
+     * @mbggenerated
+     */
+    public void setCreatedby(Integer createdby) {
+        this.createdby = createdby;
+    }
+
+    /**
+     * This method was generated by MyBatis Generator.
+     * This method returns the value of the database column smbms_user.creationDate
+     *
+     * @return the value of smbms_user.creationDate
+     *
+     * @mbggenerated
+     */
+    public Date getCreationdate() {
+        return creationdate;
+    }
+
+    /**
+     * This method was generated by MyBatis Generator.
+     * This method sets the value of the database column smbms_user.creationDate
+     *
+     * @param creationdate the value for smbms_user.creationDate
+     *
+     * @mbggenerated
+     */
+    public void setCreationdate(Date creationdate) {
+        this.creationdate = creationdate;
+    }
+
+    /**
+     * This method was generated by MyBatis Generator.
+     * This method returns the value of the database column smbms_user.modifyBy
+     *
+     * @return the value of smbms_user.modifyBy
+     *
+     * @mbggenerated
+     */
+    public Integer getModifyby() {
+        return modifyby;
+    }
+
+    /**
+     * This method was generated by MyBatis Generator.
+     * This method sets the value of the database column smbms_user.modifyBy
+     *
+     * @param modifyby the value for smbms_user.modifyBy
+     *
+     * @mbggenerated
+     */
+    public void setModifyby(Integer modifyby) {
+        this.modifyby = modifyby;
+    }
+
+    /**
+     * This method was generated by MyBatis Generator.
+     * This method returns the value of the database column smbms_user.modifyDate
+     *
+     * @return the value of smbms_user.modifyDate
+     *
+     * @mbggenerated
+     */
+    public Date getModifydate() {
+        return modifydate;
+    }
+
+    /**
+     * This method was generated by MyBatis Generator.
+     * This method sets the value of the database column smbms_user.modifyDate
+     *
+     * @param modifydate the value for smbms_user.modifyDate
+     *
+     * @mbggenerated
+     */
+    public void setModifydate(Date modifydate) {
+        this.modifydate = modifydate;
+    }
+}
\ No newline at end of file
Index: src/main/java/com/lpc/service/SmbmsUserService.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/java/com/lpc/service/SmbmsUserService.java	(date 1594542931122)
+++ src/main/java/com/lpc/service/SmbmsUserService.java	(date 1594542931122)
@@ -0,0 +1,47 @@
+package com.lpc.service;
+
+import com.lpc.dao.DAO;
+import com.lpc.pojo.SmbmsUser;
+import com.lpc.pojo.SmbmsUserExample;
+import org.springframework.beans.factory.annotation.Autowired;
+import org.springframework.stereotype.Service;
+
+import java.util.ArrayList;
+
+/**
+ * @User lpc/李金超
+ * @ClassName SmbmsUserService  类名
+ * @Author AUSUA  作者
+ * @Date 2020/7/10 18:37  时间
+ * @Version 1.0 版本
+ */
+@Service
+public class SmbmsUserService {
+
+    @Autowired
+    private DAO dao;
+
+
+
+    public SmbmsUser login(SmbmsUser smbmsUser)  {
+        try {
+            SmbmsUserExample smbmsUserExample = new SmbmsUserExample();
+            smbmsUserExample.createCriteria().andUsercodeEqualTo(smbmsUser.getUsercode()).andUserpasswordEqualTo(smbmsUser.getUserpassword());
+            ArrayList forList = (ArrayList) dao.findForList("SmbmsUserMapper.selectByExample", smbmsUserExample);
+            if(null!=forList&&forList.size()>0){
+                return (SmbmsUser) forList.get(0);
+            }
+        } catch (Exception e) {
+            e.printStackTrace();
+        }
+        return null;
+    }
+
+    public void savepwdmodify(SmbmsUser userOnLogin) {
+        try {
+            dao.update("SmbmsUserMapper.updateByPrimaryKeySelective",userOnLogin);
+        } catch (Exception e) {
+            e.printStackTrace();
+        }
+    }
+}
Index: src/main/java/com/lpc/dao/DaoSupport.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/java/com/lpc/dao/DaoSupport.java	(date 1594378357039)
+++ src/main/java/com/lpc/dao/DaoSupport.java	(date 1594378357039)
@@ -0,0 +1,132 @@
+package com.lpc.dao;
+
+import org.apache.ibatis.session.ExecutorType;
+import org.apache.ibatis.session.SqlSession;
+import org.apache.ibatis.session.SqlSessionFactory;
+import org.mybatis.spring.SqlSessionTemplate;
+import org.springframework.stereotype.Repository;
+
+import javax.annotation.Resource;
+import java.util.List;
+@Repository
+public class DaoSupport implements DAO {
+  
+    @Resource
+    private SqlSessionTemplate sqlSessionTemplate;
+      
+    /** 
+     * 保存对象 
+     * @param str 
+     * @param obj 
+     * @return 
+     * @throws Exception 
+     */  
+    @Override
+    public Object save(String str, Object obj) throws Exception {
+        return sqlSessionTemplate.insert(str, obj);  
+    }  
+      
+    /** 
+     * 批量更新 
+     * @param str 
+     * @param objs
+     * @return 
+     * @throws Exception 
+     */  
+    @Override
+    public Object batchSave(String str, List objs )throws Exception{
+        return sqlSessionTemplate.insert(str, objs);  
+    }  
+      
+    /** 
+     * 修改对象 
+     * @param str 
+     * @param obj 
+     * @return 
+     * @throws Exception 
+     */  
+    @Override
+    public Object update(String str, Object obj) throws Exception {
+        return sqlSessionTemplate.update(str, obj);  
+    }  
+  
+    /** 
+     * 批量更新 
+     * @param str 
+     * @param objs
+     * @return 
+     * @throws Exception 
+     */  
+    @Override
+    public void batchUpdate(String str, List objs )throws Exception{
+        SqlSessionFactory sqlSessionFactory = sqlSessionTemplate.getSqlSessionFactory();
+        //批量执行器  
+        SqlSession sqlSession = sqlSessionFactory.openSession(ExecutorType.BATCH,false);
+        try{  
+            if(objs!=null){  
+                for(int i=0,size=objs.size();i<size;i++){  
+                    sqlSession.update(str, objs.get(i));  
+                }  
+                sqlSession.flushStatements();  
+                sqlSession.commit();  
+                sqlSession.clearCache();  
+            }  
+        }finally{  
+            sqlSession.close();  
+        }  
+    }  
+      
+    /** 
+     * 批量删除
+     * @param str 
+     * @param objs
+     * @return
+     * @throws Exception 
+     */
+    @Override
+    public Object batchDelete(String str, List objs )throws Exception{
+        return sqlSessionTemplate.delete(str, objs);  
+    }  
+      
+    /** 
+     * 删除对象  
+     * @param str 
+     * @param obj 
+     * @return 
+     * @throws Exception 
+     */  
+    @Override
+    public Object delete(String str, Object obj) throws Exception {
+        return sqlSessionTemplate.delete(str, obj);  
+    }  
+       
+    /** 
+     * 查找对象 
+     * @param str 
+     * @param obj 
+     * @return 
+     * @throws Exception 
+     */
+    @Override
+    public Object findForObject(String str, Object obj) throws Exception {  
+        return sqlSessionTemplate.selectOne(str, obj);  
+    }  
+  
+    /** 
+     * 查找对象 
+     * @param str 
+     * @param obj 
+     * @return 
+     * @throws Exception 
+     */
+    @Override
+    public Object findForList(String str, Object obj) throws Exception {  
+        return sqlSessionTemplate.selectList(str, obj);  
+    }  
+      
+    @Override
+    public Object findForMap(String str, Object obj, String key, String value) throws Exception {
+        return sqlSessionTemplate.selectMap(str, obj, key);  
+    }  
+      
+}  
Index: src/main/java/com/lpc/pojo/SmbmsProvider.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/java/com/lpc/pojo/SmbmsProvider.java	(date 1594541675453)
+++ src/main/java/com/lpc/pojo/SmbmsProvider.java	(date 1594541675453)
@@ -0,0 +1,390 @@
+package com.lpc.pojo;
+
+import java.io.Serializable;
+import java.util.Date;
+
+public class SmbmsProvider implements Serializable {
+    /**
+     * This field was generated by MyBatis Generator.
+     * This field corresponds to the database column smbms_provider.id
+     *
+     * @mbggenerated
+     */
+    private Long id;
+
+    /**
+     * This field was generated by MyBatis Generator.
+     * This field corresponds to the database column smbms_provider.proCode
+     *
+     * @mbggenerated
+     */
+    private String procode;
+
+    /**
+     * This field was generated by MyBatis Generator.
+     * This field corresponds to the database column smbms_provider.proName
+     *
+     * @mbggenerated
+     */
+    private String proname;
+
+    /**
+     * This field was generated by MyBatis Generator.
+     * This field corresponds to the database column smbms_provider.proDesc
+     *
+     * @mbggenerated
+     */
+    private String prodesc;
+
+    /**
+     * This field was generated by MyBatis Generator.
+     * This field corresponds to the database column smbms_provider.proContact
+     *
+     * @mbggenerated
+     */
+    private String procontact;
+
+    /**
+     * This field was generated by MyBatis Generator.
+     * This field corresponds to the database column smbms_provider.proPhone
+     *
+     * @mbggenerated
+     */
+    private String prophone;
+
+    /**
+     * This field was generated by MyBatis Generator.
+     * This field corresponds to the database column smbms_provider.proAddress
+     *
+     * @mbggenerated
+     */
+    private String proaddress;
+
+    /**
+     * This field was generated by MyBatis Generator.
+     * This field corresponds to the database column smbms_provider.proFax
+     *
+     * @mbggenerated
+     */
+    private String profax;
+
+    /**
+     * This field was generated by MyBatis Generator.
+     * This field corresponds to the database column smbms_provider.createdBy
+     *
+     * @mbggenerated
+     */
+    private Long createdby;
+
+    /**
+     * This field was generated by MyBatis Generator.
+     * This field corresponds to the database column smbms_provider.creationDate
+     *
+     * @mbggenerated
+     */
+    private Date creationdate;
+
+    /**
+     * This field was generated by MyBatis Generator.
+     * This field corresponds to the database column smbms_provider.modifyDate
+     *
+     * @mbggenerated
+     */
+    private Date modifydate;
+
+    /**
+     * This field was generated by MyBatis Generator.
+     * This field corresponds to the database column smbms_provider.modifyBy
+     *
+     * @mbggenerated
+     */
+    private Long modifyby;
+
+    /**
+     * This method was generated by MyBatis Generator.
+     * This method returns the value of the database column smbms_provider.id
+     *
+     * @return the value of smbms_provider.id
+     *
+     * @mbggenerated
+     */
+    public Long getId() {
+        return id;
+    }
+
+    /**
+     * This method was generated by MyBatis Generator.
+     * This method sets the value of the database column smbms_provider.id
+     *
+     * @param id the value for smbms_provider.id
+     *
+     * @mbggenerated
+     */
+    public void setId(Long id) {
+        this.id = id;
+    }
+
+    /**
+     * This method was generated by MyBatis Generator.
+     * This method returns the value of the database column smbms_provider.proCode
+     *
+     * @return the value of smbms_provider.proCode
+     *
+     * @mbggenerated
+     */
+    public String getProcode() {
+        return procode;
+    }
+
+    /**
+     * This method was generated by MyBatis Generator.
+     * This method sets the value of the database column smbms_provider.proCode
+     *
+     * @param procode the value for smbms_provider.proCode
+     *
+     * @mbggenerated
+     */
+    public void setProcode(String procode) {
+        this.procode = procode == null ? null : procode.trim();
+    }
+
+    /**
+     * This method was generated by MyBatis Generator.
+     * This method returns the value of the database column smbms_provider.proName
+     *
+     * @return the value of smbms_provider.proName
+     *
+     * @mbggenerated
+     */
+    public String getProname() {
+        return proname;
+    }
+
+    /**
+     * This method was generated by MyBatis Generator.
+     * This method sets the value of the database column smbms_provider.proName
+     *
+     * @param proname the value for smbms_provider.proName
+     *
+     * @mbggenerated
+     */
+    public void setProname(String proname) {
+        this.proname = proname == null ? null : proname.trim();
+    }
+
+    /**
+     * This method was generated by MyBatis Generator.
+     * This method returns the value of the database column smbms_provider.proDesc
+     *
+     * @return the value of smbms_provider.proDesc
+     *
+     * @mbggenerated
+     */
+    public String getProdesc() {
+        return prodesc;
+    }
+
+    /**
+     * This method was generated by MyBatis Generator.
+     * This method sets the value of the database column smbms_provider.proDesc
+     *
+     * @param prodesc the value for smbms_provider.proDesc
+     *
+     * @mbggenerated
+     */
+    public void setProdesc(String prodesc) {
+        this.prodesc = prodesc == null ? null : prodesc.trim();
+    }
+
+    /**
+     * This method was generated by MyBatis Generator.
+     * This method returns the value of the database column smbms_provider.proContact
+     *
+     * @return the value of smbms_provider.proContact
+     *
+     * @mbggenerated
+     */
+    public String getProcontact() {
+        return procontact;
+    }
+
+    /**
+     * This method was generated by MyBatis Generator.
+     * This method sets the value of the database column smbms_provider.proContact
+     *
+     * @param procontact the value for smbms_provider.proContact
+     *
+     * @mbggenerated
+     */
+    public void setProcontact(String procontact) {
+        this.procontact = procontact == null ? null : procontact.trim();
+    }
+
+    /**
+     * This method was generated by MyBatis Generator.
+     * This method returns the value of the database column smbms_provider.proPhone
+     *
+     * @return the value of smbms_provider.proPhone
+     *
+     * @mbggenerated
+     */
+    public String getProphone() {
+        return prophone;
+    }
+
+    /**
+     * This method was generated by MyBatis Generator.
+     * This method sets the value of the database column smbms_provider.proPhone
+     *
+     * @param prophone the value for smbms_provider.proPhone
+     *
+     * @mbggenerated
+     */
+    public void setProphone(String prophone) {
+        this.prophone = prophone == null ? null : prophone.trim();
+    }
+
+    /**
+     * This method was generated by MyBatis Generator.
+     * This method returns the value of the database column smbms_provider.proAddress
+     *
+     * @return the value of smbms_provider.proAddress
+     *
+     * @mbggenerated
+     */
+    public String getProaddress() {
+        return proaddress;
+    }
+
+    /**
+     * This method was generated by MyBatis Generator.
+     * This method sets the value of the database column smbms_provider.proAddress
+     *
+     * @param proaddress the value for smbms_provider.proAddress
+     *
+     * @mbggenerated
+     */
+    public void setProaddress(String proaddress) {
+        this.proaddress = proaddress == null ? null : proaddress.trim();
+    }
+
+    /**
+     * This method was generated by MyBatis Generator.
+     * This method returns the value of the database column smbms_provider.proFax
+     *
+     * @return the value of smbms_provider.proFax
+     *
+     * @mbggenerated
+     */
+    public String getProfax() {
+        return profax;
+    }
+
+    /**
+     * This method was generated by MyBatis Generator.
+     * This method sets the value of the database column smbms_provider.proFax
+     *
+     * @param profax the value for smbms_provider.proFax
+     *
+     * @mbggenerated
+     */
+    public void setProfax(String profax) {
+        this.profax = profax == null ? null : profax.trim();
+    }
+
+    /**
+     * This method was generated by MyBatis Generator.
+     * This method returns the value of the database column smbms_provider.createdBy
+     *
+     * @return the value of smbms_provider.createdBy
+     *
+     * @mbggenerated
+     */
+    public Long getCreatedby() {
+        return createdby;
+    }
+
+    /**
+     * This method was generated by MyBatis Generator.
+     * This method sets the value of the database column smbms_provider.createdBy
+     *
+     * @param createdby the value for smbms_provider.createdBy
+     *
+     * @mbggenerated
+     */
+    public void setCreatedby(Long createdby) {
+        this.createdby = createdby;
+    }
+
+    /**
+     * This method was generated by MyBatis Generator.
+     * This method returns the value of the database column smbms_provider.creationDate
+     *
+     * @return the value of smbms_provider.creationDate
+     *
+     * @mbggenerated
+     */
+    public Date getCreationdate() {
+        return creationdate;
+    }
+
+    /**
+     * This method was generated by MyBatis Generator.
+     * This method sets the value of the database column smbms_provider.creationDate
+     *
+     * @param creationdate the value for smbms_provider.creationDate
+     *
+     * @mbggenerated
+     */
+    public void setCreationdate(Date creationdate) {
+        this.creationdate = creationdate;
+    }
+
+    /**
+     * This method was generated by MyBatis Generator.
+     * This method returns the value of the database column smbms_provider.modifyDate
+     *
+     * @return the value of smbms_provider.modifyDate
+     *
+     * @mbggenerated
+     */
+    public Date getModifydate() {
+        return modifydate;
+    }
+
+    /**
+     * This method was generated by MyBatis Generator.
+     * This method sets the value of the database column smbms_provider.modifyDate
+     *
+     * @param modifydate the value for smbms_provider.modifyDate
+     *
+     * @mbggenerated
+     */
+    public void setModifydate(Date modifydate) {
+        this.modifydate = modifydate;
+    }
+
+    /**
+     * This method was generated by MyBatis Generator.
+     * This method returns the value of the database column smbms_provider.modifyBy
+     *
+     * @return the value of smbms_provider.modifyBy
+     *
+     * @mbggenerated
+     */
+    public Long getModifyby() {
+        return modifyby;
+    }
+
+    /**
+     * This method was generated by MyBatis Generator.
+     * This method sets the value of the database column smbms_provider.modifyBy
+     *
+     * @param modifyby the value for smbms_provider.modifyBy
+     *
+     * @mbggenerated
+     */
+    public void setModifyby(Long modifyby) {
+        this.modifyby = modifyby;
+    }
+}
\ No newline at end of file
Index: src/main/java/com/lpc/pojo/SmbmsAddress.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/java/com/lpc/pojo/SmbmsAddress.java	(date 1594541675446)
+++ src/main/java/com/lpc/pojo/SmbmsAddress.java	(date 1594541675446)
@@ -0,0 +1,326 @@
+package com.lpc.pojo;
+
+import java.io.Serializable;
+import java.util.Date;
+
+public class SmbmsAddress implements Serializable {
+    /**
+     * This field was generated by MyBatis Generator.
+     * This field corresponds to the database column smbms_address.id
+     *
+     * @mbggenerated
+     */
+    private Long id;
+
+    /**
+     * This field was generated by MyBatis Generator.
+     * This field corresponds to the database column smbms_address.contact
+     *
+     * @mbggenerated
+     */
+    private String contact;
+
+    /**
+     * This field was generated by MyBatis Generator.
+     * This field corresponds to the database column smbms_address.addressDesc
+     *
+     * @mbggenerated
+     */
+    private String addressdesc;
+
+    /**
+     * This field was generated by MyBatis Generator.
+     * This field corresponds to the database column smbms_address.postCode
+     *
+     * @mbggenerated
+     */
+    private String postcode;
+
+    /**
+     * This field was generated by MyBatis Generator.
+     * This field corresponds to the database column smbms_address.tel
+     *
+     * @mbggenerated
+     */
+    private String tel;
+
+    /**
+     * This field was generated by MyBatis Generator.
+     * This field corresponds to the database column smbms_address.createdBy
+     *
+     * @mbggenerated
+     */
+    private Long createdby;
+
+    /**
+     * This field was generated by MyBatis Generator.
+     * This field corresponds to the database column smbms_address.creationDate
+     *
+     * @mbggenerated
+     */
+    private Date creationdate;
+
+    /**
+     * This field was generated by MyBatis Generator.
+     * This field corresponds to the database column smbms_address.modifyBy
+     *
+     * @mbggenerated
+     */
+    private Long modifyby;
+
+    /**
+     * This field was generated by MyBatis Generator.
+     * This field corresponds to the database column smbms_address.modifyDate
+     *
+     * @mbggenerated
+     */
+    private Date modifydate;
+
+    /**
+     * This field was generated by MyBatis Generator.
+     * This field corresponds to the database column smbms_address.userId
+     *
+     * @mbggenerated
+     */
+    private Long userid;
+
+    /**
+     * This method was generated by MyBatis Generator.
+     * This method returns the value of the database column smbms_address.id
+     *
+     * @return the value of smbms_address.id
+     *
+     * @mbggenerated
+     */
+    public Long getId() {
+        return id;
+    }
+
+    /**
+     * This method was generated by MyBatis Generator.
+     * This method sets the value of the database column smbms_address.id
+     *
+     * @param id the value for smbms_address.id
+     *
+     * @mbggenerated
+     */
+    public void setId(Long id) {
+        this.id = id;
+    }
+
+    /**
+     * This method was generated by MyBatis Generator.
+     * This method returns the value of the database column smbms_address.contact
+     *
+     * @return the value of smbms_address.contact
+     *
+     * @mbggenerated
+     */
+    public String getContact() {
+        return contact;
+    }
+
+    /**
+     * This method was generated by MyBatis Generator.
+     * This method sets the value of the database column smbms_address.contact
+     *
+     * @param contact the value for smbms_address.contact
+     *
+     * @mbggenerated
+     */
+    public void setContact(String contact) {
+        this.contact = contact == null ? null : contact.trim();
+    }
+
+    /**
+     * This method was generated by MyBatis Generator.
+     * This method returns the value of the database column smbms_address.addressDesc
+     *
+     * @return the value of smbms_address.addressDesc
+     *
+     * @mbggenerated
+     */
+    public String getAddressdesc() {
+        return addressdesc;
+    }
+
+    /**
+     * This method was generated by MyBatis Generator.
+     * This method sets the value of the database column smbms_address.addressDesc
+     *
+     * @param addressdesc the value for smbms_address.addressDesc
+     *
+     * @mbggenerated
+     */
+    public void setAddressdesc(String addressdesc) {
+        this.addressdesc = addressdesc == null ? null : addressdesc.trim();
+    }
+
+    /**
+     * This method was generated by MyBatis Generator.
+     * This method returns the value of the database column smbms_address.postCode
+     *
+     * @return the value of smbms_address.postCode
+     *
+     * @mbggenerated
+     */
+    public String getPostcode() {
+        return postcode;
+    }
+
+    /**
+     * This method was generated by MyBatis Generator.
+     * This method sets the value of the database column smbms_address.postCode
+     *
+     * @param postcode the value for smbms_address.postCode
+     *
+     * @mbggenerated
+     */
+    public void setPostcode(String postcode) {
+        this.postcode = postcode == null ? null : postcode.trim();
+    }
+
+    /**
+     * This method was generated by MyBatis Generator.
+     * This method returns the value of the database column smbms_address.tel
+     *
+     * @return the value of smbms_address.tel
+     *
+     * @mbggenerated
+     */
+    public String getTel() {
+        return tel;
+    }
+
+    /**
+     * This method was generated by MyBatis Generator.
+     * This method sets the value of the database column smbms_address.tel
+     *
+     * @param tel the value for smbms_address.tel
+     *
+     * @mbggenerated
+     */
+    public void setTel(String tel) {
+        this.tel = tel == null ? null : tel.trim();
+    }
+
+    /**
+     * This method was generated by MyBatis Generator.
+     * This method returns the value of the database column smbms_address.createdBy
+     *
+     * @return the value of smbms_address.createdBy
+     *
+     * @mbggenerated
+     */
+    public Long getCreatedby() {
+        return createdby;
+    }
+
+    /**
+     * This method was generated by MyBatis Generator.
+     * This method sets the value of the database column smbms_address.createdBy
+     *
+     * @param createdby the value for smbms_address.createdBy
+     *
+     * @mbggenerated
+     */
+    public void setCreatedby(Long createdby) {
+        this.createdby = createdby;
+    }
+
+    /**
+     * This method was generated by MyBatis Generator.
+     * This method returns the value of the database column smbms_address.creationDate
+     *
+     * @return the value of smbms_address.creationDate
+     *
+     * @mbggenerated
+     */
+    public Date getCreationdate() {
+        return creationdate;
+    }
+
+    /**
+     * This method was generated by MyBatis Generator.
+     * This method sets the value of the database column smbms_address.creationDate
+     *
+     * @param creationdate the value for smbms_address.creationDate
+     *
+     * @mbggenerated
+     */
+    public void setCreationdate(Date creationdate) {
+        this.creationdate = creationdate;
+    }
+
+    /**
+     * This method was generated by MyBatis Generator.
+     * This method returns the value of the database column smbms_address.modifyBy
+     *
+     * @return the value of smbms_address.modifyBy
+     *
+     * @mbggenerated
+     */
+    public Long getModifyby() {
+        return modifyby;
+    }
+
+    /**
+     * This method was generated by MyBatis Generator.
+     * This method sets the value of the database column smbms_address.modifyBy
+     *
+     * @param modifyby the value for smbms_address.modifyBy
+     *
+     * @mbggenerated
+     */
+    public void setModifyby(Long modifyby) {
+        this.modifyby = modifyby;
+    }
+
+    /**
+     * This method was generated by MyBatis Generator.
+     * This method returns the value of the database column smbms_address.modifyDate
+     *
+     * @return the value of smbms_address.modifyDate
+     *
+     * @mbggenerated
+     */
+    public Date getModifydate() {
+        return modifydate;
+    }
+
+    /**
+     * This method was generated by MyBatis Generator.
+     * This method sets the value of the database column smbms_address.modifyDate
+     *
+     * @param modifydate the value for smbms_address.modifyDate
+     *
+     * @mbggenerated
+     */
+    public void setModifydate(Date modifydate) {
+        this.modifydate = modifydate;
+    }
+
+    /**
+     * This method was generated by MyBatis Generator.
+     * This method returns the value of the database column smbms_address.userId
+     *
+     * @return the value of smbms_address.userId
+     *
+     * @mbggenerated
+     */
+    public Long getUserid() {
+        return userid;
+    }
+
+    /**
+     * This method was generated by MyBatis Generator.
+     * This method sets the value of the database column smbms_address.userId
+     *
+     * @param userid the value for smbms_address.userId
+     *
+     * @mbggenerated
+     */
+    public void setUserid(Long userid) {
+        this.userid = userid;
+    }
+}
\ No newline at end of file
Index: src/main/java/com/lpc/pojo/SmbmsUserExample.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/java/com/lpc/pojo/SmbmsUserExample.java	(date 1594541675422)
+++ src/main/java/com/lpc/pojo/SmbmsUserExample.java	(date 1594541675422)
@@ -0,0 +1,1161 @@
+package com.lpc.pojo;
+
+import java.io.Serializable;
+import java.util.ArrayList;
+import java.util.Date;
+import java.util.Iterator;
+import java.util.List;
+
+public class SmbmsUserExample implements Serializable {
+    /**
+     * This field was generated by MyBatis Generator.
+     * This field corresponds to the database table smbms_user
+     *
+     * @mbggenerated
+     */
+    protected String orderByClause;
+
+    /**
+     * This field was generated by MyBatis Generator.
+     * This field corresponds to the database table smbms_user
+     *
+     * @mbggenerated
+     */
+    protected boolean distinct;
+
+    /**
+     * This field was generated by MyBatis Generator.
+     * This field corresponds to the database table smbms_user
+     *
+     * @mbggenerated
+     */
+    protected List<Criteria> oredCriteria;
+
+    /**
+     * This method was generated by MyBatis Generator.
+     * This method corresponds to the database table smbms_user
+     *
+     * @mbggenerated
+     */
+    public SmbmsUserExample() {
+        oredCriteria = new ArrayList<Criteria>();
+    }
+
+    /**
+     * This method was generated by MyBatis Generator.
+     * This method corresponds to the database table smbms_user
+     *
+     * @mbggenerated
+     */
+    public void setOrderByClause(String orderByClause) {
+        this.orderByClause = orderByClause;
+    }
+
+    /**
+     * This method was generated by MyBatis Generator.
+     * This method corresponds to the database table smbms_user
+     *
+     * @mbggenerated
+     */
+    public String getOrderByClause() {
+        return orderByClause;
+    }
+
+    /**
+     * This method was generated by MyBatis Generator.
+     * This method corresponds to the database table smbms_user
+     *
+     * @mbggenerated
+     */
+    public void setDistinct(boolean distinct) {
+        this.distinct = distinct;
+    }
+
+    /**
+     * This method was generated by MyBatis Generator.
+     * This method corresponds to the database table smbms_user
+     *
+     * @mbggenerated
+     */
+    public boolean isDistinct() {
+        return distinct;
+    }
+
+    /**
+     * This method was generated by MyBatis Generator.
+     * This method corresponds to the database table smbms_user
+     *
+     * @mbggenerated
+     */
+    public List<Criteria> getOredCriteria() {
+        return oredCriteria;
+    }
+
+    /**
+     * This method was generated by MyBatis Generator.
+     * This method corresponds to the database table smbms_user
+     *
+     * @mbggenerated
+     */
+    public void or(Criteria criteria) {
+        oredCriteria.add(criteria);
+    }
+
+    /**
+     * This method was generated by MyBatis Generator.
+     * This method corresponds to the database table smbms_user
+     *
+     * @mbggenerated
+     */
+    public Criteria or() {
+        Criteria criteria = createCriteriaInternal();
+        oredCriteria.add(criteria);
+        return criteria;
+    }
+
+    /**
+     * This method was generated by MyBatis Generator.
+     * This method corresponds to the database table smbms_user
+     *
+     * @mbggenerated
+     */
+    public Criteria createCriteria() {
+        Criteria criteria = createCriteriaInternal();
+        if (oredCriteria.size() == 0) {
+            oredCriteria.add(criteria);
+        }
+        return criteria;
+    }
+
+    /**
+     * This method was generated by MyBatis Generator.
+     * This method corresponds to the database table smbms_user
+     *
+     * @mbggenerated
+     */
+    protected Criteria createCriteriaInternal() {
+        Criteria criteria = new Criteria();
+        return criteria;
+    }
+
+    /**
+     * This method was generated by MyBatis Generator.
+     * This method corresponds to the database table smbms_user
+     *
+     * @mbggenerated
+     */
+    public void clear() {
+        oredCriteria.clear();
+        orderByClause = null;
+        distinct = false;
+    }
+
+    /**
+     * This class was generated by MyBatis Generator.
+     * This class corresponds to the database table smbms_user
+     *
+     * @mbggenerated
+     */
+    protected abstract static class GeneratedCriteria {
+        protected List<Criterion> criteria;
+
+        protected GeneratedCriteria() {
+            super();
+            criteria = new ArrayList<Criterion>();
+        }
+
+        public boolean isValid() {
+            return criteria.size() > 0;
+        }
+
+        public List<Criterion> getAllCriteria() {
+            return criteria;
+        }
+
+        public List<Criterion> getCriteria() {
+            return criteria;
+        }
+
+        protected void addCriterion(String condition) {
+            if (condition == null) {
+                throw new RuntimeException("Value for condition cannot be null");
+            }
+            criteria.add(new Criterion(condition));
+        }
+
+        protected void addCriterion(String condition, Object value, String property) {
+            if (value == null) {
+                throw new RuntimeException("Value for " + property + " cannot be null");
+            }
+            criteria.add(new Criterion(condition, value));
+        }
+
+        protected void addCriterion(String condition, Object value1, Object value2, String property) {
+            if (value1 == null || value2 == null) {
+                throw new RuntimeException("Between values for " + property + " cannot be null");
+            }
+            criteria.add(new Criterion(condition, value1, value2));
+        }
+
+        protected void addCriterionForJDBCDate(String condition, Date value, String property) {
+            if (value == null) {
+                throw new RuntimeException("Value for " + property + " cannot be null");
+            }
+            addCriterion(condition, new java.sql.Date(value.getTime()), property);
+        }
+
+        protected void addCriterionForJDBCDate(String condition, List<Date> values, String property) {
+            if (values == null || values.size() == 0) {
+                throw new RuntimeException("Value list for " + property + " cannot be null or empty");
+            }
+            List<java.sql.Date> dateList = new ArrayList<java.sql.Date>();
+            Iterator<Date> iter = values.iterator();
+            while (iter.hasNext()) {
+                dateList.add(new java.sql.Date(iter.next().getTime()));
+            }
+            addCriterion(condition, dateList, property);
+        }
+
+        protected void addCriterionForJDBCDate(String condition, Date value1, Date value2, String property) {
+            if (value1 == null || value2 == null) {
+                throw new RuntimeException("Between values for " + property + " cannot be null");
+            }
+            addCriterion(condition, new java.sql.Date(value1.getTime()), new java.sql.Date(value2.getTime()), property);
+        }
+
+        public Criteria andIdIsNull() {
+            addCriterion("id is null");
+            return (Criteria) this;
+        }
+
+        public Criteria andIdIsNotNull() {
+            addCriterion("id is not null");
+            return (Criteria) this;
+        }
+
+        public Criteria andIdEqualTo(Integer value) {
+            addCriterion("id =", value, "id");
+            return (Criteria) this;
+        }
+
+        public Criteria andIdNotEqualTo(Integer value) {
+            addCriterion("id <>", value, "id");
+            return (Criteria) this;
+        }
+
+        public Criteria andIdGreaterThan(Integer value) {
+            addCriterion("id >", value, "id");
+            return (Criteria) this;
+        }
+
+        public Criteria andIdGreaterThanOrEqualTo(Integer value) {
+            addCriterion("id >=", value, "id");
+            return (Criteria) this;
+        }
+
+        public Criteria andIdLessThan(Integer value) {
+            addCriterion("id <", value, "id");
+            return (Criteria) this;
+        }
+
+        public Criteria andIdLessThanOrEqualTo(Integer value) {
+            addCriterion("id <=", value, "id");
+            return (Criteria) this;
+        }
+
+        public Criteria andIdIn(List<Integer> values) {
+            addCriterion("id in", values, "id");
+            return (Criteria) this;
+        }
+
+        public Criteria andIdNotIn(List<Integer> values) {
+            addCriterion("id not in", values, "id");
+            return (Criteria) this;
+        }
+
+        public Criteria andIdBetween(Integer value1, Integer value2) {
+            addCriterion("id between", value1, value2, "id");
+            return (Criteria) this;
+        }
+
+        public Criteria andIdNotBetween(Integer value1, Integer value2) {
+            addCriterion("id not between", value1, value2, "id");
+            return (Criteria) this;
+        }
+
+        public Criteria andUsercodeIsNull() {
+            addCriterion("userCode is null");
+            return (Criteria) this;
+        }
+
+        public Criteria andUsercodeIsNotNull() {
+            addCriterion("userCode is not null");
+            return (Criteria) this;
+        }
+
+        public Criteria andUsercodeEqualTo(String value) {
+            addCriterion("userCode =", value, "usercode");
+            return (Criteria) this;
+        }
+
+        public Criteria andUsercodeNotEqualTo(String value) {
+            addCriterion("userCode <>", value, "usercode");
+            return (Criteria) this;
+        }
+
+        public Criteria andUsercodeGreaterThan(String value) {
+            addCriterion("userCode >", value, "usercode");
+            return (Criteria) this;
+        }
+
+        public Criteria andUsercodeGreaterThanOrEqualTo(String value) {
+            addCriterion("userCode >=", value, "usercode");
+            return (Criteria) this;
+        }
+
+        public Criteria andUsercodeLessThan(String value) {
+            addCriterion("userCode <", value, "usercode");
+            return (Criteria) this;
+        }
+
+        public Criteria andUsercodeLessThanOrEqualTo(String value) {
+            addCriterion("userCode <=", value, "usercode");
+            return (Criteria) this;
+        }
+
+        public Criteria andUsercodeLike(String value) {
+            addCriterion("userCode like", value, "usercode");
+            return (Criteria) this;
+        }
+
+        public Criteria andUsercodeNotLike(String value) {
+            addCriterion("userCode not like", value, "usercode");
+            return (Criteria) this;
+        }
+
+        public Criteria andUsercodeIn(List<String> values) {
+            addCriterion("userCode in", values, "usercode");
+            return (Criteria) this;
+        }
+
+        public Criteria andUsercodeNotIn(List<String> values) {
+            addCriterion("userCode not in", values, "usercode");
+            return (Criteria) this;
+        }
+
+        public Criteria andUsercodeBetween(String value1, String value2) {
+            addCriterion("userCode between", value1, value2, "usercode");
+            return (Criteria) this;
+        }
+
+        public Criteria andUsercodeNotBetween(String value1, String value2) {
+            addCriterion("userCode not between", value1, value2, "usercode");
+            return (Criteria) this;
+        }
+
+        public Criteria andUsernameIsNull() {
+            addCriterion("userName is null");
+            return (Criteria) this;
+        }
+
+        public Criteria andUsernameIsNotNull() {
+            addCriterion("userName is not null");
+            return (Criteria) this;
+        }
+
+        public Criteria andUsernameEqualTo(String value) {
+            addCriterion("userName =", value, "username");
+            return (Criteria) this;
+        }
+
+        public Criteria andUsernameNotEqualTo(String value) {
+            addCriterion("userName <>", value, "username");
+            return (Criteria) this;
+        }
+
+        public Criteria andUsernameGreaterThan(String value) {
+            addCriterion("userName >", value, "username");
+            return (Criteria) this;
+        }
+
+        public Criteria andUsernameGreaterThanOrEqualTo(String value) {
+            addCriterion("userName >=", value, "username");
+            return (Criteria) this;
+        }
+
+        public Criteria andUsernameLessThan(String value) {
+            addCriterion("userName <", value, "username");
+            return (Criteria) this;
+        }
+
+        public Criteria andUsernameLessThanOrEqualTo(String value) {
+            addCriterion("userName <=", value, "username");
+            return (Criteria) this;
+        }
+
+        public Criteria andUsernameLike(String value) {
+            addCriterion("userName like", value, "username");
+            return (Criteria) this;
+        }
+
+        public Criteria andUsernameNotLike(String value) {
+            addCriterion("userName not like", value, "username");
+            return (Criteria) this;
+        }
+
+        public Criteria andUsernameIn(List<String> values) {
+            addCriterion("userName in", values, "username");
+            return (Criteria) this;
+        }
+
+        public Criteria andUsernameNotIn(List<String> values) {
+            addCriterion("userName not in", values, "username");
+            return (Criteria) this;
+        }
+
+        public Criteria andUsernameBetween(String value1, String value2) {
+            addCriterion("userName between", value1, value2, "username");
+            return (Criteria) this;
+        }
+
+        public Criteria andUsernameNotBetween(String value1, String value2) {
+            addCriterion("userName not between", value1, value2, "username");
+            return (Criteria) this;
+        }
+
+        public Criteria andUserpasswordIsNull() {
+            addCriterion("userPassword is null");
+            return (Criteria) this;
+        }
+
+        public Criteria andUserpasswordIsNotNull() {
+            addCriterion("userPassword is not null");
+            return (Criteria) this;
+        }
+
+        public Criteria andUserpasswordEqualTo(String value) {
+            addCriterion("userPassword =", value, "userpassword");
+            return (Criteria) this;
+        }
+
+        public Criteria andUserpasswordNotEqualTo(String value) {
+            addCriterion("userPassword <>", value, "userpassword");
+            return (Criteria) this;
+        }
+
+        public Criteria andUserpasswordGreaterThan(String value) {
+            addCriterion("userPassword >", value, "userpassword");
+            return (Criteria) this;
+        }
+
+        public Criteria andUserpasswordGreaterThanOrEqualTo(String value) {
+            addCriterion("userPassword >=", value, "userpassword");
+            return (Criteria) this;
+        }
+
+        public Criteria andUserpasswordLessThan(String value) {
+            addCriterion("userPassword <", value, "userpassword");
+            return (Criteria) this;
+        }
+
+        public Criteria andUserpasswordLessThanOrEqualTo(String value) {
+            addCriterion("userPassword <=", value, "userpassword");
+            return (Criteria) this;
+        }
+
+        public Criteria andUserpasswordLike(String value) {
+            addCriterion("userPassword like", value, "userpassword");
+            return (Criteria) this;
+        }
+
+        public Criteria andUserpasswordNotLike(String value) {
+            addCriterion("userPassword not like", value, "userpassword");
+            return (Criteria) this;
+        }
+
+        public Criteria andUserpasswordIn(List<String> values) {
+            addCriterion("userPassword in", values, "userpassword");
+            return (Criteria) this;
+        }
+
+        public Criteria andUserpasswordNotIn(List<String> values) {
+            addCriterion("userPassword not in", values, "userpassword");
+            return (Criteria) this;
+        }
+
+        public Criteria andUserpasswordBetween(String value1, String value2) {
+            addCriterion("userPassword between", value1, value2, "userpassword");
+            return (Criteria) this;
+        }
+
+        public Criteria andUserpasswordNotBetween(String value1, String value2) {
+            addCriterion("userPassword not between", value1, value2, "userpassword");
+            return (Criteria) this;
+        }
+
+        public Criteria andGenderIsNull() {
+            addCriterion("gender is null");
+            return (Criteria) this;
+        }
+
+        public Criteria andGenderIsNotNull() {
+            addCriterion("gender is not null");
+            return (Criteria) this;
+        }
+
+        public Criteria andGenderEqualTo(Integer value) {
+            addCriterion("gender =", value, "gender");
+            return (Criteria) this;
+        }
+
+        public Criteria andGenderNotEqualTo(Integer value) {
+            addCriterion("gender <>", value, "gender");
+            return (Criteria) this;
+        }
+
+        public Criteria andGenderGreaterThan(Integer value) {
+            addCriterion("gender >", value, "gender");
+            return (Criteria) this;
+        }
+
+        public Criteria andGenderGreaterThanOrEqualTo(Integer value) {
+            addCriterion("gender >=", value, "gender");
+            return (Criteria) this;
+        }
+
+        public Criteria andGenderLessThan(Integer value) {
+            addCriterion("gender <", value, "gender");
+            return (Criteria) this;
+        }
+
+        public Criteria andGenderLessThanOrEqualTo(Integer value) {
+            addCriterion("gender <=", value, "gender");
+            return (Criteria) this;
+        }
+
+        public Criteria andGenderIn(List<Integer> values) {
+            addCriterion("gender in", values, "gender");
+            return (Criteria) this;
+        }
+
+        public Criteria andGenderNotIn(List<Integer> values) {
+            addCriterion("gender not in", values, "gender");
+            return (Criteria) this;
+        }
+
+        public Criteria andGenderBetween(Integer value1, Integer value2) {
+            addCriterion("gender between", value1, value2, "gender");
+            return (Criteria) this;
+        }
+
+        public Criteria andGenderNotBetween(Integer value1, Integer value2) {
+            addCriterion("gender not between", value1, value2, "gender");
+            return (Criteria) this;
+        }
+
+        public Criteria andBirthdayIsNull() {
+            addCriterion("birthday is null");
+            return (Criteria) this;
+        }
+
+        public Criteria andBirthdayIsNotNull() {
+            addCriterion("birthday is not null");
+            return (Criteria) this;
+        }
+
+        public Criteria andBirthdayEqualTo(Date value) {
+            addCriterionForJDBCDate("birthday =", value, "birthday");
+            return (Criteria) this;
+        }
+
+        public Criteria andBirthdayNotEqualTo(Date value) {
+            addCriterionForJDBCDate("birthday <>", value, "birthday");
+            return (Criteria) this;
+        }
+
+        public Criteria andBirthdayGreaterThan(Date value) {
+            addCriterionForJDBCDate("birthday >", value, "birthday");
+            return (Criteria) this;
+        }
+
+        public Criteria andBirthdayGreaterThanOrEqualTo(Date value) {
+            addCriterionForJDBCDate("birthday >=", value, "birthday");
+            return (Criteria) this;
+        }
+
+        public Criteria andBirthdayLessThan(Date value) {
+            addCriterionForJDBCDate("birthday <", value, "birthday");
+            return (Criteria) this;
+        }
+
+        public Criteria andBirthdayLessThanOrEqualTo(Date value) {
+            addCriterionForJDBCDate("birthday <=", value, "birthday");
+            return (Criteria) this;
+        }
+
+        public Criteria andBirthdayIn(List<Date> values) {
+            addCriterionForJDBCDate("birthday in", values, "birthday");
+            return (Criteria) this;
+        }
+
+        public Criteria andBirthdayNotIn(List<Date> values) {
+            addCriterionForJDBCDate("birthday not in", values, "birthday");
+            return (Criteria) this;
+        }
+
+        public Criteria andBirthdayBetween(Date value1, Date value2) {
+            addCriterionForJDBCDate("birthday between", value1, value2, "birthday");
+            return (Criteria) this;
+        }
+
+        public Criteria andBirthdayNotBetween(Date value1, Date value2) {
+            addCriterionForJDBCDate("birthday not between", value1, value2, "birthday");
+            return (Criteria) this;
+        }
+
+        public Criteria andPhoneIsNull() {
+            addCriterion("phone is null");
+            return (Criteria) this;
+        }
+
+        public Criteria andPhoneIsNotNull() {
+            addCriterion("phone is not null");
+            return (Criteria) this;
+        }
+
+        public Criteria andPhoneEqualTo(String value) {
+            addCriterion("phone =", value, "phone");
+            return (Criteria) this;
+        }
+
+        public Criteria andPhoneNotEqualTo(String value) {
+            addCriterion("phone <>", value, "phone");
+            return (Criteria) this;
+        }
+
+        public Criteria andPhoneGreaterThan(String value) {
+            addCriterion("phone >", value, "phone");
+            return (Criteria) this;
+        }
+
+        public Criteria andPhoneGreaterThanOrEqualTo(String value) {
+            addCriterion("phone >=", value, "phone");
+            return (Criteria) this;
+        }
+
+        public Criteria andPhoneLessThan(String value) {
+            addCriterion("phone <", value, "phone");
+            return (Criteria) this;
+        }
+
+        public Criteria andPhoneLessThanOrEqualTo(String value) {
+            addCriterion("phone <=", value, "phone");
+            return (Criteria) this;
+        }
+
+        public Criteria andPhoneLike(String value) {
+            addCriterion("phone like", value, "phone");
+            return (Criteria) this;
+        }
+
+        public Criteria andPhoneNotLike(String value) {
+            addCriterion("phone not like", value, "phone");
+            return (Criteria) this;
+        }
+
+        public Criteria andPhoneIn(List<String> values) {
+            addCriterion("phone in", values, "phone");
+            return (Criteria) this;
+        }
+
+        public Criteria andPhoneNotIn(List<String> values) {
+            addCriterion("phone not in", values, "phone");
+            return (Criteria) this;
+        }
+
+        public Criteria andPhoneBetween(String value1, String value2) {
+            addCriterion("phone between", value1, value2, "phone");
+            return (Criteria) this;
+        }
+
+        public Criteria andPhoneNotBetween(String value1, String value2) {
+            addCriterion("phone not between", value1, value2, "phone");
+            return (Criteria) this;
+        }
+
+        public Criteria andAddressIsNull() {
+            addCriterion("address is null");
+            return (Criteria) this;
+        }
+
+        public Criteria andAddressIsNotNull() {
+            addCriterion("address is not null");
+            return (Criteria) this;
+        }
+
+        public Criteria andAddressEqualTo(String value) {
+            addCriterion("address =", value, "address");
+            return (Criteria) this;
+        }
+
+        public Criteria andAddressNotEqualTo(String value) {
+            addCriterion("address <>", value, "address");
+            return (Criteria) this;
+        }
+
+        public Criteria andAddressGreaterThan(String value) {
+            addCriterion("address >", value, "address");
+            return (Criteria) this;
+        }
+
+        public Criteria andAddressGreaterThanOrEqualTo(String value) {
+            addCriterion("address >=", value, "address");
+            return (Criteria) this;
+        }
+
+        public Criteria andAddressLessThan(String value) {
+            addCriterion("address <", value, "address");
+            return (Criteria) this;
+        }
+
+        public Criteria andAddressLessThanOrEqualTo(String value) {
+            addCriterion("address <=", value, "address");
+            return (Criteria) this;
+        }
+
+        public Criteria andAddressLike(String value) {
+            addCriterion("address like", value, "address");
+            return (Criteria) this;
+        }
+
+        public Criteria andAddressNotLike(String value) {
+            addCriterion("address not like", value, "address");
+            return (Criteria) this;
+        }
+
+        public Criteria andAddressIn(List<String> values) {
+            addCriterion("address in", values, "address");
+            return (Criteria) this;
+        }
+
+        public Criteria andAddressNotIn(List<String> values) {
+            addCriterion("address not in", values, "address");
+            return (Criteria) this;
+        }
+
+        public Criteria andAddressBetween(String value1, String value2) {
+            addCriterion("address between", value1, value2, "address");
+            return (Criteria) this;
+        }
+
+        public Criteria andAddressNotBetween(String value1, String value2) {
+            addCriterion("address not between", value1, value2, "address");
+            return (Criteria) this;
+        }
+
+        public Criteria andUserroleIsNull() {
+            addCriterion("userRole is null");
+            return (Criteria) this;
+        }
+
+        public Criteria andUserroleIsNotNull() {
+            addCriterion("userRole is not null");
+            return (Criteria) this;
+        }
+
+        public Criteria andUserroleEqualTo(Integer value) {
+            addCriterion("userRole =", value, "userrole");
+            return (Criteria) this;
+        }
+
+        public Criteria andUserroleNotEqualTo(Integer value) {
+            addCriterion("userRole <>", value, "userrole");
+            return (Criteria) this;
+        }
+
+        public Criteria andUserroleGreaterThan(Integer value) {
+            addCriterion("userRole >", value, "userrole");
+            return (Criteria) this;
+        }
+
+        public Criteria andUserroleGreaterThanOrEqualTo(Integer value) {
+            addCriterion("userRole >=", value, "userrole");
+            return (Criteria) this;
+        }
+
+        public Criteria andUserroleLessThan(Integer value) {
+            addCriterion("userRole <", value, "userrole");
+            return (Criteria) this;
+        }
+
+        public Criteria andUserroleLessThanOrEqualTo(Integer value) {
+            addCriterion("userRole <=", value, "userrole");
+            return (Criteria) this;
+        }
+
+        public Criteria andUserroleIn(List<Integer> values) {
+            addCriterion("userRole in", values, "userrole");
+            return (Criteria) this;
+        }
+
+        public Criteria andUserroleNotIn(List<Integer> values) {
+            addCriterion("userRole not in", values, "userrole");
+            return (Criteria) this;
+        }
+
+        public Criteria andUserroleBetween(Integer value1, Integer value2) {
+            addCriterion("userRole between", value1, value2, "userrole");
+            return (Criteria) this;
+        }
+
+        public Criteria andUserroleNotBetween(Integer value1, Integer value2) {
+            addCriterion("userRole not between", value1, value2, "userrole");
+            return (Criteria) this;
+        }
+
+        public Criteria andCreatedbyIsNull() {
+            addCriterion("createdBy is null");
+            return (Criteria) this;
+        }
+
+        public Criteria andCreatedbyIsNotNull() {
+            addCriterion("createdBy is not null");
+            return (Criteria) this;
+        }
+
+        public Criteria andCreatedbyEqualTo(Integer value) {
+            addCriterion("createdBy =", value, "createdby");
+            return (Criteria) this;
+        }
+
+        public Criteria andCreatedbyNotEqualTo(Integer value) {
+            addCriterion("createdBy <>", value, "createdby");
+            return (Criteria) this;
+        }
+
+        public Criteria andCreatedbyGreaterThan(Integer value) {
+            addCriterion("createdBy >", value, "createdby");
+            return (Criteria) this;
+        }
+
+        public Criteria andCreatedbyGreaterThanOrEqualTo(Integer value) {
+            addCriterion("createdBy >=", value, "createdby");
+            return (Criteria) this;
+        }
+
+        public Criteria andCreatedbyLessThan(Integer value) {
+            addCriterion("createdBy <", value, "createdby");
+            return (Criteria) this;
+        }
+
+        public Criteria andCreatedbyLessThanOrEqualTo(Integer value) {
+            addCriterion("createdBy <=", value, "createdby");
+            return (Criteria) this;
+        }
+
+        public Criteria andCreatedbyIn(List<Integer> values) {
+            addCriterion("createdBy in", values, "createdby");
+            return (Criteria) this;
+        }
+
+        public Criteria andCreatedbyNotIn(List<Integer> values) {
+            addCriterion("createdBy not in", values, "createdby");
+            return (Criteria) this;
+        }
+
+        public Criteria andCreatedbyBetween(Integer value1, Integer value2) {
+            addCriterion("createdBy between", value1, value2, "createdby");
+            return (Criteria) this;
+        }
+
+        public Criteria andCreatedbyNotBetween(Integer value1, Integer value2) {
+            addCriterion("createdBy not between", value1, value2, "createdby");
+            return (Criteria) this;
+        }
+
+        public Criteria andCreationdateIsNull() {
+            addCriterion("creationDate is null");
+            return (Criteria) this;
+        }
+
+        public Criteria andCreationdateIsNotNull() {
+            addCriterion("creationDate is not null");
+            return (Criteria) this;
+        }
+
+        public Criteria andCreationdateEqualTo(Date value) {
+            addCriterion("creationDate =", value, "creationdate");
+            return (Criteria) this;
+        }
+
+        public Criteria andCreationdateNotEqualTo(Date value) {
+            addCriterion("creationDate <>", value, "creationdate");
+            return (Criteria) this;
+        }
+
+        public Criteria andCreationdateGreaterThan(Date value) {
+            addCriterion("creationDate >", value, "creationdate");
+            return (Criteria) this;
+        }
+
+        public Criteria andCreationdateGreaterThanOrEqualTo(Date value) {
+            addCriterion("creationDate >=", value, "creationdate");
+            return (Criteria) this;
+        }
+
+        public Criteria andCreationdateLessThan(Date value) {
+            addCriterion("creationDate <", value, "creationdate");
+            return (Criteria) this;
+        }
+
+        public Criteria andCreationdateLessThanOrEqualTo(Date value) {
+            addCriterion("creationDate <=", value, "creationdate");
+            return (Criteria) this;
+        }
+
+        public Criteria andCreationdateIn(List<Date> values) {
+            addCriterion("creationDate in", values, "creationdate");
+            return (Criteria) this;
+        }
+
+        public Criteria andCreationdateNotIn(List<Date> values) {
+            addCriterion("creationDate not in", values, "creationdate");
+            return (Criteria) this;
+        }
+
+        public Criteria andCreationdateBetween(Date value1, Date value2) {
+            addCriterion("creationDate between", value1, value2, "creationdate");
+            return (Criteria) this;
+        }
+
+        public Criteria andCreationdateNotBetween(Date value1, Date value2) {
+            addCriterion("creationDate not between", value1, value2, "creationdate");
+            return (Criteria) this;
+        }
+
+        public Criteria andModifybyIsNull() {
+            addCriterion("modifyBy is null");
+            return (Criteria) this;
+        }
+
+        public Criteria andModifybyIsNotNull() {
+            addCriterion("modifyBy is not null");
+            return (Criteria) this;
+        }
+
+        public Criteria andModifybyEqualTo(Integer value) {
+            addCriterion("modifyBy =", value, "modifyby");
+            return (Criteria) this;
+        }
+
+        public Criteria andModifybyNotEqualTo(Integer value) {
+            addCriterion("modifyBy <>", value, "modifyby");
+            return (Criteria) this;
+        }
+
+        public Criteria andModifybyGreaterThan(Integer value) {
+            addCriterion("modifyBy >", value, "modifyby");
+            return (Criteria) this;
+        }
+
+        public Criteria andModifybyGreaterThanOrEqualTo(Integer value) {
+            addCriterion("modifyBy >=", value, "modifyby");
+            return (Criteria) this;
+        }
+
+        public Criteria andModifybyLessThan(Integer value) {
+            addCriterion("modifyBy <", value, "modifyby");
+            return (Criteria) this;
+        }
+
+        public Criteria andModifybyLessThanOrEqualTo(Integer value) {
+            addCriterion("modifyBy <=", value, "modifyby");
+            return (Criteria) this;
+        }
+
+        public Criteria andModifybyIn(List<Integer> values) {
+            addCriterion("modifyBy in", values, "modifyby");
+            return (Criteria) this;
+        }
+
+        public Criteria andModifybyNotIn(List<Integer> values) {
+            addCriterion("modifyBy not in", values, "modifyby");
+            return (Criteria) this;
+        }
+
+        public Criteria andModifybyBetween(Integer value1, Integer value2) {
+            addCriterion("modifyBy between", value1, value2, "modifyby");
+            return (Criteria) this;
+        }
+
+        public Criteria andModifybyNotBetween(Integer value1, Integer value2) {
+            addCriterion("modifyBy not between", value1, value2, "modifyby");
+            return (Criteria) this;
+        }
+
+        public Criteria andModifydateIsNull() {
+            addCriterion("modifyDate is null");
+            return (Criteria) this;
+        }
+
+        public Criteria andModifydateIsNotNull() {
+            addCriterion("modifyDate is not null");
+            return (Criteria) this;
+        }
+
+        public Criteria andModifydateEqualTo(Date value) {
+            addCriterion("modifyDate =", value, "modifydate");
+            return (Criteria) this;
+        }
+
+        public Criteria andModifydateNotEqualTo(Date value) {
+            addCriterion("modifyDate <>", value, "modifydate");
+            return (Criteria) this;
+        }
+
+        public Criteria andModifydateGreaterThan(Date value) {
+            addCriterion("modifyDate >", value, "modifydate");
+            return (Criteria) this;
+        }
+
+        public Criteria andModifydateGreaterThanOrEqualTo(Date value) {
+            addCriterion("modifyDate >=", value, "modifydate");
+            return (Criteria) this;
+        }
+
+        public Criteria andModifydateLessThan(Date value) {
+            addCriterion("modifyDate <", value, "modifydate");
+            return (Criteria) this;
+        }
+
+        public Criteria andModifydateLessThanOrEqualTo(Date value) {
+            addCriterion("modifyDate <=", value, "modifydate");
+            return (Criteria) this;
+        }
+
+        public Criteria andModifydateIn(List<Date> values) {
+            addCriterion("modifyDate in", values, "modifydate");
+            return (Criteria) this;
+        }
+
+        public Criteria andModifydateNotIn(List<Date> values) {
+            addCriterion("modifyDate not in", values, "modifydate");
+            return (Criteria) this;
+        }
+
+        public Criteria andModifydateBetween(Date value1, Date value2) {
+            addCriterion("modifyDate between", value1, value2, "modifydate");
+            return (Criteria) this;
+        }
+
+        public Criteria andModifydateNotBetween(Date value1, Date value2) {
+            addCriterion("modifyDate not between", value1, value2, "modifydate");
+            return (Criteria) this;
+        }
+    }
+
+    /**
+     * This class was generated by MyBatis Generator.
+     * This class corresponds to the database table smbms_user
+     *
+     * @mbggenerated do_not_delete_during_merge
+     */
+    public static class Criteria extends GeneratedCriteria {
+
+        protected Criteria() {
+            super();
+        }
+    }
+
+    /**
+     * This class was generated by MyBatis Generator.
+     * This class corresponds to the database table smbms_user
+     *
+     * @mbggenerated
+     */
+    public static class Criterion {
+        private String condition;
+
+        private Object value;
+
+        private Object secondValue;
+
+        private boolean noValue;
+
+        private boolean singleValue;
+
+        private boolean betweenValue;
+
+        private boolean listValue;
+
+        private String typeHandler;
+
+        public String getCondition() {
+            return condition;
+        }
+
+        public Object getValue() {
+            return value;
+        }
+
+        public Object getSecondValue() {
+            return secondValue;
+        }
+
+        public boolean isNoValue() {
+            return noValue;
+        }
+
+        public boolean isSingleValue() {
+            return singleValue;
+        }
+
+        public boolean isBetweenValue() {
+            return betweenValue;
+        }
+
+        public boolean isListValue() {
+            return listValue;
+        }
+
+        public String getTypeHandler() {
+            return typeHandler;
+        }
+
+        protected Criterion(String condition) {
+            super();
+            this.condition = condition;
+            this.typeHandler = null;
+            this.noValue = true;
+        }
+
+        protected Criterion(String condition, Object value, String typeHandler) {
+            super();
+            this.condition = condition;
+            this.value = value;
+            this.typeHandler = typeHandler;
+            if (value instanceof List<?>) {
+                this.listValue = true;
+            } else {
+                this.singleValue = true;
+            }
+        }
+
+        protected Criterion(String condition, Object value) {
+            this(condition, value, null);
+        }
+
+        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
+            super();
+            this.condition = condition;
+            this.value = value;
+            this.secondValue = secondValue;
+            this.typeHandler = typeHandler;
+            this.betweenValue = true;
+        }
+
+        protected Criterion(String condition, Object value, Object secondValue) {
+            this(condition, value, secondValue, null);
+        }
+    }
+}
\ No newline at end of file
Index: src/main/java/com/lpc/pojo/SmbmsBill.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/java/com/lpc/pojo/SmbmsBill.java	(date 1594541675469)
+++ src/main/java/com/lpc/pojo/SmbmsBill.java	(date 1594541675469)
@@ -0,0 +1,423 @@
+package com.lpc.pojo;
+
+import java.io.Serializable;
+import java.math.BigDecimal;
+import java.util.Date;
+
+public class SmbmsBill implements Serializable {
+    /**
+     * This field was generated by MyBatis Generator.
+     * This field corresponds to the database column smbms_bill.id
+     *
+     * @mbggenerated
+     */
+    private Long id;
+
+    /**
+     * This field was generated by MyBatis Generator.
+     * This field corresponds to the database column smbms_bill.billCode
+     *
+     * @mbggenerated
+     */
+    private String billcode;
+
+    /**
+     * This field was generated by MyBatis Generator.
+     * This field corresponds to the database column smbms_bill.productName
+     *
+     * @mbggenerated
+     */
+    private String productname;
+
+    /**
+     * This field was generated by MyBatis Generator.
+     * This field corresponds to the database column smbms_bill.productDesc
+     *
+     * @mbggenerated
+     */
+    private String productdesc;
+
+    /**
+     * This field was generated by MyBatis Generator.
+     * This field corresponds to the database column smbms_bill.productUnit
+     *
+     * @mbggenerated
+     */
+    private String productunit;
+
+    /**
+     * This field was generated by MyBatis Generator.
+     * This field corresponds to the database column smbms_bill.productCount
+     *
+     * @mbggenerated
+     */
+    private BigDecimal productcount;
+
+    /**
+     * This field was generated by MyBatis Generator.
+     * This field corresponds to the database column smbms_bill.totalPrice
+     *
+     * @mbggenerated
+     */
+    private BigDecimal totalprice;
+
+    /**
+     * This field was generated by MyBatis Generator.
+     * This field corresponds to the database column smbms_bill.isPayment
+     *
+     * @mbggenerated
+     */
+    private Integer ispayment;
+
+    /**
+     * This field was generated by MyBatis Generator.
+     * This field corresponds to the database column smbms_bill.createdBy
+     *
+     * @mbggenerated
+     */
+    private Long createdby;
+
+    /**
+     * This field was generated by MyBatis Generator.
+     * This field corresponds to the database column smbms_bill.creationDate
+     *
+     * @mbggenerated
+     */
+    private Date creationdate;
+
+    /**
+     * This field was generated by MyBatis Generator.
+     * This field corresponds to the database column smbms_bill.modifyBy
+     *
+     * @mbggenerated
+     */
+    private Long modifyby;
+
+    /**
+     * This field was generated by MyBatis Generator.
+     * This field corresponds to the database column smbms_bill.modifyDate
+     *
+     * @mbggenerated
+     */
+    private Date modifydate;
+
+    /**
+     * This field was generated by MyBatis Generator.
+     * This field corresponds to the database column smbms_bill.providerId
+     *
+     * @mbggenerated
+     */
+    private Long providerid;
+
+    /**
+     * This method was generated by MyBatis Generator.
+     * This method returns the value of the database column smbms_bill.id
+     *
+     * @return the value of smbms_bill.id
+     *
+     * @mbggenerated
+     */
+    public Long getId() {
+        return id;
+    }
+
+    /**
+     * This method was generated by MyBatis Generator.
+     * This method sets the value of the database column smbms_bill.id
+     *
+     * @param id the value for smbms_bill.id
+     *
+     * @mbggenerated
+     */
+    public void setId(Long id) {
+        this.id = id;
+    }
+
+    /**
+     * This method was generated by MyBatis Generator.
+     * This method returns the value of the database column smbms_bill.billCode
+     *
+     * @return the value of smbms_bill.billCode
+     *
+     * @mbggenerated
+     */
+    public String getBillcode() {
+        return billcode;
+    }
+
+    /**
+     * This method was generated by MyBatis Generator.
+     * This method sets the value of the database column smbms_bill.billCode
+     *
+     * @param billcode the value for smbms_bill.billCode
+     *
+     * @mbggenerated
+     */
+    public void setBillcode(String billcode) {
+        this.billcode = billcode == null ? null : billcode.trim();
+    }
+
+    /**
+     * This method was generated by MyBatis Generator.
+     * This method returns the value of the database column smbms_bill.productName
+     *
+     * @return the value of smbms_bill.productName
+     *
+     * @mbggenerated
+     */
+    public String getProductname() {
+        return productname;
+    }
+
+    /**
+     * This method was generated by MyBatis Generator.
+     * This method sets the value of the database column smbms_bill.productName
+     *
+     * @param productname the value for smbms_bill.productName
+     *
+     * @mbggenerated
+     */
+    public void setProductname(String productname) {
+        this.productname = productname == null ? null : productname.trim();
+    }
+
+    /**
+     * This method was generated by MyBatis Generator.
+     * This method returns the value of the database column smbms_bill.productDesc
+     *
+     * @return the value of smbms_bill.productDesc
+     *
+     * @mbggenerated
+     */
+    public String getProductdesc() {
+        return productdesc;
+    }
+
+    /**
+     * This method was generated by MyBatis Generator.
+     * This method sets the value of the database column smbms_bill.productDesc
+     *
+     * @param productdesc the value for smbms_bill.productDesc
+     *
+     * @mbggenerated
+     */
+    public void setProductdesc(String productdesc) {
+        this.productdesc = productdesc == null ? null : productdesc.trim();
+    }
+
+    /**
+     * This method was generated by MyBatis Generator.
+     * This method returns the value of the database column smbms_bill.productUnit
+     *
+     * @return the value of smbms_bill.productUnit
+     *
+     * @mbggenerated
+     */
+    public String getProductunit() {
+        return productunit;
+    }
+
+    /**
+     * This method was generated by MyBatis Generator.
+     * This method sets the value of the database column smbms_bill.productUnit
+     *
+     * @param productunit the value for smbms_bill.productUnit
+     *
+     * @mbggenerated
+     */
+    public void setProductunit(String productunit) {
+        this.productunit = productunit == null ? null : productunit.trim();
+    }
+
+    /**
+     * This method was generated by MyBatis Generator.
+     * This method returns the value of the database column smbms_bill.productCount
+     *
+     * @return the value of smbms_bill.productCount
+     *
+     * @mbggenerated
+     */
+    public BigDecimal getProductcount() {
+        return productcount;
+    }
+
+    /**
+     * This method was generated by MyBatis Generator.
+     * This method sets the value of the database column smbms_bill.productCount
+     *
+     * @param productcount the value for smbms_bill.productCount
+     *
+     * @mbggenerated
+     */
+    public void setProductcount(BigDecimal productcount) {
+        this.productcount = productcount;
+    }
+
+    /**
+     * This method was generated by MyBatis Generator.
+     * This method returns the value of the database column smbms_bill.totalPrice
+     *
+     * @return the value of smbms_bill.totalPrice
+     *
+     * @mbggenerated
+     */
+    public BigDecimal getTotalprice() {
+        return totalprice;
+    }
+
+    /**
+     * This method was generated by MyBatis Generator.
+     * This method sets the value of the database column smbms_bill.totalPrice
+     *
+     * @param totalprice the value for smbms_bill.totalPrice
+     *
+     * @mbggenerated
+     */
+    public void setTotalprice(BigDecimal totalprice) {
+        this.totalprice = totalprice;
+    }
+
+    /**
+     * This method was generated by MyBatis Generator.
+     * This method returns the value of the database column smbms_bill.isPayment
+     *
+     * @return the value of smbms_bill.isPayment
+     *
+     * @mbggenerated
+     */
+    public Integer getIspayment() {
+        return ispayment;
+    }
+
+    /**
+     * This method was generated by MyBatis Generator.
+     * This method sets the value of the database column smbms_bill.isPayment
+     *
+     * @param ispayment the value for smbms_bill.isPayment
+     *
+     * @mbggenerated
+     */
+    public void setIspayment(Integer ispayment) {
+        this.ispayment = ispayment;
+    }
+
+    /**
+     * This method was generated by MyBatis Generator.
+     * This method returns the value of the database column smbms_bill.createdBy
+     *
+     * @return the value of smbms_bill.createdBy
+     *
+     * @mbggenerated
+     */
+    public Long getCreatedby() {
+        return createdby;
+    }
+
+    /**
+     * This method was generated by MyBatis Generator.
+     * This method sets the value of the database column smbms_bill.createdBy
+     *
+     * @param createdby the value for smbms_bill.createdBy
+     *
+     * @mbggenerated
+     */
+    public void setCreatedby(Long createdby) {
+        this.createdby = createdby;
+    }
+
+    /**
+     * This method was generated by MyBatis Generator.
+     * This method returns the value of the database column smbms_bill.creationDate
+     *
+     * @return the value of smbms_bill.creationDate
+     *
+     * @mbggenerated
+     */
+    public Date getCreationdate() {
+        return creationdate;
+    }
+
+    /**
+     * This method was generated by MyBatis Generator.
+     * This method sets the value of the database column smbms_bill.creationDate
+     *
+     * @param creationdate the value for smbms_bill.creationDate
+     *
+     * @mbggenerated
+     */
+    public void setCreationdate(Date creationdate) {
+        this.creationdate = creationdate;
+    }
+
+    /**
+     * This method was generated by MyBatis Generator.
+     * This method returns the value of the database column smbms_bill.modifyBy
+     *
+     * @return the value of smbms_bill.modifyBy
+     *
+     * @mbggenerated
+     */
+    public Long getModifyby() {
+        return modifyby;
+    }
+
+    /**
+     * This method was generated by MyBatis Generator.
+     * This method sets the value of the database column smbms_bill.modifyBy
+     *
+     * @param modifyby the value for smbms_bill.modifyBy
+     *
+     * @mbggenerated
+     */
+    public void setModifyby(Long modifyby) {
+        this.modifyby = modifyby;
+    }
+
+    /**
+     * This method was generated by MyBatis Generator.
+     * This method returns the value of the database column smbms_bill.modifyDate
+     *
+     * @return the value of smbms_bill.modifyDate
+     *
+     * @mbggenerated
+     */
+    public Date getModifydate() {
+        return modifydate;
+    }
+
+    /**
+     * This method was generated by MyBatis Generator.
+     * This method sets the value of the database column smbms_bill.modifyDate
+     *
+     * @param modifydate the value for smbms_bill.modifyDate
+     *
+     * @mbggenerated
+     */
+    public void setModifydate(Date modifydate) {
+        this.modifydate = modifydate;
+    }
+
+    /**
+     * This method was generated by MyBatis Generator.
+     * This method returns the value of the database column smbms_bill.providerId
+     *
+     * @return the value of smbms_bill.providerId
+     *
+     * @mbggenerated
+     */
+    public Long getProviderid() {
+        return providerid;
+    }
+
+    /**
+     * This method was generated by MyBatis Generator.
+     * This method sets the value of the database column smbms_bill.providerId
+     *
+     * @param providerid the value for smbms_bill.providerId
+     *
+     * @mbggenerated
+     */
+    public void setProviderid(Long providerid) {
+        this.providerid = providerid;
+    }
+}
\ No newline at end of file
Index: .idea/compiler.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- .idea/compiler.xml	(date 1594544797427)
+++ .idea/compiler.xml	(date 1594544797427)
@@ -0,0 +1,13 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project version="4">
+  <component name="CompilerConfiguration">
+    <annotationProcessing>
+      <profile name="Maven default annotation processors profile" enabled="true">
+        <sourceOutputDir name="target/generated-sources/annotations" />
+        <sourceTestOutputDir name="target/generated-test-sources/test-annotations" />
+        <outputRelativeToContentRoot value="true" />
+        <module name="SuperMarketMaven" />
+      </profile>
+    </annotationProcessing>
+  </component>
+</project>
\ No newline at end of file
Index: src/main/java/com/lpc/pojo/SmbmsAddressExample.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/java/com/lpc/pojo/SmbmsAddressExample.java	(date 1594541675460)
+++ src/main/java/com/lpc/pojo/SmbmsAddressExample.java	(date 1594541675460)
@@ -0,0 +1,944 @@
+package com.lpc.pojo;
+
+import java.io.Serializable;
+import java.util.ArrayList;
+import java.util.Date;
+import java.util.List;
+
+public class SmbmsAddressExample implements Serializable {
+    /**
+     * This field was generated by MyBatis Generator.
+     * This field corresponds to the database table smbms_address
+     *
+     * @mbggenerated
+     */
+    protected String orderByClause;
+
+    /**
+     * This field was generated by MyBatis Generator.
+     * This field corresponds to the database table smbms_address
+     *
+     * @mbggenerated
+     */
+    protected boolean distinct;
+
+    /**
+     * This field was generated by MyBatis Generator.
+     * This field corresponds to the database table smbms_address
+     *
+     * @mbggenerated
+     */
+    protected List<Criteria> oredCriteria;
+
+    /**
+     * This method was generated by MyBatis Generator.
+     * This method corresponds to the database table smbms_address
+     *
+     * @mbggenerated
+     */
+    public SmbmsAddressExample() {
+        oredCriteria = new ArrayList<Criteria>();
+    }
+
+    /**
+     * This method was generated by MyBatis Generator.
+     * This method corresponds to the database table smbms_address
+     *
+     * @mbggenerated
+     */
+    public void setOrderByClause(String orderByClause) {
+        this.orderByClause = orderByClause;
+    }
+
+    /**
+     * This method was generated by MyBatis Generator.
+     * This method corresponds to the database table smbms_address
+     *
+     * @mbggenerated
+     */
+    public String getOrderByClause() {
+        return orderByClause;
+    }
+
+    /**
+     * This method was generated by MyBatis Generator.
+     * This method corresponds to the database table smbms_address
+     *
+     * @mbggenerated
+     */
+    public void setDistinct(boolean distinct) {
+        this.distinct = distinct;
+    }
+
+    /**
+     * This method was generated by MyBatis Generator.
+     * This method corresponds to the database table smbms_address
+     *
+     * @mbggenerated
+     */
+    public boolean isDistinct() {
+        return distinct;
+    }
+
+    /**
+     * This method was generated by MyBatis Generator.
+     * This method corresponds to the database table smbms_address
+     *
+     * @mbggenerated
+     */
+    public List<Criteria> getOredCriteria() {
+        return oredCriteria;
+    }
+
+    /**
+     * This method was generated by MyBatis Generator.
+     * This method corresponds to the database table smbms_address
+     *
+     * @mbggenerated
+     */
+    public void or(Criteria criteria) {
+        oredCriteria.add(criteria);
+    }
+
+    /**
+     * This method was generated by MyBatis Generator.
+     * This method corresponds to the database table smbms_address
+     *
+     * @mbggenerated
+     */
+    public Criteria or() {
+        Criteria criteria = createCriteriaInternal();
+        oredCriteria.add(criteria);
+        return criteria;
+    }
+
+    /**
+     * This method was generated by MyBatis Generator.
+     * This method corresponds to the database table smbms_address
+     *
+     * @mbggenerated
+     */
+    public Criteria createCriteria() {
+        Criteria criteria = createCriteriaInternal();
+        if (oredCriteria.size() == 0) {
+            oredCriteria.add(criteria);
+        }
+        return criteria;
+    }
+
+    /**
+     * This method was generated by MyBatis Generator.
+     * This method corresponds to the database table smbms_address
+     *
+     * @mbggenerated
+     */
+    protected Criteria createCriteriaInternal() {
+        Criteria criteria = new Criteria();
+        return criteria;
+    }
+
+    /**
+     * This method was generated by MyBatis Generator.
+     * This method corresponds to the database table smbms_address
+     *
+     * @mbggenerated
+     */
+    public void clear() {
+        oredCriteria.clear();
+        orderByClause = null;
+        distinct = false;
+    }
+
+    /**
+     * This class was generated by MyBatis Generator.
+     * This class corresponds to the database table smbms_address
+     *
+     * @mbggenerated
+     */
+    protected abstract static class GeneratedCriteria {
+        protected List<Criterion> criteria;
+
+        protected GeneratedCriteria() {
+            super();
+            criteria = new ArrayList<Criterion>();
+        }
+
+        public boolean isValid() {
+            return criteria.size() > 0;
+        }
+
+        public List<Criterion> getAllCriteria() {
+            return criteria;
+        }
+
+        public List<Criterion> getCriteria() {
+            return criteria;
+        }
+
+        protected void addCriterion(String condition) {
+            if (condition == null) {
+                throw new RuntimeException("Value for condition cannot be null");
+            }
+            criteria.add(new Criterion(condition));
+        }
+
+        protected void addCriterion(String condition, Object value, String property) {
+            if (value == null) {
+                throw new RuntimeException("Value for " + property + " cannot be null");
+            }
+            criteria.add(new Criterion(condition, value));
+        }
+
+        protected void addCriterion(String condition, Object value1, Object value2, String property) {
+            if (value1 == null || value2 == null) {
+                throw new RuntimeException("Between values for " + property + " cannot be null");
+            }
+            criteria.add(new Criterion(condition, value1, value2));
+        }
+
+        public Criteria andIdIsNull() {
+            addCriterion("id is null");
+            return (Criteria) this;
+        }
+
+        public Criteria andIdIsNotNull() {
+            addCriterion("id is not null");
+            return (Criteria) this;
+        }
+
+        public Criteria andIdEqualTo(Long value) {
+            addCriterion("id =", value, "id");
+            return (Criteria) this;
+        }
+
+        public Criteria andIdNotEqualTo(Long value) {
+            addCriterion("id <>", value, "id");
+            return (Criteria) this;
+        }
+
+        public Criteria andIdGreaterThan(Long value) {
+            addCriterion("id >", value, "id");
+            return (Criteria) this;
+        }
+
+        public Criteria andIdGreaterThanOrEqualTo(Long value) {
+            addCriterion("id >=", value, "id");
+            return (Criteria) this;
+        }
+
+        public Criteria andIdLessThan(Long value) {
+            addCriterion("id <", value, "id");
+            return (Criteria) this;
+        }
+
+        public Criteria andIdLessThanOrEqualTo(Long value) {
+            addCriterion("id <=", value, "id");
+            return (Criteria) this;
+        }
+
+        public Criteria andIdIn(List<Long> values) {
+            addCriterion("id in", values, "id");
+            return (Criteria) this;
+        }
+
+        public Criteria andIdNotIn(List<Long> values) {
+            addCriterion("id not in", values, "id");
+            return (Criteria) this;
+        }
+
+        public Criteria andIdBetween(Long value1, Long value2) {
+            addCriterion("id between", value1, value2, "id");
+            return (Criteria) this;
+        }
+
+        public Criteria andIdNotBetween(Long value1, Long value2) {
+            addCriterion("id not between", value1, value2, "id");
+            return (Criteria) this;
+        }
+
+        public Criteria andContactIsNull() {
+            addCriterion("contact is null");
+            return (Criteria) this;
+        }
+
+        public Criteria andContactIsNotNull() {
+            addCriterion("contact is not null");
+            return (Criteria) this;
+        }
+
+        public Criteria andContactEqualTo(String value) {
+            addCriterion("contact =", value, "contact");
+            return (Criteria) this;
+        }
+
+        public Criteria andContactNotEqualTo(String value) {
+            addCriterion("contact <>", value, "contact");
+            return (Criteria) this;
+        }
+
+        public Criteria andContactGreaterThan(String value) {
+            addCriterion("contact >", value, "contact");
+            return (Criteria) this;
+        }
+
+        public Criteria andContactGreaterThanOrEqualTo(String value) {
+            addCriterion("contact >=", value, "contact");
+            return (Criteria) this;
+        }
+
+        public Criteria andContactLessThan(String value) {
+            addCriterion("contact <", value, "contact");
+            return (Criteria) this;
+        }
+
+        public Criteria andContactLessThanOrEqualTo(String value) {
+            addCriterion("contact <=", value, "contact");
+            return (Criteria) this;
+        }
+
+        public Criteria andContactLike(String value) {
+            addCriterion("contact like", value, "contact");
+            return (Criteria) this;
+        }
+
+        public Criteria andContactNotLike(String value) {
+            addCriterion("contact not like", value, "contact");
+            return (Criteria) this;
+        }
+
+        public Criteria andContactIn(List<String> values) {
+            addCriterion("contact in", values, "contact");
+            return (Criteria) this;
+        }
+
+        public Criteria andContactNotIn(List<String> values) {
+            addCriterion("contact not in", values, "contact");
+            return (Criteria) this;
+        }
+
+        public Criteria andContactBetween(String value1, String value2) {
+            addCriterion("contact between", value1, value2, "contact");
+            return (Criteria) this;
+        }
+
+        public Criteria andContactNotBetween(String value1, String value2) {
+            addCriterion("contact not between", value1, value2, "contact");
+            return (Criteria) this;
+        }
+
+        public Criteria andAddressdescIsNull() {
+            addCriterion("addressDesc is null");
+            return (Criteria) this;
+        }
+
+        public Criteria andAddressdescIsNotNull() {
+            addCriterion("addressDesc is not null");
+            return (Criteria) this;
+        }
+
+        public Criteria andAddressdescEqualTo(String value) {
+            addCriterion("addressDesc =", value, "addressdesc");
+            return (Criteria) this;
+        }
+
+        public Criteria andAddressdescNotEqualTo(String value) {
+            addCriterion("addressDesc <>", value, "addressdesc");
+            return (Criteria) this;
+        }
+
+        public Criteria andAddressdescGreaterThan(String value) {
+            addCriterion("addressDesc >", value, "addressdesc");
+            return (Criteria) this;
+        }
+
+        public Criteria andAddressdescGreaterThanOrEqualTo(String value) {
+            addCriterion("addressDesc >=", value, "addressdesc");
+            return (Criteria) this;
+        }
+
+        public Criteria andAddressdescLessThan(String value) {
+            addCriterion("addressDesc <", value, "addressdesc");
+            return (Criteria) this;
+        }
+
+        public Criteria andAddressdescLessThanOrEqualTo(String value) {
+            addCriterion("addressDesc <=", value, "addressdesc");
+            return (Criteria) this;
+        }
+
+        public Criteria andAddressdescLike(String value) {
+            addCriterion("addressDesc like", value, "addressdesc");
+            return (Criteria) this;
+        }
+
+        public Criteria andAddressdescNotLike(String value) {
+            addCriterion("addressDesc not like", value, "addressdesc");
+            return (Criteria) this;
+        }
+
+        public Criteria andAddressdescIn(List<String> values) {
+            addCriterion("addressDesc in", values, "addressdesc");
+            return (Criteria) this;
+        }
+
+        public Criteria andAddressdescNotIn(List<String> values) {
+            addCriterion("addressDesc not in", values, "addressdesc");
+            return (Criteria) this;
+        }
+
+        public Criteria andAddressdescBetween(String value1, String value2) {
+            addCriterion("addressDesc between", value1, value2, "addressdesc");
+            return (Criteria) this;
+        }
+
+        public Criteria andAddressdescNotBetween(String value1, String value2) {
+            addCriterion("addressDesc not between", value1, value2, "addressdesc");
+            return (Criteria) this;
+        }
+
+        public Criteria andPostcodeIsNull() {
+            addCriterion("postCode is null");
+            return (Criteria) this;
+        }
+
+        public Criteria andPostcodeIsNotNull() {
+            addCriterion("postCode is not null");
+            return (Criteria) this;
+        }
+
+        public Criteria andPostcodeEqualTo(String value) {
+            addCriterion("postCode =", value, "postcode");
+            return (Criteria) this;
+        }
+
+        public Criteria andPostcodeNotEqualTo(String value) {
+            addCriterion("postCode <>", value, "postcode");
+            return (Criteria) this;
+        }
+
+        public Criteria andPostcodeGreaterThan(String value) {
+            addCriterion("postCode >", value, "postcode");
+            return (Criteria) this;
+        }
+
+        public Criteria andPostcodeGreaterThanOrEqualTo(String value) {
+            addCriterion("postCode >=", value, "postcode");
+            return (Criteria) this;
+        }
+
+        public Criteria andPostcodeLessThan(String value) {
+            addCriterion("postCode <", value, "postcode");
+            return (Criteria) this;
+        }
+
+        public Criteria andPostcodeLessThanOrEqualTo(String value) {
+            addCriterion("postCode <=", value, "postcode");
+            return (Criteria) this;
+        }
+
+        public Criteria andPostcodeLike(String value) {
+            addCriterion("postCode like", value, "postcode");
+            return (Criteria) this;
+        }
+
+        public Criteria andPostcodeNotLike(String value) {
+            addCriterion("postCode not like", value, "postcode");
+            return (Criteria) this;
+        }
+
+        public Criteria andPostcodeIn(List<String> values) {
+            addCriterion("postCode in", values, "postcode");
+            return (Criteria) this;
+        }
+
+        public Criteria andPostcodeNotIn(List<String> values) {
+            addCriterion("postCode not in", values, "postcode");
+            return (Criteria) this;
+        }
+
+        public Criteria andPostcodeBetween(String value1, String value2) {
+            addCriterion("postCode between", value1, value2, "postcode");
+            return (Criteria) this;
+        }
+
+        public Criteria andPostcodeNotBetween(String value1, String value2) {
+            addCriterion("postCode not between", value1, value2, "postcode");
+            return (Criteria) this;
+        }
+
+        public Criteria andTelIsNull() {
+            addCriterion("tel is null");
+            return (Criteria) this;
+        }
+
+        public Criteria andTelIsNotNull() {
+            addCriterion("tel is not null");
+            return (Criteria) this;
+        }
+
+        public Criteria andTelEqualTo(String value) {
+            addCriterion("tel =", value, "tel");
+            return (Criteria) this;
+        }
+
+        public Criteria andTelNotEqualTo(String value) {
+            addCriterion("tel <>", value, "tel");
+            return (Criteria) this;
+        }
+
+        public Criteria andTelGreaterThan(String value) {
+            addCriterion("tel >", value, "tel");
+            return (Criteria) this;
+        }
+
+        public Criteria andTelGreaterThanOrEqualTo(String value) {
+            addCriterion("tel >=", value, "tel");
+            return (Criteria) this;
+        }
+
+        public Criteria andTelLessThan(String value) {
+            addCriterion("tel <", value, "tel");
+            return (Criteria) this;
+        }
+
+        public Criteria andTelLessThanOrEqualTo(String value) {
+            addCriterion("tel <=", value, "tel");
+            return (Criteria) this;
+        }
+
+        public Criteria andTelLike(String value) {
+            addCriterion("tel like", value, "tel");
+            return (Criteria) this;
+        }
+
+        public Criteria andTelNotLike(String value) {
+            addCriterion("tel not like", value, "tel");
+            return (Criteria) this;
+        }
+
+        public Criteria andTelIn(List<String> values) {
+            addCriterion("tel in", values, "tel");
+            return (Criteria) this;
+        }
+
+        public Criteria andTelNotIn(List<String> values) {
+            addCriterion("tel not in", values, "tel");
+            return (Criteria) this;
+        }
+
+        public Criteria andTelBetween(String value1, String value2) {
+            addCriterion("tel between", value1, value2, "tel");
+            return (Criteria) this;
+        }
+
+        public Criteria andTelNotBetween(String value1, String value2) {
+            addCriterion("tel not between", value1, value2, "tel");
+            return (Criteria) this;
+        }
+
+        public Criteria andCreatedbyIsNull() {
+            addCriterion("createdBy is null");
+            return (Criteria) this;
+        }
+
+        public Criteria andCreatedbyIsNotNull() {
+            addCriterion("createdBy is not null");
+            return (Criteria) this;
+        }
+
+        public Criteria andCreatedbyEqualTo(Long value) {
+            addCriterion("createdBy =", value, "createdby");
+            return (Criteria) this;
+        }
+
+        public Criteria andCreatedbyNotEqualTo(Long value) {
+            addCriterion("createdBy <>", value, "createdby");
+            return (Criteria) this;
+        }
+
+        public Criteria andCreatedbyGreaterThan(Long value) {
+            addCriterion("createdBy >", value, "createdby");
+            return (Criteria) this;
+        }
+
+        public Criteria andCreatedbyGreaterThanOrEqualTo(Long value) {
+            addCriterion("createdBy >=", value, "createdby");
+            return (Criteria) this;
+        }
+
+        public Criteria andCreatedbyLessThan(Long value) {
+            addCriterion("createdBy <", value, "createdby");
+            return (Criteria) this;
+        }
+
+        public Criteria andCreatedbyLessThanOrEqualTo(Long value) {
+            addCriterion("createdBy <=", value, "createdby");
+            return (Criteria) this;
+        }
+
+        public Criteria andCreatedbyIn(List<Long> values) {
+            addCriterion("createdBy in", values, "createdby");
+            return (Criteria) this;
+        }
+
+        public Criteria andCreatedbyNotIn(List<Long> values) {
+            addCriterion("createdBy not in", values, "createdby");
+            return (Criteria) this;
+        }
+
+        public Criteria andCreatedbyBetween(Long value1, Long value2) {
+            addCriterion("createdBy between", value1, value2, "createdby");
+            return (Criteria) this;
+        }
+
+        public Criteria andCreatedbyNotBetween(Long value1, Long value2) {
+            addCriterion("createdBy not between", value1, value2, "createdby");
+            return (Criteria) this;
+        }
+
+        public Criteria andCreationdateIsNull() {
+            addCriterion("creationDate is null");
+            return (Criteria) this;
+        }
+
+        public Criteria andCreationdateIsNotNull() {
+            addCriterion("creationDate is not null");
+            return (Criteria) this;
+        }
+
+        public Criteria andCreationdateEqualTo(Date value) {
+            addCriterion("creationDate =", value, "creationdate");
+            return (Criteria) this;
+        }
+
+        public Criteria andCreationdateNotEqualTo(Date value) {
+            addCriterion("creationDate <>", value, "creationdate");
+            return (Criteria) this;
+        }
+
+        public Criteria andCreationdateGreaterThan(Date value) {
+            addCriterion("creationDate >", value, "creationdate");
+            return (Criteria) this;
+        }
+
+        public Criteria andCreationdateGreaterThanOrEqualTo(Date value) {
+            addCriterion("creationDate >=", value, "creationdate");
+            return (Criteria) this;
+        }
+
+        public Criteria andCreationdateLessThan(Date value) {
+            addCriterion("creationDate <", value, "creationdate");
+            return (Criteria) this;
+        }
+
+        public Criteria andCreationdateLessThanOrEqualTo(Date value) {
+            addCriterion("creationDate <=", value, "creationdate");
+            return (Criteria) this;
+        }
+
+        public Criteria andCreationdateIn(List<Date> values) {
+            addCriterion("creationDate in", values, "creationdate");
+            return (Criteria) this;
+        }
+
+        public Criteria andCreationdateNotIn(List<Date> values) {
+            addCriterion("creationDate not in", values, "creationdate");
+            return (Criteria) this;
+        }
+
+        public Criteria andCreationdateBetween(Date value1, Date value2) {
+            addCriterion("creationDate between", value1, value2, "creationdate");
+            return (Criteria) this;
+        }
+
+        public Criteria andCreationdateNotBetween(Date value1, Date value2) {
+            addCriterion("creationDate not between", value1, value2, "creationdate");
+            return (Criteria) this;
+        }
+
+        public Criteria andModifybyIsNull() {
+            addCriterion("modifyBy is null");
+            return (Criteria) this;
+        }
+
+        public Criteria andModifybyIsNotNull() {
+            addCriterion("modifyBy is not null");
+            return (Criteria) this;
+        }
+
+        public Criteria andModifybyEqualTo(Long value) {
+            addCriterion("modifyBy =", value, "modifyby");
+            return (Criteria) this;
+        }
+
+        public Criteria andModifybyNotEqualTo(Long value) {
+            addCriterion("modifyBy <>", value, "modifyby");
+            return (Criteria) this;
+        }
+
+        public Criteria andModifybyGreaterThan(Long value) {
+            addCriterion("modifyBy >", value, "modifyby");
+            return (Criteria) this;
+        }
+
+        public Criteria andModifybyGreaterThanOrEqualTo(Long value) {
+            addCriterion("modifyBy >=", value, "modifyby");
+            return (Criteria) this;
+        }
+
+        public Criteria andModifybyLessThan(Long value) {
+            addCriterion("modifyBy <", value, "modifyby");
+            return (Criteria) this;
+        }
+
+        public Criteria andModifybyLessThanOrEqualTo(Long value) {
+            addCriterion("modifyBy <=", value, "modifyby");
+            return (Criteria) this;
+        }
+
+        public Criteria andModifybyIn(List<Long> values) {
+            addCriterion("modifyBy in", values, "modifyby");
+            return (Criteria) this;
+        }
+
+        public Criteria andModifybyNotIn(List<Long> values) {
+            addCriterion("modifyBy not in", values, "modifyby");
+            return (Criteria) this;
+        }
+
+        public Criteria andModifybyBetween(Long value1, Long value2) {
+            addCriterion("modifyBy between", value1, value2, "modifyby");
+            return (Criteria) this;
+        }
+
+        public Criteria andModifybyNotBetween(Long value1, Long value2) {
+            addCriterion("modifyBy not between", value1, value2, "modifyby");
+            return (Criteria) this;
+        }
+
+        public Criteria andModifydateIsNull() {
+            addCriterion("modifyDate is null");
+            return (Criteria) this;
+        }
+
+        public Criteria andModifydateIsNotNull() {
+            addCriterion("modifyDate is not null");
+            return (Criteria) this;
+        }
+
+        public Criteria andModifydateEqualTo(Date value) {
+            addCriterion("modifyDate =", value, "modifydate");
+            return (Criteria) this;
+        }
+
+        public Criteria andModifydateNotEqualTo(Date value) {
+            addCriterion("modifyDate <>", value, "modifydate");
+            return (Criteria) this;
+        }
+
+        public Criteria andModifydateGreaterThan(Date value) {
+            addCriterion("modifyDate >", value, "modifydate");
+            return (Criteria) this;
+        }
+
+        public Criteria andModifydateGreaterThanOrEqualTo(Date value) {
+            addCriterion("modifyDate >=", value, "modifydate");
+            return (Criteria) this;
+        }
+
+        public Criteria andModifydateLessThan(Date value) {
+            addCriterion("modifyDate <", value, "modifydate");
+            return (Criteria) this;
+        }
+
+        public Criteria andModifydateLessThanOrEqualTo(Date value) {
+            addCriterion("modifyDate <=", value, "modifydate");
+            return (Criteria) this;
+        }
+
+        public Criteria andModifydateIn(List<Date> values) {
+            addCriterion("modifyDate in", values, "modifydate");
+            return (Criteria) this;
+        }
+
+        public Criteria andModifydateNotIn(List<Date> values) {
+            addCriterion("modifyDate not in", values, "modifydate");
+            return (Criteria) this;
+        }
+
+        public Criteria andModifydateBetween(Date value1, Date value2) {
+            addCriterion("modifyDate between", value1, value2, "modifydate");
+            return (Criteria) this;
+        }
+
+        public Criteria andModifydateNotBetween(Date value1, Date value2) {
+            addCriterion("modifyDate not between", value1, value2, "modifydate");
+            return (Criteria) this;
+        }
+
+        public Criteria andUseridIsNull() {
+            addCriterion("userId is null");
+            return (Criteria) this;
+        }
+
+        public Criteria andUseridIsNotNull() {
+            addCriterion("userId is not null");
+            return (Criteria) this;
+        }
+
+        public Criteria andUseridEqualTo(Long value) {
+            addCriterion("userId =", value, "userid");
+            return (Criteria) this;
+        }
+
+        public Criteria andUseridNotEqualTo(Long value) {
+            addCriterion("userId <>", value, "userid");
+            return (Criteria) this;
+        }
+
+        public Criteria andUseridGreaterThan(Long value) {
+            addCriterion("userId >", value, "userid");
+            return (Criteria) this;
+        }
+
+        public Criteria andUseridGreaterThanOrEqualTo(Long value) {
+            addCriterion("userId >=", value, "userid");
+            return (Criteria) this;
+        }
+
+        public Criteria andUseridLessThan(Long value) {
+            addCriterion("userId <", value, "userid");
+            return (Criteria) this;
+        }
+
+        public Criteria andUseridLessThanOrEqualTo(Long value) {
+            addCriterion("userId <=", value, "userid");
+            return (Criteria) this;
+        }
+
+        public Criteria andUseridIn(List<Long> values) {
+            addCriterion("userId in", values, "userid");
+            return (Criteria) this;
+        }
+
+        public Criteria andUseridNotIn(List<Long> values) {
+            addCriterion("userId not in", values, "userid");
+            return (Criteria) this;
+        }
+
+        public Criteria andUseridBetween(Long value1, Long value2) {
+            addCriterion("userId between", value1, value2, "userid");
+            return (Criteria) this;
+        }
+
+        public Criteria andUseridNotBetween(Long value1, Long value2) {
+            addCriterion("userId not between", value1, value2, "userid");
+            return (Criteria) this;
+        }
+    }
+
+    /**
+     * This class was generated by MyBatis Generator.
+     * This class corresponds to the database table smbms_address
+     *
+     * @mbggenerated do_not_delete_during_merge
+     */
+    public static class Criteria extends GeneratedCriteria {
+
+        protected Criteria() {
+            super();
+        }
+    }
+
+    /**
+     * This class was generated by MyBatis Generator.
+     * This class corresponds to the database table smbms_address
+     *
+     * @mbggenerated
+     */
+    public static class Criterion {
+        private String condition;
+
+        private Object value;
+
+        private Object secondValue;
+
+        private boolean noValue;
+
+        private boolean singleValue;
+
+        private boolean betweenValue;
+
+        private boolean listValue;
+
+        private String typeHandler;
+
+        public String getCondition() {
+            return condition;
+        }
+
+        public Object getValue() {
+            return value;
+        }
+
+        public Object getSecondValue() {
+            return secondValue;
+        }
+
+        public boolean isNoValue() {
+            return noValue;
+        }
+
+        public boolean isSingleValue() {
+            return singleValue;
+        }
+
+        public boolean isBetweenValue() {
+            return betweenValue;
+        }
+
+        public boolean isListValue() {
+            return listValue;
+        }
+
+        public String getTypeHandler() {
+            return typeHandler;
+        }
+
+        protected Criterion(String condition) {
+            super();
+            this.condition = condition;
+            this.typeHandler = null;
+            this.noValue = true;
+        }
+
+        protected Criterion(String condition, Object value, String typeHandler) {
+            super();
+            this.condition = condition;
+            this.value = value;
+            this.typeHandler = typeHandler;
+            if (value instanceof List<?>) {
+                this.listValue = true;
+            } else {
+                this.singleValue = true;
+            }
+        }
+
+        protected Criterion(String condition, Object value) {
+            this(condition, value, null);
+        }
+
+        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
+            super();
+            this.condition = condition;
+            this.value = value;
+            this.secondValue = secondValue;
+            this.typeHandler = typeHandler;
+            this.betweenValue = true;
+        }
+
+        protected Criterion(String condition, Object value, Object secondValue) {
+            this(condition, value, secondValue, null);
+        }
+    }
+}
\ No newline at end of file
Index: src/main/java/com/lpc/pojo/SmbmsRole.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/java/com/lpc/pojo/SmbmsRole.java	(date 1594541675375)
+++ src/main/java/com/lpc/pojo/SmbmsRole.java	(date 1594541675375)
@@ -0,0 +1,230 @@
+package com.lpc.pojo;
+
+import java.io.Serializable;
+import java.util.Date;
+
+public class SmbmsRole implements Serializable {
+    /**
+     * This field was generated by MyBatis Generator.
+     * This field corresponds to the database column smbms_role.id
+     *
+     * @mbggenerated
+     */
+    private Long id;
+
+    /**
+     * This field was generated by MyBatis Generator.
+     * This field corresponds to the database column smbms_role.roleCode
+     *
+     * @mbggenerated
+     */
+    private String rolecode;
+
+    /**
+     * This field was generated by MyBatis Generator.
+     * This field corresponds to the database column smbms_role.roleName
+     *
+     * @mbggenerated
+     */
+    private String rolename;
+
+    /**
+     * This field was generated by MyBatis Generator.
+     * This field corresponds to the database column smbms_role.createdBy
+     *
+     * @mbggenerated
+     */
+    private Long createdby;
+
+    /**
+     * This field was generated by MyBatis Generator.
+     * This field corresponds to the database column smbms_role.creationDate
+     *
+     * @mbggenerated
+     */
+    private Date creationdate;
+
+    /**
+     * This field was generated by MyBatis Generator.
+     * This field corresponds to the database column smbms_role.modifyBy
+     *
+     * @mbggenerated
+     */
+    private Long modifyby;
+
+    /**
+     * This field was generated by MyBatis Generator.
+     * This field corresponds to the database column smbms_role.modifyDate
+     *
+     * @mbggenerated
+     */
+    private Date modifydate;
+
+    /**
+     * This method was generated by MyBatis Generator.
+     * This method returns the value of the database column smbms_role.id
+     *
+     * @return the value of smbms_role.id
+     *
+     * @mbggenerated
+     */
+    public Long getId() {
+        return id;
+    }
+
+    /**
+     * This method was generated by MyBatis Generator.
+     * This method sets the value of the database column smbms_role.id
+     *
+     * @param id the value for smbms_role.id
+     *
+     * @mbggenerated
+     */
+    public void setId(Long id) {
+        this.id = id;
+    }
+
+    /**
+     * This method was generated by MyBatis Generator.
+     * This method returns the value of the database column smbms_role.roleCode
+     *
+     * @return the value of smbms_role.roleCode
+     *
+     * @mbggenerated
+     */
+    public String getRolecode() {
+        return rolecode;
+    }
+
+    /**
+     * This method was generated by MyBatis Generator.
+     * This method sets the value of the database column smbms_role.roleCode
+     *
+     * @param rolecode the value for smbms_role.roleCode
+     *
+     * @mbggenerated
+     */
+    public void setRolecode(String rolecode) {
+        this.rolecode = rolecode == null ? null : rolecode.trim();
+    }
+
+    /**
+     * This method was generated by MyBatis Generator.
+     * This method returns the value of the database column smbms_role.roleName
+     *
+     * @return the value of smbms_role.roleName
+     *
+     * @mbggenerated
+     */
+    public String getRolename() {
+        return rolename;
+    }
+
+    /**
+     * This method was generated by MyBatis Generator.
+     * This method sets the value of the database column smbms_role.roleName
+     *
+     * @param rolename the value for smbms_role.roleName
+     *
+     * @mbggenerated
+     */
+    public void setRolename(String rolename) {
+        this.rolename = rolename == null ? null : rolename.trim();
+    }
+
+    /**
+     * This method was generated by MyBatis Generator.
+     * This method returns the value of the database column smbms_role.createdBy
+     *
+     * @return the value of smbms_role.createdBy
+     *
+     * @mbggenerated
+     */
+    public Long getCreatedby() {
+        return createdby;
+    }
+
+    /**
+     * This method was generated by MyBatis Generator.
+     * This method sets the value of the database column smbms_role.createdBy
+     *
+     * @param createdby the value for smbms_role.createdBy
+     *
+     * @mbggenerated
+     */
+    public void setCreatedby(Long createdby) {
+        this.createdby = createdby;
+    }
+
+    /**
+     * This method was generated by MyBatis Generator.
+     * This method returns the value of the database column smbms_role.creationDate
+     *
+     * @return the value of smbms_role.creationDate
+     *
+     * @mbggenerated
+     */
+    public Date getCreationdate() {
+        return creationdate;
+    }
+
+    /**
+     * This method was generated by MyBatis Generator.
+     * This method sets the value of the database column smbms_role.creationDate
+     *
+     * @param creationdate the value for smbms_role.creationDate
+     *
+     * @mbggenerated
+     */
+    public void setCreationdate(Date creationdate) {
+        this.creationdate = creationdate;
+    }
+
+    /**
+     * This method was generated by MyBatis Generator.
+     * This method returns the value of the database column smbms_role.modifyBy
+     *
+     * @return the value of smbms_role.modifyBy
+     *
+     * @mbggenerated
+     */
+    public Long getModifyby() {
+        return modifyby;
+    }
+
+    /**
+     * This method was generated by MyBatis Generator.
+     * This method sets the value of the database column smbms_role.modifyBy
+     *
+     * @param modifyby the value for smbms_role.modifyBy
+     *
+     * @mbggenerated
+     */
+    public void setModifyby(Long modifyby) {
+        this.modifyby = modifyby;
+    }
+
+    /**
+     * This method was generated by MyBatis Generator.
+     * This method returns the value of the database column smbms_role.modifyDate
+     *
+     * @return the value of smbms_role.modifyDate
+     *
+     * @mbggenerated
+     */
+    public Date getModifydate() {
+        return modifydate;
+    }
+
+    /**
+     * This method was generated by MyBatis Generator.
+     * This method sets the value of the database column smbms_role.modifyDate
+     *
+     * @param modifydate the value for smbms_role.modifyDate
+     *
+     * @mbggenerated
+     */
+    public void setModifydate(Date modifydate) {
+        this.modifydate = modifydate;
+    }
+}
\ No newline at end of file
Index: .idea/jarRepositories.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- .idea/jarRepositories.xml	(date 1594131729192)
+++ .idea/jarRepositories.xml	(date 1594131729192)
@@ -0,0 +1,20 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project version="4">
+  <component name="RemoteRepositoriesConfiguration">
+    <remote-repository>
+      <option name="id" value="central" />
+      <option name="name" value="Central Repository" />
+      <option name="url" value="https://repo.maven.apache.org/maven2" />
+    </remote-repository>
+    <remote-repository>
+      <option name="id" value="central" />
+      <option name="name" value="Maven Central repository" />
+      <option name="url" value="https://repo1.maven.org/maven2" />
+    </remote-repository>
+    <remote-repository>
+      <option name="id" value="jboss.community" />
+      <option name="name" value="JBoss Community repository" />
+      <option name="url" value="https://repository.jboss.org/nexus/content/repositories/public/" />
+    </remote-repository>
+  </component>
+</project>
\ No newline at end of file
Index: src/main/java/com/lpc/pojo/SmbmsProviderExample.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/java/com/lpc/pojo/SmbmsProviderExample.java	(date 1594541675368)
+++ src/main/java/com/lpc/pojo/SmbmsProviderExample.java	(date 1594541675368)
@@ -0,0 +1,1094 @@
+package com.lpc.pojo;
+
+import java.io.Serializable;
+import java.util.ArrayList;
+import java.util.Date;
+import java.util.List;
+
+public class SmbmsProviderExample implements Serializable {
+    /**
+     * This field was generated by MyBatis Generator.
+     * This field corresponds to the database table smbms_provider
+     *
+     * @mbggenerated
+     */
+    protected String orderByClause;
+
+    /**
+     * This field was generated by MyBatis Generator.
+     * This field corresponds to the database table smbms_provider
+     *
+     * @mbggenerated
+     */
+    protected boolean distinct;
+
+    /**
+     * This field was generated by MyBatis Generator.
+     * This field corresponds to the database table smbms_provider
+     *
+     * @mbggenerated
+     */
+    protected List<Criteria> oredCriteria;
+
+    /**
+     * This method was generated by MyBatis Generator.
+     * This method corresponds to the database table smbms_provider
+     *
+     * @mbggenerated
+     */
+    public SmbmsProviderExample() {
+        oredCriteria = new ArrayList<Criteria>();
+    }
+
+    /**
+     * This method was generated by MyBatis Generator.
+     * This method corresponds to the database table smbms_provider
+     *
+     * @mbggenerated
+     */
+    public void setOrderByClause(String orderByClause) {
+        this.orderByClause = orderByClause;
+    }
+
+    /**
+     * This method was generated by MyBatis Generator.
+     * This method corresponds to the database table smbms_provider
+     *
+     * @mbggenerated
+     */
+    public String getOrderByClause() {
+        return orderByClause;
+    }
+
+    /**
+     * This method was generated by MyBatis Generator.
+     * This method corresponds to the database table smbms_provider
+     *
+     * @mbggenerated
+     */
+    public void setDistinct(boolean distinct) {
+        this.distinct = distinct;
+    }
+
+    /**
+     * This method was generated by MyBatis Generator.
+     * This method corresponds to the database table smbms_provider
+     *
+     * @mbggenerated
+     */
+    public boolean isDistinct() {
+        return distinct;
+    }
+
+    /**
+     * This method was generated by MyBatis Generator.
+     * This method corresponds to the database table smbms_provider
+     *
+     * @mbggenerated
+     */
+    public List<Criteria> getOredCriteria() {
+        return oredCriteria;
+    }
+
+    /**
+     * This method was generated by MyBatis Generator.
+     * This method corresponds to the database table smbms_provider
+     *
+     * @mbggenerated
+     */
+    public void or(Criteria criteria) {
+        oredCriteria.add(criteria);
+    }
+
+    /**
+     * This method was generated by MyBatis Generator.
+     * This method corresponds to the database table smbms_provider
+     *
+     * @mbggenerated
+     */
+    public Criteria or() {
+        Criteria criteria = createCriteriaInternal();
+        oredCriteria.add(criteria);
+        return criteria;
+    }
+
+    /**
+     * This method was generated by MyBatis Generator.
+     * This method corresponds to the database table smbms_provider
+     *
+     * @mbggenerated
+     */
+    public Criteria createCriteria() {
+        Criteria criteria = createCriteriaInternal();
+        if (oredCriteria.size() == 0) {
+            oredCriteria.add(criteria);
+        }
+        return criteria;
+    }
+
+    /**
+     * This method was generated by MyBatis Generator.
+     * This method corresponds to the database table smbms_provider
+     *
+     * @mbggenerated
+     */
+    protected Criteria createCriteriaInternal() {
+        Criteria criteria = new Criteria();
+        return criteria;
+    }
+
+    /**
+     * This method was generated by MyBatis Generator.
+     * This method corresponds to the database table smbms_provider
+     *
+     * @mbggenerated
+     */
+    public void clear() {
+        oredCriteria.clear();
+        orderByClause = null;
+        distinct = false;
+    }
+
+    /**
+     * This class was generated by MyBatis Generator.
+     * This class corresponds to the database table smbms_provider
+     *
+     * @mbggenerated
+     */
+    protected abstract static class GeneratedCriteria {
+        protected List<Criterion> criteria;
+
+        protected GeneratedCriteria() {
+            super();
+            criteria = new ArrayList<Criterion>();
+        }
+
+        public boolean isValid() {
+            return criteria.size() > 0;
+        }
+
+        public List<Criterion> getAllCriteria() {
+            return criteria;
+        }
+
+        public List<Criterion> getCriteria() {
+            return criteria;
+        }
+
+        protected void addCriterion(String condition) {
+            if (condition == null) {
+                throw new RuntimeException("Value for condition cannot be null");
+            }
+            criteria.add(new Criterion(condition));
+        }
+
+        protected void addCriterion(String condition, Object value, String property) {
+            if (value == null) {
+                throw new RuntimeException("Value for " + property + " cannot be null");
+            }
+            criteria.add(new Criterion(condition, value));
+        }
+
+        protected void addCriterion(String condition, Object value1, Object value2, String property) {
+            if (value1 == null || value2 == null) {
+                throw new RuntimeException("Between values for " + property + " cannot be null");
+            }
+            criteria.add(new Criterion(condition, value1, value2));
+        }
+
+        public Criteria andIdIsNull() {
+            addCriterion("id is null");
+            return (Criteria) this;
+        }
+
+        public Criteria andIdIsNotNull() {
+            addCriterion("id is not null");
+            return (Criteria) this;
+        }
+
+        public Criteria andIdEqualTo(Long value) {
+            addCriterion("id =", value, "id");
+            return (Criteria) this;
+        }
+
+        public Criteria andIdNotEqualTo(Long value) {
+            addCriterion("id <>", value, "id");
+            return (Criteria) this;
+        }
+
+        public Criteria andIdGreaterThan(Long value) {
+            addCriterion("id >", value, "id");
+            return (Criteria) this;
+        }
+
+        public Criteria andIdGreaterThanOrEqualTo(Long value) {
+            addCriterion("id >=", value, "id");
+            return (Criteria) this;
+        }
+
+        public Criteria andIdLessThan(Long value) {
+            addCriterion("id <", value, "id");
+            return (Criteria) this;
+        }
+
+        public Criteria andIdLessThanOrEqualTo(Long value) {
+            addCriterion("id <=", value, "id");
+            return (Criteria) this;
+        }
+
+        public Criteria andIdIn(List<Long> values) {
+            addCriterion("id in", values, "id");
+            return (Criteria) this;
+        }
+
+        public Criteria andIdNotIn(List<Long> values) {
+            addCriterion("id not in", values, "id");
+            return (Criteria) this;
+        }
+
+        public Criteria andIdBetween(Long value1, Long value2) {
+            addCriterion("id between", value1, value2, "id");
+            return (Criteria) this;
+        }
+
+        public Criteria andIdNotBetween(Long value1, Long value2) {
+            addCriterion("id not between", value1, value2, "id");
+            return (Criteria) this;
+        }
+
+        public Criteria andProcodeIsNull() {
+            addCriterion("proCode is null");
+            return (Criteria) this;
+        }
+
+        public Criteria andProcodeIsNotNull() {
+            addCriterion("proCode is not null");
+            return (Criteria) this;
+        }
+
+        public Criteria andProcodeEqualTo(String value) {
+            addCriterion("proCode =", value, "procode");
+            return (Criteria) this;
+        }
+
+        public Criteria andProcodeNotEqualTo(String value) {
+            addCriterion("proCode <>", value, "procode");
+            return (Criteria) this;
+        }
+
+        public Criteria andProcodeGreaterThan(String value) {
+            addCriterion("proCode >", value, "procode");
+            return (Criteria) this;
+        }
+
+        public Criteria andProcodeGreaterThanOrEqualTo(String value) {
+            addCriterion("proCode >=", value, "procode");
+            return (Criteria) this;
+        }
+
+        public Criteria andProcodeLessThan(String value) {
+            addCriterion("proCode <", value, "procode");
+            return (Criteria) this;
+        }
+
+        public Criteria andProcodeLessThanOrEqualTo(String value) {
+            addCriterion("proCode <=", value, "procode");
+            return (Criteria) this;
+        }
+
+        public Criteria andProcodeLike(String value) {
+            addCriterion("proCode like", value, "procode");
+            return (Criteria) this;
+        }
+
+        public Criteria andProcodeNotLike(String value) {
+            addCriterion("proCode not like", value, "procode");
+            return (Criteria) this;
+        }
+
+        public Criteria andProcodeIn(List<String> values) {
+            addCriterion("proCode in", values, "procode");
+            return (Criteria) this;
+        }
+
+        public Criteria andProcodeNotIn(List<String> values) {
+            addCriterion("proCode not in", values, "procode");
+            return (Criteria) this;
+        }
+
+        public Criteria andProcodeBetween(String value1, String value2) {
+            addCriterion("proCode between", value1, value2, "procode");
+            return (Criteria) this;
+        }
+
+        public Criteria andProcodeNotBetween(String value1, String value2) {
+            addCriterion("proCode not between", value1, value2, "procode");
+            return (Criteria) this;
+        }
+
+        public Criteria andPronameIsNull() {
+            addCriterion("proName is null");
+            return (Criteria) this;
+        }
+
+        public Criteria andPronameIsNotNull() {
+            addCriterion("proName is not null");
+            return (Criteria) this;
+        }
+
+        public Criteria andPronameEqualTo(String value) {
+            addCriterion("proName =", value, "proname");
+            return (Criteria) this;
+        }
+
+        public Criteria andPronameNotEqualTo(String value) {
+            addCriterion("proName <>", value, "proname");
+            return (Criteria) this;
+        }
+
+        public Criteria andPronameGreaterThan(String value) {
+            addCriterion("proName >", value, "proname");
+            return (Criteria) this;
+        }
+
+        public Criteria andPronameGreaterThanOrEqualTo(String value) {
+            addCriterion("proName >=", value, "proname");
+            return (Criteria) this;
+        }
+
+        public Criteria andPronameLessThan(String value) {
+            addCriterion("proName <", value, "proname");
+            return (Criteria) this;
+        }
+
+        public Criteria andPronameLessThanOrEqualTo(String value) {
+            addCriterion("proName <=", value, "proname");
+            return (Criteria) this;
+        }
+
+        public Criteria andPronameLike(String value) {
+            addCriterion("proName like", value, "proname");
+            return (Criteria) this;
+        }
+
+        public Criteria andPronameNotLike(String value) {
+            addCriterion("proName not like", value, "proname");
+            return (Criteria) this;
+        }
+
+        public Criteria andPronameIn(List<String> values) {
+            addCriterion("proName in", values, "proname");
+            return (Criteria) this;
+        }
+
+        public Criteria andPronameNotIn(List<String> values) {
+            addCriterion("proName not in", values, "proname");
+            return (Criteria) this;
+        }
+
+        public Criteria andPronameBetween(String value1, String value2) {
+            addCriterion("proName between", value1, value2, "proname");
+            return (Criteria) this;
+        }
+
+        public Criteria andPronameNotBetween(String value1, String value2) {
+            addCriterion("proName not between", value1, value2, "proname");
+            return (Criteria) this;
+        }
+
+        public Criteria andProdescIsNull() {
+            addCriterion("proDesc is null");
+            return (Criteria) this;
+        }
+
+        public Criteria andProdescIsNotNull() {
+            addCriterion("proDesc is not null");
+            return (Criteria) this;
+        }
+
+        public Criteria andProdescEqualTo(String value) {
+            addCriterion("proDesc =", value, "prodesc");
+            return (Criteria) this;
+        }
+
+        public Criteria andProdescNotEqualTo(String value) {
+            addCriterion("proDesc <>", value, "prodesc");
+            return (Criteria) this;
+        }
+
+        public Criteria andProdescGreaterThan(String value) {
+            addCriterion("proDesc >", value, "prodesc");
+            return (Criteria) this;
+        }
+
+        public Criteria andProdescGreaterThanOrEqualTo(String value) {
+            addCriterion("proDesc >=", value, "prodesc");
+            return (Criteria) this;
+        }
+
+        public Criteria andProdescLessThan(String value) {
+            addCriterion("proDesc <", value, "prodesc");
+            return (Criteria) this;
+        }
+
+        public Criteria andProdescLessThanOrEqualTo(String value) {
+            addCriterion("proDesc <=", value, "prodesc");
+            return (Criteria) this;
+        }
+
+        public Criteria andProdescLike(String value) {
+            addCriterion("proDesc like", value, "prodesc");
+            return (Criteria) this;
+        }
+
+        public Criteria andProdescNotLike(String value) {
+            addCriterion("proDesc not like", value, "prodesc");
+            return (Criteria) this;
+        }
+
+        public Criteria andProdescIn(List<String> values) {
+            addCriterion("proDesc in", values, "prodesc");
+            return (Criteria) this;
+        }
+
+        public Criteria andProdescNotIn(List<String> values) {
+            addCriterion("proDesc not in", values, "prodesc");
+            return (Criteria) this;
+        }
+
+        public Criteria andProdescBetween(String value1, String value2) {
+            addCriterion("proDesc between", value1, value2, "prodesc");
+            return (Criteria) this;
+        }
+
+        public Criteria andProdescNotBetween(String value1, String value2) {
+            addCriterion("proDesc not between", value1, value2, "prodesc");
+            return (Criteria) this;
+        }
+
+        public Criteria andProcontactIsNull() {
+            addCriterion("proContact is null");
+            return (Criteria) this;
+        }
+
+        public Criteria andProcontactIsNotNull() {
+            addCriterion("proContact is not null");
+            return (Criteria) this;
+        }
+
+        public Criteria andProcontactEqualTo(String value) {
+            addCriterion("proContact =", value, "procontact");
+            return (Criteria) this;
+        }
+
+        public Criteria andProcontactNotEqualTo(String value) {
+            addCriterion("proContact <>", value, "procontact");
+            return (Criteria) this;
+        }
+
+        public Criteria andProcontactGreaterThan(String value) {
+            addCriterion("proContact >", value, "procontact");
+            return (Criteria) this;
+        }
+
+        public Criteria andProcontactGreaterThanOrEqualTo(String value) {
+            addCriterion("proContact >=", value, "procontact");
+            return (Criteria) this;
+        }
+
+        public Criteria andProcontactLessThan(String value) {
+            addCriterion("proContact <", value, "procontact");
+            return (Criteria) this;
+        }
+
+        public Criteria andProcontactLessThanOrEqualTo(String value) {
+            addCriterion("proContact <=", value, "procontact");
+            return (Criteria) this;
+        }
+
+        public Criteria andProcontactLike(String value) {
+            addCriterion("proContact like", value, "procontact");
+            return (Criteria) this;
+        }
+
+        public Criteria andProcontactNotLike(String value) {
+            addCriterion("proContact not like", value, "procontact");
+            return (Criteria) this;
+        }
+
+        public Criteria andProcontactIn(List<String> values) {
+            addCriterion("proContact in", values, "procontact");
+            return (Criteria) this;
+        }
+
+        public Criteria andProcontactNotIn(List<String> values) {
+            addCriterion("proContact not in", values, "procontact");
+            return (Criteria) this;
+        }
+
+        public Criteria andProcontactBetween(String value1, String value2) {
+            addCriterion("proContact between", value1, value2, "procontact");
+            return (Criteria) this;
+        }
+
+        public Criteria andProcontactNotBetween(String value1, String value2) {
+            addCriterion("proContact not between", value1, value2, "procontact");
+            return (Criteria) this;
+        }
+
+        public Criteria andProphoneIsNull() {
+            addCriterion("proPhone is null");
+            return (Criteria) this;
+        }
+
+        public Criteria andProphoneIsNotNull() {
+            addCriterion("proPhone is not null");
+            return (Criteria) this;
+        }
+
+        public Criteria andProphoneEqualTo(String value) {
+            addCriterion("proPhone =", value, "prophone");
+            return (Criteria) this;
+        }
+
+        public Criteria andProphoneNotEqualTo(String value) {
+            addCriterion("proPhone <>", value, "prophone");
+            return (Criteria) this;
+        }
+
+        public Criteria andProphoneGreaterThan(String value) {
+            addCriterion("proPhone >", value, "prophone");
+            return (Criteria) this;
+        }
+
+        public Criteria andProphoneGreaterThanOrEqualTo(String value) {
+            addCriterion("proPhone >=", value, "prophone");
+            return (Criteria) this;
+        }
+
+        public Criteria andProphoneLessThan(String value) {
+            addCriterion("proPhone <", value, "prophone");
+            return (Criteria) this;
+        }
+
+        public Criteria andProphoneLessThanOrEqualTo(String value) {
+            addCriterion("proPhone <=", value, "prophone");
+            return (Criteria) this;
+        }
+
+        public Criteria andProphoneLike(String value) {
+            addCriterion("proPhone like", value, "prophone");
+            return (Criteria) this;
+        }
+
+        public Criteria andProphoneNotLike(String value) {
+            addCriterion("proPhone not like", value, "prophone");
+            return (Criteria) this;
+        }
+
+        public Criteria andProphoneIn(List<String> values) {
+            addCriterion("proPhone in", values, "prophone");
+            return (Criteria) this;
+        }
+
+        public Criteria andProphoneNotIn(List<String> values) {
+            addCriterion("proPhone not in", values, "prophone");
+            return (Criteria) this;
+        }
+
+        public Criteria andProphoneBetween(String value1, String value2) {
+            addCriterion("proPhone between", value1, value2, "prophone");
+            return (Criteria) this;
+        }
+
+        public Criteria andProphoneNotBetween(String value1, String value2) {
+            addCriterion("proPhone not between", value1, value2, "prophone");
+            return (Criteria) this;
+        }
+
+        public Criteria andProaddressIsNull() {
+            addCriterion("proAddress is null");
+            return (Criteria) this;
+        }
+
+        public Criteria andProaddressIsNotNull() {
+            addCriterion("proAddress is not null");
+            return (Criteria) this;
+        }
+
+        public Criteria andProaddressEqualTo(String value) {
+            addCriterion("proAddress =", value, "proaddress");
+            return (Criteria) this;
+        }
+
+        public Criteria andProaddressNotEqualTo(String value) {
+            addCriterion("proAddress <>", value, "proaddress");
+            return (Criteria) this;
+        }
+
+        public Criteria andProaddressGreaterThan(String value) {
+            addCriterion("proAddress >", value, "proaddress");
+            return (Criteria) this;
+        }
+
+        public Criteria andProaddressGreaterThanOrEqualTo(String value) {
+            addCriterion("proAddress >=", value, "proaddress");
+            return (Criteria) this;
+        }
+
+        public Criteria andProaddressLessThan(String value) {
+            addCriterion("proAddress <", value, "proaddress");
+            return (Criteria) this;
+        }
+
+        public Criteria andProaddressLessThanOrEqualTo(String value) {
+            addCriterion("proAddress <=", value, "proaddress");
+            return (Criteria) this;
+        }
+
+        public Criteria andProaddressLike(String value) {
+            addCriterion("proAddress like", value, "proaddress");
+            return (Criteria) this;
+        }
+
+        public Criteria andProaddressNotLike(String value) {
+            addCriterion("proAddress not like", value, "proaddress");
+            return (Criteria) this;
+        }
+
+        public Criteria andProaddressIn(List<String> values) {
+            addCriterion("proAddress in", values, "proaddress");
+            return (Criteria) this;
+        }
+
+        public Criteria andProaddressNotIn(List<String> values) {
+            addCriterion("proAddress not in", values, "proaddress");
+            return (Criteria) this;
+        }
+
+        public Criteria andProaddressBetween(String value1, String value2) {
+            addCriterion("proAddress between", value1, value2, "proaddress");
+            return (Criteria) this;
+        }
+
+        public Criteria andProaddressNotBetween(String value1, String value2) {
+            addCriterion("proAddress not between", value1, value2, "proaddress");
+            return (Criteria) this;
+        }
+
+        public Criteria andProfaxIsNull() {
+            addCriterion("proFax is null");
+            return (Criteria) this;
+        }
+
+        public Criteria andProfaxIsNotNull() {
+            addCriterion("proFax is not null");
+            return (Criteria) this;
+        }
+
+        public Criteria andProfaxEqualTo(String value) {
+            addCriterion("proFax =", value, "profax");
+            return (Criteria) this;
+        }
+
+        public Criteria andProfaxNotEqualTo(String value) {
+            addCriterion("proFax <>", value, "profax");
+            return (Criteria) this;
+        }
+
+        public Criteria andProfaxGreaterThan(String value) {
+            addCriterion("proFax >", value, "profax");
+            return (Criteria) this;
+        }
+
+        public Criteria andProfaxGreaterThanOrEqualTo(String value) {
+            addCriterion("proFax >=", value, "profax");
+            return (Criteria) this;
+        }
+
+        public Criteria andProfaxLessThan(String value) {
+            addCriterion("proFax <", value, "profax");
+            return (Criteria) this;
+        }
+
+        public Criteria andProfaxLessThanOrEqualTo(String value) {
+            addCriterion("proFax <=", value, "profax");
+            return (Criteria) this;
+        }
+
+        public Criteria andProfaxLike(String value) {
+            addCriterion("proFax like", value, "profax");
+            return (Criteria) this;
+        }
+
+        public Criteria andProfaxNotLike(String value) {
+            addCriterion("proFax not like", value, "profax");
+            return (Criteria) this;
+        }
+
+        public Criteria andProfaxIn(List<String> values) {
+            addCriterion("proFax in", values, "profax");
+            return (Criteria) this;
+        }
+
+        public Criteria andProfaxNotIn(List<String> values) {
+            addCriterion("proFax not in", values, "profax");
+            return (Criteria) this;
+        }
+
+        public Criteria andProfaxBetween(String value1, String value2) {
+            addCriterion("proFax between", value1, value2, "profax");
+            return (Criteria) this;
+        }
+
+        public Criteria andProfaxNotBetween(String value1, String value2) {
+            addCriterion("proFax not between", value1, value2, "profax");
+            return (Criteria) this;
+        }
+
+        public Criteria andCreatedbyIsNull() {
+            addCriterion("createdBy is null");
+            return (Criteria) this;
+        }
+
+        public Criteria andCreatedbyIsNotNull() {
+            addCriterion("createdBy is not null");
+            return (Criteria) this;
+        }
+
+        public Criteria andCreatedbyEqualTo(Long value) {
+            addCriterion("createdBy =", value, "createdby");
+            return (Criteria) this;
+        }
+
+        public Criteria andCreatedbyNotEqualTo(Long value) {
+            addCriterion("createdBy <>", value, "createdby");
+            return (Criteria) this;
+        }
+
+        public Criteria andCreatedbyGreaterThan(Long value) {
+            addCriterion("createdBy >", value, "createdby");
+            return (Criteria) this;
+        }
+
+        public Criteria andCreatedbyGreaterThanOrEqualTo(Long value) {
+            addCriterion("createdBy >=", value, "createdby");
+            return (Criteria) this;
+        }
+
+        public Criteria andCreatedbyLessThan(Long value) {
+            addCriterion("createdBy <", value, "createdby");
+            return (Criteria) this;
+        }
+
+        public Criteria andCreatedbyLessThanOrEqualTo(Long value) {
+            addCriterion("createdBy <=", value, "createdby");
+            return (Criteria) this;
+        }
+
+        public Criteria andCreatedbyIn(List<Long> values) {
+            addCriterion("createdBy in", values, "createdby");
+            return (Criteria) this;
+        }
+
+        public Criteria andCreatedbyNotIn(List<Long> values) {
+            addCriterion("createdBy not in", values, "createdby");
+            return (Criteria) this;
+        }
+
+        public Criteria andCreatedbyBetween(Long value1, Long value2) {
+            addCriterion("createdBy between", value1, value2, "createdby");
+            return (Criteria) this;
+        }
+
+        public Criteria andCreatedbyNotBetween(Long value1, Long value2) {
+            addCriterion("createdBy not between", value1, value2, "createdby");
+            return (Criteria) this;
+        }
+
+        public Criteria andCreationdateIsNull() {
+            addCriterion("creationDate is null");
+            return (Criteria) this;
+        }
+
+        public Criteria andCreationdateIsNotNull() {
+            addCriterion("creationDate is not null");
+            return (Criteria) this;
+        }
+
+        public Criteria andCreationdateEqualTo(Date value) {
+            addCriterion("creationDate =", value, "creationdate");
+            return (Criteria) this;
+        }
+
+        public Criteria andCreationdateNotEqualTo(Date value) {
+            addCriterion("creationDate <>", value, "creationdate");
+            return (Criteria) this;
+        }
+
+        public Criteria andCreationdateGreaterThan(Date value) {
+            addCriterion("creationDate >", value, "creationdate");
+            return (Criteria) this;
+        }
+
+        public Criteria andCreationdateGreaterThanOrEqualTo(Date value) {
+            addCriterion("creationDate >=", value, "creationdate");
+            return (Criteria) this;
+        }
+
+        public Criteria andCreationdateLessThan(Date value) {
+            addCriterion("creationDate <", value, "creationdate");
+            return (Criteria) this;
+        }
+
+        public Criteria andCreationdateLessThanOrEqualTo(Date value) {
+            addCriterion("creationDate <=", value, "creationdate");
+            return (Criteria) this;
+        }
+
+        public Criteria andCreationdateIn(List<Date> values) {
+            addCriterion("creationDate in", values, "creationdate");
+            return (Criteria) this;
+        }
+
+        public Criteria andCreationdateNotIn(List<Date> values) {
+            addCriterion("creationDate not in", values, "creationdate");
+            return (Criteria) this;
+        }
+
+        public Criteria andCreationdateBetween(Date value1, Date value2) {
+            addCriterion("creationDate between", value1, value2, "creationdate");
+            return (Criteria) this;
+        }
+
+        public Criteria andCreationdateNotBetween(Date value1, Date value2) {
+            addCriterion("creationDate not between", value1, value2, "creationdate");
+            return (Criteria) this;
+        }
+
+        public Criteria andModifydateIsNull() {
+            addCriterion("modifyDate is null");
+            return (Criteria) this;
+        }
+
+        public Criteria andModifydateIsNotNull() {
+            addCriterion("modifyDate is not null");
+            return (Criteria) this;
+        }
+
+        public Criteria andModifydateEqualTo(Date value) {
+            addCriterion("modifyDate =", value, "modifydate");
+            return (Criteria) this;
+        }
+
+        public Criteria andModifydateNotEqualTo(Date value) {
+            addCriterion("modifyDate <>", value, "modifydate");
+            return (Criteria) this;
+        }
+
+        public Criteria andModifydateGreaterThan(Date value) {
+            addCriterion("modifyDate >", value, "modifydate");
+            return (Criteria) this;
+        }
+
+        public Criteria andModifydateGreaterThanOrEqualTo(Date value) {
+            addCriterion("modifyDate >=", value, "modifydate");
+            return (Criteria) this;
+        }
+
+        public Criteria andModifydateLessThan(Date value) {
+            addCriterion("modifyDate <", value, "modifydate");
+            return (Criteria) this;
+        }
+
+        public Criteria andModifydateLessThanOrEqualTo(Date value) {
+            addCriterion("modifyDate <=", value, "modifydate");
+            return (Criteria) this;
+        }
+
+        public Criteria andModifydateIn(List<Date> values) {
+            addCriterion("modifyDate in", values, "modifydate");
+            return (Criteria) this;
+        }
+
+        public Criteria andModifydateNotIn(List<Date> values) {
+            addCriterion("modifyDate not in", values, "modifydate");
+            return (Criteria) this;
+        }
+
+        public Criteria andModifydateBetween(Date value1, Date value2) {
+            addCriterion("modifyDate between", value1, value2, "modifydate");
+            return (Criteria) this;
+        }
+
+        public Criteria andModifydateNotBetween(Date value1, Date value2) {
+            addCriterion("modifyDate not between", value1, value2, "modifydate");
+            return (Criteria) this;
+        }
+
+        public Criteria andModifybyIsNull() {
+            addCriterion("modifyBy is null");
+            return (Criteria) this;
+        }
+
+        public Criteria andModifybyIsNotNull() {
+            addCriterion("modifyBy is not null");
+            return (Criteria) this;
+        }
+
+        public Criteria andModifybyEqualTo(Long value) {
+            addCriterion("modifyBy =", value, "modifyby");
+            return (Criteria) this;
+        }
+
+        public Criteria andModifybyNotEqualTo(Long value) {
+            addCriterion("modifyBy <>", value, "modifyby");
+            return (Criteria) this;
+        }
+
+        public Criteria andModifybyGreaterThan(Long value) {
+            addCriterion("modifyBy >", value, "modifyby");
+            return (Criteria) this;
+        }
+
+        public Criteria andModifybyGreaterThanOrEqualTo(Long value) {
+            addCriterion("modifyBy >=", value, "modifyby");
+            return (Criteria) this;
+        }
+
+        public Criteria andModifybyLessThan(Long value) {
+            addCriterion("modifyBy <", value, "modifyby");
+            return (Criteria) this;
+        }
+
+        public Criteria andModifybyLessThanOrEqualTo(Long value) {
+            addCriterion("modifyBy <=", value, "modifyby");
+            return (Criteria) this;
+        }
+
+        public Criteria andModifybyIn(List<Long> values) {
+            addCriterion("modifyBy in", values, "modifyby");
+            return (Criteria) this;
+        }
+
+        public Criteria andModifybyNotIn(List<Long> values) {
+            addCriterion("modifyBy not in", values, "modifyby");
+            return (Criteria) this;
+        }
+
+        public Criteria andModifybyBetween(Long value1, Long value2) {
+            addCriterion("modifyBy between", value1, value2, "modifyby");
+            return (Criteria) this;
+        }
+
+        public Criteria andModifybyNotBetween(Long value1, Long value2) {
+            addCriterion("modifyBy not between", value1, value2, "modifyby");
+            return (Criteria) this;
+        }
+    }
+
+    /**
+     * This class was generated by MyBatis Generator.
+     * This class corresponds to the database table smbms_provider
+     *
+     * @mbggenerated do_not_delete_during_merge
+     */
+    public static class Criteria extends GeneratedCriteria {
+
+        protected Criteria() {
+            super();
+        }
+    }
+
+    /**
+     * This class was generated by MyBatis Generator.
+     * This class corresponds to the database table smbms_provider
+     *
+     * @mbggenerated
+     */
+    public static class Criterion {
+        private String condition;
+
+        private Object value;
+
+        private Object secondValue;
+
+        private boolean noValue;
+
+        private boolean singleValue;
+
+        private boolean betweenValue;
+
+        private boolean listValue;
+
+        private String typeHandler;
+
+        public String getCondition() {
+            return condition;
+        }
+
+        public Object getValue() {
+            return value;
+        }
+
+        public Object getSecondValue() {
+            return secondValue;
+        }
+
+        public boolean isNoValue() {
+            return noValue;
+        }
+
+        public boolean isSingleValue() {
+            return singleValue;
+        }
+
+        public boolean isBetweenValue() {
+            return betweenValue;
+        }
+
+        public boolean isListValue() {
+            return listValue;
+        }
+
+        public String getTypeHandler() {
+            return typeHandler;
+        }
+
+        protected Criterion(String condition) {
+            super();
+            this.condition = condition;
+            this.typeHandler = null;
+            this.noValue = true;
+        }
+
+        protected Criterion(String condition, Object value, String typeHandler) {
+            super();
+            this.condition = condition;
+            this.value = value;
+            this.typeHandler = typeHandler;
+            if (value instanceof List<?>) {
+                this.listValue = true;
+            } else {
+                this.singleValue = true;
+            }
+        }
+
+        protected Criterion(String condition, Object value) {
+            this(condition, value, null);
+        }
+
+        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
+            super();
+            this.condition = condition;
+            this.value = value;
+            this.secondValue = secondValue;
+            this.typeHandler = typeHandler;
+            this.betweenValue = true;
+        }
+
+        protected Criterion(String condition, Object value, Object secondValue) {
+            this(condition, value, secondValue, null);
+        }
+    }
+}
\ No newline at end of file
Index: src/main/resources/jdbc.properties
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>GBK
===================================================================
--- src/main/resources/jdbc.properties	(date 1593999284480)
+++ src/main/resources/jdbc.properties	(date 1593999284480)
@@ -0,0 +1,4 @@
+mysql.driver=com.mysql.jdbc.Driver
+mysql.url=jdbc:mysql://lpc-test.mysql.rds.aliyuncs.com:3306/smbms?useUnicode=true&characterEncoding=UTF-8
+mysql.username=root
+mysql.password=Lpc123456
\ No newline at end of file
Index: src/main/resources/mapper/SmbmsAddressMapper.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/resources/mapper/SmbmsAddressMapper.xml	(date 1594378695259)
+++ src/main/resources/mapper/SmbmsAddressMapper.xml	(date 1594378695259)
@@ -0,0 +1,351 @@
+<?xml version="1.0" encoding="UTF-8" ?>
+<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
+<mapper namespace="SmbmsAddressMapper" >
+  <resultMap id="BaseResultMap" type="com.lpc.pojo.SmbmsAddress" >
+    <!--
+      WARNING - @mbggenerated
+      This element is automatically generated by MyBatis Generator, do not modify.
+    -->
+    <id column="id" property="id" jdbcType="BIGINT" />
+    <result column="contact" property="contact" jdbcType="VARCHAR" />
+    <result column="addressDesc" property="addressdesc" jdbcType="VARCHAR" />
+    <result column="postCode" property="postcode" jdbcType="VARCHAR" />
+    <result column="tel" property="tel" jdbcType="VARCHAR" />
+    <result column="createdBy" property="createdby" jdbcType="BIGINT" />
+    <result column="creationDate" property="creationdate" jdbcType="TIMESTAMP" />
+    <result column="modifyBy" property="modifyby" jdbcType="BIGINT" />
+    <result column="modifyDate" property="modifydate" jdbcType="TIMESTAMP" />
+    <result column="userId" property="userid" jdbcType="BIGINT" />
+  </resultMap>
+  <sql id="Example_Where_Clause" >
+    <!--
+      WARNING - @mbggenerated
+      This element is automatically generated by MyBatis Generator, do not modify.
+    -->
+    <where >
+      <foreach collection="oredCriteria" item="criteria" separator="or" >
+        <if test="criteria.valid" >
+          <trim prefix="(" suffix=")" prefixOverrides="and" >
+            <foreach collection="criteria.criteria" item="criterion" >
+              <choose >
+                <when test="criterion.noValue" >
+                  and ${criterion.condition}
+                </when>
+                <when test="criterion.singleValue" >
+                  and ${criterion.condition} #{criterion.value}
+                </when>
+                <when test="criterion.betweenValue" >
+                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
+                </when>
+                <when test="criterion.listValue" >
+                  and ${criterion.condition}
+                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
+                    #{listItem}
+                  </foreach>
+                </when>
+              </choose>
+            </foreach>
+          </trim>
+        </if>
+      </foreach>
+    </where>
+  </sql>
+  <sql id="Update_By_Example_Where_Clause" >
+    <!--
+      WARNING - @mbggenerated
+      This element is automatically generated by MyBatis Generator, do not modify.
+    -->
+    <where >
+      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
+        <if test="criteria.valid" >
+          <trim prefix="(" suffix=")" prefixOverrides="and" >
+            <foreach collection="criteria.criteria" item="criterion" >
+              <choose >
+                <when test="criterion.noValue" >
+                  and ${criterion.condition}
+                </when>
+                <when test="criterion.singleValue" >
+                  and ${criterion.condition} #{criterion.value}
+                </when>
+                <when test="criterion.betweenValue" >
+                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
+                </when>
+                <when test="criterion.listValue" >
+                  and ${criterion.condition}
+                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
+                    #{listItem}
+                  </foreach>
+                </when>
+              </choose>
+            </foreach>
+          </trim>
+        </if>
+      </foreach>
+    </where>
+  </sql>
+  <sql id="Base_Column_List" >
+    <!--
+      WARNING - @mbggenerated
+      This element is automatically generated by MyBatis Generator, do not modify.
+    -->
+    id, contact, addressDesc, postCode, tel, createdBy, creationDate, modifyBy, modifyDate, 
+    userId
+  </sql>
+  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.lpc.pojo.SmbmsAddressExample" >
+    <!--
+      WARNING - @mbggenerated
+      This element is automatically generated by MyBatis Generator, do not modify.
+    -->
+    select
+    <if test="distinct" >
+      distinct
+    </if>
+    <include refid="Base_Column_List" />
+    from smbms_address
+    <if test="_parameter != null" >
+      <include refid="Example_Where_Clause" />
+    </if>
+    <if test="orderByClause != null" >
+      order by ${orderByClause}
+    </if>
+  </select>
+  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
+    <!--
+      WARNING - @mbggenerated
+      This element is automatically generated by MyBatis Generator, do not modify.
+    -->
+    select 
+    <include refid="Base_Column_List" />
+    from smbms_address
+    where id = #{id,jdbcType=BIGINT}
+  </select>
+  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
+    <!--
+      WARNING - @mbggenerated
+      This element is automatically generated by MyBatis Generator, do not modify.
+    -->
+    delete from smbms_address
+    where id = #{id,jdbcType=BIGINT}
+  </delete>
+  <delete id="deleteByExample" parameterType="com.lpc.pojo.SmbmsAddressExample" >
+    <!--
+      WARNING - @mbggenerated
+      This element is automatically generated by MyBatis Generator, do not modify.
+    -->
+    delete from smbms_address
+    <if test="_parameter != null" >
+      <include refid="Example_Where_Clause" />
+    </if>
+  </delete>
+  <insert id="insert" parameterType="com.lpc.pojo.SmbmsAddress" >
+    <!--
+      WARNING - @mbggenerated
+      This element is automatically generated by MyBatis Generator, do not modify.
+    -->
+    insert into smbms_address (id, contact, addressDesc, 
+      postCode, tel, createdBy, 
+      creationDate, modifyBy, modifyDate, 
+      userId)
+    values (#{id,jdbcType=BIGINT}, #{contact,jdbcType=VARCHAR}, #{addressdesc,jdbcType=VARCHAR}, 
+      #{postcode,jdbcType=VARCHAR}, #{tel,jdbcType=VARCHAR}, #{createdby,jdbcType=BIGINT}, 
+      #{creationdate,jdbcType=TIMESTAMP}, #{modifyby,jdbcType=BIGINT}, #{modifydate,jdbcType=TIMESTAMP}, 
+      #{userid,jdbcType=BIGINT})
+  </insert>
+  <insert id="insertSelective" parameterType="com.lpc.pojo.SmbmsAddress" >
+    <!--
+      WARNING - @mbggenerated
+      This element is automatically generated by MyBatis Generator, do not modify.
+    -->
+    insert into smbms_address
+    <trim prefix="(" suffix=")" suffixOverrides="," >
+      <if test="id != null" >
+        id,
+      </if>
+      <if test="contact != null" >
+        contact,
+      </if>
+      <if test="addressdesc != null" >
+        addressDesc,
+      </if>
+      <if test="postcode != null" >
+        postCode,
+      </if>
+      <if test="tel != null" >
+        tel,
+      </if>
+      <if test="createdby != null" >
+        createdBy,
+      </if>
+      <if test="creationdate != null" >
+        creationDate,
+      </if>
+      <if test="modifyby != null" >
+        modifyBy,
+      </if>
+      <if test="modifydate != null" >
+        modifyDate,
+      </if>
+      <if test="userid != null" >
+        userId,
+      </if>
+    </trim>
+    <trim prefix="values (" suffix=")" suffixOverrides="," >
+      <if test="id != null" >
+        #{id,jdbcType=BIGINT},
+      </if>
+      <if test="contact != null" >
+        #{contact,jdbcType=VARCHAR},
+      </if>
+      <if test="addressdesc != null" >
+        #{addressdesc,jdbcType=VARCHAR},
+      </if>
+      <if test="postcode != null" >
+        #{postcode,jdbcType=VARCHAR},
+      </if>
+      <if test="tel != null" >
+        #{tel,jdbcType=VARCHAR},
+      </if>
+      <if test="createdby != null" >
+        #{createdby,jdbcType=BIGINT},
+      </if>
+      <if test="creationdate != null" >
+        #{creationdate,jdbcType=TIMESTAMP},
+      </if>
+      <if test="modifyby != null" >
+        #{modifyby,jdbcType=BIGINT},
+      </if>
+      <if test="modifydate != null" >
+        #{modifydate,jdbcType=TIMESTAMP},
+      </if>
+      <if test="userid != null" >
+        #{userid,jdbcType=BIGINT},
+      </if>
+    </trim>
+  </insert>
+  <select id="countByExample" parameterType="com.lpc.pojo.SmbmsAddressExample" resultType="java.lang.Integer" >
+    <!--
+      WARNING - @mbggenerated
+      This element is automatically generated by MyBatis Generator, do not modify.
+    -->
+    select count(*) from smbms_address
+    <if test="_parameter != null" >
+      <include refid="Example_Where_Clause" />
+    </if>
+  </select>
+  <update id="updateByExampleSelective" parameterType="map" >
+    <!--
+      WARNING - @mbggenerated
+      This element is automatically generated by MyBatis Generator, do not modify.
+    -->
+    update smbms_address
+    <set >
+      <if test="record.id != null" >
+        id = #{record.id,jdbcType=BIGINT},
+      </if>
+      <if test="record.contact != null" >
+        contact = #{record.contact,jdbcType=VARCHAR},
+      </if>
+      <if test="record.addressdesc != null" >
+        addressDesc = #{record.addressdesc,jdbcType=VARCHAR},
+      </if>
+      <if test="record.postcode != null" >
+        postCode = #{record.postcode,jdbcType=VARCHAR},
+      </if>
+      <if test="record.tel != null" >
+        tel = #{record.tel,jdbcType=VARCHAR},
+      </if>
+      <if test="record.createdby != null" >
+        createdBy = #{record.createdby,jdbcType=BIGINT},
+      </if>
+      <if test="record.creationdate != null" >
+        creationDate = #{record.creationdate,jdbcType=TIMESTAMP},
+      </if>
+      <if test="record.modifyby != null" >
+        modifyBy = #{record.modifyby,jdbcType=BIGINT},
+      </if>
+      <if test="record.modifydate != null" >
+        modifyDate = #{record.modifydate,jdbcType=TIMESTAMP},
+      </if>
+      <if test="record.userid != null" >
+        userId = #{record.userid,jdbcType=BIGINT},
+      </if>
+    </set>
+    <if test="_parameter != null" >
+      <include refid="Update_By_Example_Where_Clause" />
+    </if>
+  </update>
+  <update id="updateByExample" parameterType="map" >
+    <!--
+      WARNING - @mbggenerated
+      This element is automatically generated by MyBatis Generator, do not modify.
+    -->
+    update smbms_address
+    set id = #{record.id,jdbcType=BIGINT},
+      contact = #{record.contact,jdbcType=VARCHAR},
+      addressDesc = #{record.addressdesc,jdbcType=VARCHAR},
+      postCode = #{record.postcode,jdbcType=VARCHAR},
+      tel = #{record.tel,jdbcType=VARCHAR},
+      createdBy = #{record.createdby,jdbcType=BIGINT},
+      creationDate = #{record.creationdate,jdbcType=TIMESTAMP},
+      modifyBy = #{record.modifyby,jdbcType=BIGINT},
+      modifyDate = #{record.modifydate,jdbcType=TIMESTAMP},
+      userId = #{record.userid,jdbcType=BIGINT}
+    <if test="_parameter != null" >
+      <include refid="Update_By_Example_Where_Clause" />
+    </if>
+  </update>
+  <update id="updateByPrimaryKeySelective" parameterType="com.lpc.pojo.SmbmsAddress" >
+    <!--
+      WARNING - @mbggenerated
+      This element is automatically generated by MyBatis Generator, do not modify.
+    -->
+    update smbms_address
+    <set >
+      <if test="contact != null" >
+        contact = #{contact,jdbcType=VARCHAR},
+      </if>
+      <if test="addressdesc != null" >
+        addressDesc = #{addressdesc,jdbcType=VARCHAR},
+      </if>
+      <if test="postcode != null" >
+        postCode = #{postcode,jdbcType=VARCHAR},
+      </if>
+      <if test="tel != null" >
+        tel = #{tel,jdbcType=VARCHAR},
+      </if>
+      <if test="createdby != null" >
+        createdBy = #{createdby,jdbcType=BIGINT},
+      </if>
+      <if test="creationdate != null" >
+        creationDate = #{creationdate,jdbcType=TIMESTAMP},
+      </if>
+      <if test="modifyby != null" >
+        modifyBy = #{modifyby,jdbcType=BIGINT},
+      </if>
+      <if test="modifydate != null" >
+        modifyDate = #{modifydate,jdbcType=TIMESTAMP},
+      </if>
+      <if test="userid != null" >
+        userId = #{userid,jdbcType=BIGINT},
+      </if>
+    </set>
+    where id = #{id,jdbcType=BIGINT}
+  </update>
+  <update id="updateByPrimaryKey" parameterType="com.lpc.pojo.SmbmsAddress" >
+    <!--
+      WARNING - @mbggenerated
+      This element is automatically generated by MyBatis Generator, do not modify.
+    -->
+    update smbms_address
+    set contact = #{contact,jdbcType=VARCHAR},
+      addressDesc = #{addressdesc,jdbcType=VARCHAR},
+      postCode = #{postcode,jdbcType=VARCHAR},
+      tel = #{tel,jdbcType=VARCHAR},
+      createdBy = #{createdby,jdbcType=BIGINT},
+      creationDate = #{creationdate,jdbcType=TIMESTAMP},
+      modifyBy = #{modifyby,jdbcType=BIGINT},
+      modifyDate = #{modifydate,jdbcType=TIMESTAMP},
+      userId = #{userid,jdbcType=BIGINT}
+    where id = #{id,jdbcType=BIGINT}
+  </update>
+</mapper>
\ No newline at end of file
Index: src/main/resources/log4j.properties
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>GBK
===================================================================
--- src/main/resources/log4j.properties	(date 1578576672089)
+++ src/main/resources/log4j.properties	(date 1578576672089)
@@ -0,0 +1,61 @@
+log4j.rootLogger=debug,CONSOLE,file
+#log4j.rootLogger=ERROR,ROLLING_FILE
+
+log4j.logger.cn.smbms=debug
+log4j.logger.org.apache.ibatis=debug
+log4j.logger.org.mybatis.spring=debug
+log4j.logger.java.sql.Connection=debug
+log4j.logger.java.sql.Statement=debug
+log4j.logger.java.sql.PreparedStatement=debug
+log4j.logger.java.sql.ResultSet=debug
+
+######################################################################################
+# Console Appender  \u65e5\u5fd7\u5728\u63a7\u5236\u8f93\u51fa\u914d\u7f6e
+######################################################################################
+log4j.appender.CONSOLE=org.apache.log4j.ConsoleAppender
+log4j.appender.Threshold=debug
+log4j.appender.CONSOLE.DatePattern=yyyy-MM-dd
+log4j.appender.CONSOLE.Target=System.out
+log4j.appender.CONSOLE.layout=org.apache.log4j.PatternLayout
+log4j.appender.CONSOLE.layout.ConversionPattern= - (%r ms) - %d{yyyy-M-d HH:mm:ss}%x[%5p](%F:%L) %m%n
+
+
+
+######################################################################################
+# Rolling File  \u6587\u4ef6\u5927\u5c0f\u5230\u8fbe\u6307\u5b9a\u5c3a\u5bf8\u7684\u65f6\u5019\u4ea7\u751f\u4e00\u4e2a\u65b0\u7684\u6587\u4ef6
+######################################################################################
+#log4j.appender.ROLLING_FILE=org.apache.log4j.RollingFileAppender
+#log4j.appender.ROLLING_FILE.Threshold=INFO
+#log4j.appender.ROLLING_FILE.File=${baojia.root}/logs/log.log
+#log4j.appender.ROLLING_FILE.Append=true
+#log4j.appender.ROLLING_FILE.MaxFileSize=5000KB
+#log4j.appender.ROLLING_FILE.MaxBackupIndex=100
+#log4j.appender.ROLLING_FILE.layout=org.apache.log4j.PatternLayout
+#log4j.appender.ROLLING_FILE.layout.ConversionPattern=%d{yyyy-M-d HH:mm:ss}%x[%5p](%F:%L) %m%n
+
+######################################################################################
+# DailyRolling File  \u6bcf\u5929\u4ea7\u751f\u4e00\u4e2a\u65e5\u5fd7\u6587\u4ef6\uff0c\u6587\u4ef6\u540d\u683c\u5f0f:log2009-09-11
+######################################################################################
+log4j.appender.file=org.apache.log4j.DailyRollingFileAppender
+log4j.appender.file.DatePattern=yyyy-MM-dd
+log4j.appender.file.File=log.log
+log4j.appender.file.Append=true
+log4j.appender.file.Threshold=debug
+log4j.appender.file.layout=org.apache.log4j.PatternLayout
+log4j.appender.file.layout.ConversionPattern= - (%r ms) - %d{yyyy-M-d HH:mm:ss}%x[%5p](%F:%L) %m%n
+
+#DWR \u65e5\u5fd7
+#log4j.logger.org.directwebremoting = ERROR
+
+#\u663e\u793aHibernate\u5360\u4f4d\u7b26\u7ed1\u5b9a\u503c\u53ca\u8fd4\u56de\u503c
+#log4j.logger.org.hibernate.type=DEBUG,CONSOLE 
+
+#log4j.logger.org.springframework.transaction=DEBUG
+#log4j.logger.org.hibernate=DEBUG
+#log4j.logger.org.acegisecurity=DEBUG
+#log4j.logger.org.apache.myfaces=TRACE
+#log4j.logger.org.quartz=DEBUG
+
+#log4j.logger.com.opensymphony=INFO  
+#log4j.logger.org.apache.struts2=DEBUG  
+log4j.logger.com.opensymphony.xwork2=debug
Index: src/main/resources/mapper/SmbmsProviderMapper.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/resources/mapper/SmbmsProviderMapper.xml	(date 1594378695266)
+++ src/main/resources/mapper/SmbmsProviderMapper.xml	(date 1594378695266)
@@ -0,0 +1,383 @@
+<?xml version="1.0" encoding="UTF-8" ?>
+<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
+<mapper namespace="SmbmsProviderMapper" >
+  <resultMap id="BaseResultMap" type="com.lpc.pojo.SmbmsProvider" >
+    <!--
+      WARNING - @mbggenerated
+      This element is automatically generated by MyBatis Generator, do not modify.
+    -->
+    <id column="id" property="id" jdbcType="BIGINT" />
+    <result column="proCode" property="procode" jdbcType="VARCHAR" />
+    <result column="proName" property="proname" jdbcType="VARCHAR" />
+    <result column="proDesc" property="prodesc" jdbcType="VARCHAR" />
+    <result column="proContact" property="procontact" jdbcType="VARCHAR" />
+    <result column="proPhone" property="prophone" jdbcType="VARCHAR" />
+    <result column="proAddress" property="proaddress" jdbcType="VARCHAR" />
+    <result column="proFax" property="profax" jdbcType="VARCHAR" />
+    <result column="createdBy" property="createdby" jdbcType="BIGINT" />
+    <result column="creationDate" property="creationdate" jdbcType="TIMESTAMP" />
+    <result column="modifyDate" property="modifydate" jdbcType="TIMESTAMP" />
+    <result column="modifyBy" property="modifyby" jdbcType="BIGINT" />
+  </resultMap>
+  <sql id="Example_Where_Clause" >
+    <!--
+      WARNING - @mbggenerated
+      This element is automatically generated by MyBatis Generator, do not modify.
+    -->
+    <where >
+      <foreach collection="oredCriteria" item="criteria" separator="or" >
+        <if test="criteria.valid" >
+          <trim prefix="(" suffix=")" prefixOverrides="and" >
+            <foreach collection="criteria.criteria" item="criterion" >
+              <choose >
+                <when test="criterion.noValue" >
+                  and ${criterion.condition}
+                </when>
+                <when test="criterion.singleValue" >
+                  and ${criterion.condition} #{criterion.value}
+                </when>
+                <when test="criterion.betweenValue" >
+                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
+                </when>
+                <when test="criterion.listValue" >
+                  and ${criterion.condition}
+                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
+                    #{listItem}
+                  </foreach>
+                </when>
+              </choose>
+            </foreach>
+          </trim>
+        </if>
+      </foreach>
+    </where>
+  </sql>
+  <sql id="Update_By_Example_Where_Clause" >
+    <!--
+      WARNING - @mbggenerated
+      This element is automatically generated by MyBatis Generator, do not modify.
+    -->
+    <where >
+      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
+        <if test="criteria.valid" >
+          <trim prefix="(" suffix=")" prefixOverrides="and" >
+            <foreach collection="criteria.criteria" item="criterion" >
+              <choose >
+                <when test="criterion.noValue" >
+                  and ${criterion.condition}
+                </when>
+                <when test="criterion.singleValue" >
+                  and ${criterion.condition} #{criterion.value}
+                </when>
+                <when test="criterion.betweenValue" >
+                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
+                </when>
+                <when test="criterion.listValue" >
+                  and ${criterion.condition}
+                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
+                    #{listItem}
+                  </foreach>
+                </when>
+              </choose>
+            </foreach>
+          </trim>
+        </if>
+      </foreach>
+    </where>
+  </sql>
+  <sql id="Base_Column_List" >
+    <!--
+      WARNING - @mbggenerated
+      This element is automatically generated by MyBatis Generator, do not modify.
+    -->
+    id, proCode, proName, proDesc, proContact, proPhone, proAddress, proFax, createdBy, 
+    creationDate, modifyDate, modifyBy
+  </sql>
+  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.lpc.pojo.SmbmsProviderExample" >
+    <!--
+      WARNING - @mbggenerated
+      This element is automatically generated by MyBatis Generator, do not modify.
+    -->
+    select
+    <if test="distinct" >
+      distinct
+    </if>
+    <include refid="Base_Column_List" />
+    from smbms_provider
+    <if test="_parameter != null" >
+      <include refid="Example_Where_Clause" />
+    </if>
+    <if test="orderByClause != null" >
+      order by ${orderByClause}
+    </if>
+  </select>
+  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
+    <!--
+      WARNING - @mbggenerated
+      This element is automatically generated by MyBatis Generator, do not modify.
+    -->
+    select 
+    <include refid="Base_Column_List" />
+    from smbms_provider
+    where id = #{id,jdbcType=BIGINT}
+  </select>
+  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
+    <!--
+      WARNING - @mbggenerated
+      This element is automatically generated by MyBatis Generator, do not modify.
+    -->
+    delete from smbms_provider
+    where id = #{id,jdbcType=BIGINT}
+  </delete>
+  <delete id="deleteByExample" parameterType="com.lpc.pojo.SmbmsProviderExample" >
+    <!--
+      WARNING - @mbggenerated
+      This element is automatically generated by MyBatis Generator, do not modify.
+    -->
+    delete from smbms_provider
+    <if test="_parameter != null" >
+      <include refid="Example_Where_Clause" />
+    </if>
+  </delete>
+  <insert id="insert" parameterType="com.lpc.pojo.SmbmsProvider" >
+    <!--
+      WARNING - @mbggenerated
+      This element is automatically generated by MyBatis Generator, do not modify.
+    -->
+    insert into smbms_provider (id, proCode, proName, 
+      proDesc, proContact, proPhone, 
+      proAddress, proFax, createdBy, 
+      creationDate, modifyDate, modifyBy
+      )
+    values (#{id,jdbcType=BIGINT}, #{procode,jdbcType=VARCHAR}, #{proname,jdbcType=VARCHAR}, 
+      #{prodesc,jdbcType=VARCHAR}, #{procontact,jdbcType=VARCHAR}, #{prophone,jdbcType=VARCHAR}, 
+      #{proaddress,jdbcType=VARCHAR}, #{profax,jdbcType=VARCHAR}, #{createdby,jdbcType=BIGINT}, 
+      #{creationdate,jdbcType=TIMESTAMP}, #{modifydate,jdbcType=TIMESTAMP}, #{modifyby,jdbcType=BIGINT}
+      )
+  </insert>
+  <insert id="insertSelective" parameterType="com.lpc.pojo.SmbmsProvider" >
+    <!--
+      WARNING - @mbggenerated
+      This element is automatically generated by MyBatis Generator, do not modify.
+    -->
+    insert into smbms_provider
+    <trim prefix="(" suffix=")" suffixOverrides="," >
+      <if test="id != null" >
+        id,
+      </if>
+      <if test="procode != null" >
+        proCode,
+      </if>
+      <if test="proname != null" >
+        proName,
+      </if>
+      <if test="prodesc != null" >
+        proDesc,
+      </if>
+      <if test="procontact != null" >
+        proContact,
+      </if>
+      <if test="prophone != null" >
+        proPhone,
+      </if>
+      <if test="proaddress != null" >
+        proAddress,
+      </if>
+      <if test="profax != null" >
+        proFax,
+      </if>
+      <if test="createdby != null" >
+        createdBy,
+      </if>
+      <if test="creationdate != null" >
+        creationDate,
+      </if>
+      <if test="modifydate != null" >
+        modifyDate,
+      </if>
+      <if test="modifyby != null" >
+        modifyBy,
+      </if>
+    </trim>
+    <trim prefix="values (" suffix=")" suffixOverrides="," >
+      <if test="id != null" >
+        #{id,jdbcType=BIGINT},
+      </if>
+      <if test="procode != null" >
+        #{procode,jdbcType=VARCHAR},
+      </if>
+      <if test="proname != null" >
+        #{proname,jdbcType=VARCHAR},
+      </if>
+      <if test="prodesc != null" >
+        #{prodesc,jdbcType=VARCHAR},
+      </if>
+      <if test="procontact != null" >
+        #{procontact,jdbcType=VARCHAR},
+      </if>
+      <if test="prophone != null" >
+        #{prophone,jdbcType=VARCHAR},
+      </if>
+      <if test="proaddress != null" >
+        #{proaddress,jdbcType=VARCHAR},
+      </if>
+      <if test="profax != null" >
+        #{profax,jdbcType=VARCHAR},
+      </if>
+      <if test="createdby != null" >
+        #{createdby,jdbcType=BIGINT},
+      </if>
+      <if test="creationdate != null" >
+        #{creationdate,jdbcType=TIMESTAMP},
+      </if>
+      <if test="modifydate != null" >
+        #{modifydate,jdbcType=TIMESTAMP},
+      </if>
+      <if test="modifyby != null" >
+        #{modifyby,jdbcType=BIGINT},
+      </if>
+    </trim>
+  </insert>
+  <select id="countByExample" parameterType="com.lpc.pojo.SmbmsProviderExample" resultType="java.lang.Integer" >
+    <!--
+      WARNING - @mbggenerated
+      This element is automatically generated by MyBatis Generator, do not modify.
+    -->
+    select count(*) from smbms_provider
+    <if test="_parameter != null" >
+      <include refid="Example_Where_Clause" />
+    </if>
+  </select>
+  <update id="updateByExampleSelective" parameterType="map" >
+    <!--
+      WARNING - @mbggenerated
+      This element is automatically generated by MyBatis Generator, do not modify.
+    -->
+    update smbms_provider
+    <set >
+      <if test="record.id != null" >
+        id = #{record.id,jdbcType=BIGINT},
+      </if>
+      <if test="record.procode != null" >
+        proCode = #{record.procode,jdbcType=VARCHAR},
+      </if>
+      <if test="record.proname != null" >
+        proName = #{record.proname,jdbcType=VARCHAR},
+      </if>
+      <if test="record.prodesc != null" >
+        proDesc = #{record.prodesc,jdbcType=VARCHAR},
+      </if>
+      <if test="record.procontact != null" >
+        proContact = #{record.procontact,jdbcType=VARCHAR},
+      </if>
+      <if test="record.prophone != null" >
+        proPhone = #{record.prophone,jdbcType=VARCHAR},
+      </if>
+      <if test="record.proaddress != null" >
+        proAddress = #{record.proaddress,jdbcType=VARCHAR},
+      </if>
+      <if test="record.profax != null" >
+        proFax = #{record.profax,jdbcType=VARCHAR},
+      </if>
+      <if test="record.createdby != null" >
+        createdBy = #{record.createdby,jdbcType=BIGINT},
+      </if>
+      <if test="record.creationdate != null" >
+        creationDate = #{record.creationdate,jdbcType=TIMESTAMP},
+      </if>
+      <if test="record.modifydate != null" >
+        modifyDate = #{record.modifydate,jdbcType=TIMESTAMP},
+      </if>
+      <if test="record.modifyby != null" >
+        modifyBy = #{record.modifyby,jdbcType=BIGINT},
+      </if>
+    </set>
+    <if test="_parameter != null" >
+      <include refid="Update_By_Example_Where_Clause" />
+    </if>
+  </update>
+  <update id="updateByExample" parameterType="map" >
+    <!--
+      WARNING - @mbggenerated
+      This element is automatically generated by MyBatis Generator, do not modify.
+    -->
+    update smbms_provider
+    set id = #{record.id,jdbcType=BIGINT},
+      proCode = #{record.procode,jdbcType=VARCHAR},
+      proName = #{record.proname,jdbcType=VARCHAR},
+      proDesc = #{record.prodesc,jdbcType=VARCHAR},
+      proContact = #{record.procontact,jdbcType=VARCHAR},
+      proPhone = #{record.prophone,jdbcType=VARCHAR},
+      proAddress = #{record.proaddress,jdbcType=VARCHAR},
+      proFax = #{record.profax,jdbcType=VARCHAR},
+      createdBy = #{record.createdby,jdbcType=BIGINT},
+      creationDate = #{record.creationdate,jdbcType=TIMESTAMP},
+      modifyDate = #{record.modifydate,jdbcType=TIMESTAMP},
+      modifyBy = #{record.modifyby,jdbcType=BIGINT}
+    <if test="_parameter != null" >
+      <include refid="Update_By_Example_Where_Clause" />
+    </if>
+  </update>
+  <update id="updateByPrimaryKeySelective" parameterType="com.lpc.pojo.SmbmsProvider" >
+    <!--
+      WARNING - @mbggenerated
+      This element is automatically generated by MyBatis Generator, do not modify.
+    -->
+    update smbms_provider
+    <set >
+      <if test="procode != null" >
+        proCode = #{procode,jdbcType=VARCHAR},
+      </if>
+      <if test="proname != null" >
+        proName = #{proname,jdbcType=VARCHAR},
+      </if>
+      <if test="prodesc != null" >
+        proDesc = #{prodesc,jdbcType=VARCHAR},
+      </if>
+      <if test="procontact != null" >
+        proContact = #{procontact,jdbcType=VARCHAR},
+      </if>
+      <if test="prophone != null" >
+        proPhone = #{prophone,jdbcType=VARCHAR},
+      </if>
+      <if test="proaddress != null" >
+        proAddress = #{proaddress,jdbcType=VARCHAR},
+      </if>
+      <if test="profax != null" >
+        proFax = #{profax,jdbcType=VARCHAR},
+      </if>
+      <if test="createdby != null" >
+        createdBy = #{createdby,jdbcType=BIGINT},
+      </if>
+      <if test="creationdate != null" >
+        creationDate = #{creationdate,jdbcType=TIMESTAMP},
+      </if>
+      <if test="modifydate != null" >
+        modifyDate = #{modifydate,jdbcType=TIMESTAMP},
+      </if>
+      <if test="modifyby != null" >
+        modifyBy = #{modifyby,jdbcType=BIGINT},
+      </if>
+    </set>
+    where id = #{id,jdbcType=BIGINT}
+  </update>
+  <update id="updateByPrimaryKey" parameterType="com.lpc.pojo.SmbmsProvider" >
+    <!--
+      WARNING - @mbggenerated
+      This element is automatically generated by MyBatis Generator, do not modify.
+    -->
+    update smbms_provider
+    set proCode = #{procode,jdbcType=VARCHAR},
+      proName = #{proname,jdbcType=VARCHAR},
+      proDesc = #{prodesc,jdbcType=VARCHAR},
+      proContact = #{procontact,jdbcType=VARCHAR},
+      proPhone = #{prophone,jdbcType=VARCHAR},
+      proAddress = #{proaddress,jdbcType=VARCHAR},
+      proFax = #{profax,jdbcType=VARCHAR},
+      createdBy = #{createdby,jdbcType=BIGINT},
+      creationDate = #{creationdate,jdbcType=TIMESTAMP},
+      modifyDate = #{modifydate,jdbcType=TIMESTAMP},
+      modifyBy = #{modifyby,jdbcType=BIGINT}
+    where id = #{id,jdbcType=BIGINT}
+  </update>
+</mapper>
\ No newline at end of file
Index: src/main/resources/mapper/SmbmsBillMapper.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/resources/mapper/SmbmsBillMapper.xml	(date 1594379246082)
+++ src/main/resources/mapper/SmbmsBillMapper.xml	(date 1594379246082)
@@ -0,0 +1,398 @@
+<?xml version="1.0" encoding="UTF-8" ?>
+<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
+<mapper namespace="SmbmsBillMapper" >
+  <resultMap id="BaseResultMap" type="com.lpc.pojo.SmbmsBill" >
+    <!--
+      WARNING - @mbggenerated
+      This element is automatically generated by MyBatis Generator, do not modify.
+    -->
+    <id column="id" property="id" jdbcType="BIGINT" />
+    <result column="billCode" property="billcode" jdbcType="VARCHAR" />
+    <result column="productName" property="productname" jdbcType="VARCHAR" />
+    <result column="productDesc" property="productdesc" jdbcType="VARCHAR" />
+    <result column="productUnit" property="productunit" jdbcType="VARCHAR" />
+    <result column="productCount" property="productcount" jdbcType="DECIMAL" />
+    <result column="totalPrice" property="totalprice" jdbcType="DECIMAL" />
+    <result column="isPayment" property="ispayment" jdbcType="INTEGER" />
+    <result column="createdBy" property="createdby" jdbcType="BIGINT" />
+    <result column="creationDate" property="creationdate" jdbcType="TIMESTAMP" />
+    <result column="modifyBy" property="modifyby" jdbcType="BIGINT" />
+    <result column="modifyDate" property="modifydate" jdbcType="TIMESTAMP" />
+    <result column="providerId" property="providerid" jdbcType="BIGINT" />
+  </resultMap>
+  <sql id="Example_Where_Clause" >
+    <!--
+      WARNING - @mbggenerated
+      This element is automatioredCriteriacally generated by MyBatis Generator, do not modify.
+    -->
+    <where >
+      <foreach collection="oredCriteria" item="criteria" separator="or" >
+        <if test="criteria.valid" >
+          <trim prefix="(" suffix=")" prefixOverrides="and" >
+            <foreach collection="criteria.criteria" item="criterion" >
+              <choose >
+                <when test="criterion.noValue" >
+                  and ${criterion.condition}
+                </when>
+                <when test="criterion.singleValue" >
+                  and ${criterion.condition} #{criterion.value}
+                </when>
+                <when test="criterion.betweenValue" >
+                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
+                </when>
+                <when test="criterion.listValue" >
+                  and ${criterion.condition}
+                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
+                    #{listItem}
+                  </foreach>
+                </when>
+              </choose>
+            </foreach>
+          </trim>
+        </if>
+      </foreach>
+    </where>
+  </sql>
+  <sql id="Update_By_Example_Where_Clause" >
+    <!--
+      WARNING - @mbggenerated
+      This element is automatically generated by MyBatis Generator, do not modify.
+    -->
+    <where >
+      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
+        <if test="criteria.valid" >
+          <trim prefix="(" suffix=")" prefixOverrides="and" >
+            <foreach collection="criteria.criteria" item="criterion" >
+              <choose >
+                <when test="criterion.noValue" >
+                  and ${criterion.condition}
+                </when>
+                <when test="criterion.singleValue" >
+                  and ${criterion.condition} #{criterion.value}
+                </when>
+                <when test="criterion.betweenValue" >
+                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
+                </when>
+                <when test="criterion.listValue" >
+                  and ${criterion.condition}
+                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
+                    #{listItem}
+                  </foreach>
+                </when>
+              </choose>
+            </foreach>
+          </trim>
+        </if>
+      </foreach>
+    </where>
+  </sql>
+  <sql id="Base_Column_List" >
+    <!--
+      WARNING - @mbggenerated
+      This element is automatically generated by MyBatis Generator, do not modify.
+    -->
+    id, billCode, productName, productDesc, productUnit, productCount, totalPrice, isPayment, 
+    createdBy, creationDate, modifyBy, modifyDate, providerId
+  </sql>
+  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.lpc.pojo.SmbmsBillExample" >
+    <!--
+      WARNING - @mbggenerated
+      This element is automatically generated by MyBatis Generator, do not modify.
+    -->
+    select
+    <if test="distinct" >
+      distinct
+    </if>
+    <include refid="Base_Column_List" />
+    from smbms_bill
+    <if test="_parameter != null" >
+      <include refid="Example_Where_Clause" />
+    </if>
+    <if test="orderByClause != null" >
+      order by ${orderByClause}
+    </if>
+  </select>
+  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
+    <!--
+      WARNING - @mbggenerated
+      This element is automatically generated by MyBatis Generator, do not modify.
+    -->
+    select 
+    <include refid="Base_Column_List" />
+    from smbms_bill
+    where id = #{id,jdbcType=BIGINT}
+  </select>
+  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
+    <!--
+      WARNING - @mbggenerated
+      This element is automatically generated by MyBatis Generator, do not modify.
+    -->
+    delete from smbms_bill
+    where id = #{id,jdbcType=BIGINT}
+  </delete>
+  <delete id="deleteByExample" parameterType="com.lpc.pojo.SmbmsBillExample" >
+    <!--
+      WARNING - @mbggenerated
+      This element is automatically generated by MyBatis Generator, do not modify.
+    -->
+    delete from smbms_bill
+    <if test="_parameter != null" >
+      <include refid="Example_Where_Clause" />
+    </if>
+  </delete>
+  <insert id="insert" parameterType="com.lpc.pojo.SmbmsBill" >
+    <!--
+      WARNING - @mbggenerated
+      This element is automatically generated by MyBatis Generator, do not modify.
+    -->
+    insert into smbms_bill (id, billCode, productName, 
+      productDesc, productUnit, productCount, 
+      totalPrice, isPayment, createdBy, 
+      creationDate, modifyBy, modifyDate, 
+      providerId)
+    values (#{id,jdbcType=BIGINT}, #{billcode,jdbcType=VARCHAR}, #{productname,jdbcType=VARCHAR}, 
+      #{productdesc,jdbcType=VARCHAR}, #{productunit,jdbcType=VARCHAR}, #{productcount,jdbcType=DECIMAL}, 
+      #{totalprice,jdbcType=DECIMAL}, #{ispayment,jdbcType=INTEGER}, #{createdby,jdbcType=BIGINT}, 
+      #{creationdate,jdbcType=TIMESTAMP}, #{modifyby,jdbcType=BIGINT}, #{modifydate,jdbcType=TIMESTAMP}, 
+      #{providerid,jdbcType=BIGINT})
+  </insert>
+  <insert id="insertSelective" parameterType="com.lpc.pojo.SmbmsBill" >
+    <!--
+      WARNING - @mbggenerated
+      This element is automatically generated by MyBatis Generator, do not modify.
+    -->
+    insert into smbms_bill
+    <trim prefix="(" suffix=")" suffixOverrides="," >
+      <if test="id != null" >
+        id,
+      </if>
+      <if test="billcode != null" >
+        billCode,
+      </if>
+      <if test="productname != null" >
+        productName,
+      </if>
+      <if test="productdesc != null" >
+        productDesc,
+      </if>
+      <if test="productunit != null" >
+        productUnit,
+      </if>
+      <if test="productcount != null" >
+        productCount,
+      </if>
+      <if test="totalprice != null" >
+        totalPrice,
+      </if>
+      <if test="ispayment != null" >
+        isPayment,
+      </if>
+      <if test="createdby != null" >
+        createdBy,
+      </if>
+      <if test="creationdate != null" >
+        creationDate,
+      </if>
+      <if test="modifyby != null" >
+        modifyBy,
+      </if>
+      <if test="modifydate != null" >
+        modifyDate,
+      </if>
+      <if test="providerid != null" >
+        providerId,
+      </if>
+    </trim>
+    <trim prefix="values (" suffix=")" suffixOverrides="," >
+      <if test="id != null" >
+        #{id,jdbcType=BIGINT},
+      </if>
+      <if test="billcode != null" >
+        #{billcode,jdbcType=VARCHAR},
+      </if>
+      <if test="productname != null" >
+        #{productname,jdbcType=VARCHAR},
+      </if>
+      <if test="productdesc != null" >
+        #{productdesc,jdbcType=VARCHAR},
+      </if>
+      <if test="productunit != null" >
+        #{productunit,jdbcType=VARCHAR},
+      </if>
+      <if test="productcount != null" >
+        #{productcount,jdbcType=DECIMAL},
+      </if>
+      <if test="totalprice != null" >
+        #{totalprice,jdbcType=DECIMAL},
+      </if>
+      <if test="ispayment != null" >
+        #{ispayment,jdbcType=INTEGER},
+      </if>
+      <if test="createdby != null" >
+        #{createdby,jdbcType=BIGINT},
+      </if>
+      <if test="creationdate != null" >
+        #{creationdate,jdbcType=TIMESTAMP},
+      </if>
+      <if test="modifyby != null" >
+        #{modifyby,jdbcType=BIGINT},
+      </if>
+      <if test="modifydate != null" >
+        #{modifydate,jdbcType=TIMESTAMP},
+      </if>
+      <if test="providerid != null" >
+        #{providerid,jdbcType=BIGINT},
+      </if>
+    </trim>
+  </insert>
+  <select id="countByExample" parameterType="com.lpc.pojo.SmbmsBillExample" resultType="java.lang.Integer" >
+    <!--
+      WARNING - @mbggenerated
+      This element is automatically generated by MyBatis Generator, do not modify.
+    -->
+    select count(*) from smbms_bill
+    <if test="_parameter != null" >
+      <include refid="Example_Where_Clause" />
+    </if>
+  </select>
+  <update id="updateByExampleSelective" parameterType="map" >
+    <!--
+      WARNING - @mbggenerated
+      This element is automatically generated by MyBatis Generator, do not modify.
+    -->
+    update smbms_bill
+    <set >
+      <if test="record.id != null" >
+        id = #{record.id,jdbcType=BIGINT},
+      </if>
+      <if test="record.billcode != null" >
+        billCode = #{record.billcode,jdbcType=VARCHAR},
+      </if>
+      <if test="record.productname != null" >
+        productName = #{record.productname,jdbcType=VARCHAR},
+      </if>
+      <if test="record.productdesc != null" >
+        productDesc = #{record.productdesc,jdbcType=VARCHAR},
+      </if>
+      <if test="record.productunit != null" >
+        productUnit = #{record.productunit,jdbcType=VARCHAR},
+      </if>
+      <if test="record.productcount != null" >
+        productCount = #{record.productcount,jdbcType=DECIMAL},
+      </if>
+      <if test="record.totalprice != null" >
+        totalPrice = #{record.totalprice,jdbcType=DECIMAL},
+      </if>
+      <if test="record.ispayment != null" >
+        isPayment = #{record.ispayment,jdbcType=INTEGER},
+      </if>
+      <if test="record.createdby != null" >
+        createdBy = #{record.createdby,jdbcType=BIGINT},
+      </if>
+      <if test="record.creationdate != null" >
+        creationDate = #{record.creationdate,jdbcType=TIMESTAMP},
+      </if>
+      <if test="record.modifyby != null" >
+        modifyBy = #{record.modifyby,jdbcType=BIGINT},
+      </if>
+      <if test="record.modifydate != null" >
+        modifyDate = #{record.modifydate,jdbcType=TIMESTAMP},
+      </if>
+      <if test="record.providerid != null" >
+        providerId = #{record.providerid,jdbcType=BIGINT},
+      </if>
+    </set>
+    <if test="_parameter != null" >
+      <include refid="Update_By_Example_Where_Clause" />
+    </if>
+  </update>
+  <update id="updateByExample" parameterType="map" >
+    <!--
+      WARNING - @mbggenerated
+      This element is automatically generated by MyBatis Generator, do not modify.
+    -->
+    update smbms_bill
+    set id = #{record.id,jdbcType=BIGINT},
+      billCode = #{record.billcode,jdbcType=VARCHAR},
+      productName = #{record.productname,jdbcType=VARCHAR},
+      productDesc = #{record.productdesc,jdbcType=VARCHAR},
+      productUnit = #{record.productunit,jdbcType=VARCHAR},
+      productCount = #{record.productcount,jdbcType=DECIMAL},
+      totalPrice = #{record.totalprice,jdbcType=DECIMAL},
+      isPayment = #{record.ispayment,jdbcType=INTEGER},
+      createdBy = #{record.createdby,jdbcType=BIGINT},
+      creationDate = #{record.creationdate,jdbcType=TIMESTAMP},
+      modifyBy = #{record.modifyby,jdbcType=BIGINT},
+      modifyDate = #{record.modifydate,jdbcType=TIMESTAMP},
+      providerId = #{record.providerid,jdbcType=BIGINT}
+    <if test="_parameter != null" >
+      <include refid="Update_By_Example_Where_Clause" />
+    </if>
+  </update>
+  <update id="updateByPrimaryKeySelective" parameterType="com.lpc.pojo.SmbmsBill" >
+    <!--
+      WARNING - @mbggenerated
+      This element is automatically generated by MyBatis Generator, do not modify.
+    -->
+    update smbms_bill
+    <set >
+      <if test="billcode != null" >
+        billCode = #{billcode,jdbcType=VARCHAR},
+      </if>
+      <if test="productname != null" >
+        productName = #{productname,jdbcType=VARCHAR},
+      </if>
+      <if test="productdesc != null" >
+        productDesc = #{productdesc,jdbcType=VARCHAR},
+      </if>
+      <if test="productunit != null" >
+        productUnit = #{productunit,jdbcType=VARCHAR},
+      </if>
+      <if test="productcount != null" >
+        productCount = #{productcount,jdbcType=DECIMAL},
+      </if>
+      <if test="totalprice != null" >
+        totalPrice = #{totalprice,jdbcType=DECIMAL},
+      </if>
+      <if test="ispayment != null" >
+        isPayment = #{ispayment,jdbcType=INTEGER},
+      </if>
+      <if test="createdby != null" >
+        createdBy = #{createdby,jdbcType=BIGINT},
+      </if>
+      <if test="creationdate != null" >
+        creationDate = #{creationdate,jdbcType=TIMESTAMP},
+      </if>
+      <if test="modifyby != null" >
+        modifyBy = #{modifyby,jdbcType=BIGINT},
+      </if>
+      <if test="modifydate != null" >
+        modifyDate = #{modifydate,jdbcType=TIMESTAMP},
+      </if>
+      <if test="providerid != null" >
+        providerId = #{providerid,jdbcType=BIGINT},
+      </if>
+    </set>
+    where id = #{id,jdbcType=BIGINT}
+  </update>
+  <update id="updateByPrimaryKey" parameterType="com.lpc.pojo.SmbmsBill" >
+    <!--
+      WARNING - @mbggenerated
+      This element is automatically generated by MyBatis Generator, do not modify.
+    -->
+    update smbms_bill
+    set billCode = #{billcode,jdbcType=VARCHAR},
+      productName = #{productname,jdbcType=VARCHAR},
+      productDesc = #{productdesc,jdbcType=VARCHAR},
+      productUnit = #{productunit,jdbcType=VARCHAR},
+      productCount = #{productcount,jdbcType=DECIMAL},
+      totalPrice = #{totalprice,jdbcType=DECIMAL},
+      isPayment = #{ispayment,jdbcType=INTEGER},
+      createdBy = #{createdby,jdbcType=BIGINT},
+      creationDate = #{creationdate,jdbcType=TIMESTAMP},
+      modifyBy = #{modifyby,jdbcType=BIGINT},
+      modifyDate = #{modifydate,jdbcType=TIMESTAMP},
+      providerId = #{providerid,jdbcType=BIGINT}
+    where id = #{id,jdbcType=BIGINT}
+  </update>
+</mapper>
\ No newline at end of file
Index: src/main/resources/mapper/SmbmsUserMapper.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/resources/mapper/SmbmsUserMapper.xml	(date 1594378071515)
+++ src/main/resources/mapper/SmbmsUserMapper.xml	(date 1594378071515)
@@ -0,0 +1,398 @@
+<?xml version="1.0" encoding="UTF-8" ?>
+<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
+<mapper namespace="SmbmsUserMapper" >
+  <resultMap id="BaseResultMap" type="com.lpc.pojo.SmbmsUser" >
+    <!--
+      WARNING - @mbggenerated
+      This element is automatically generated by MyBatis Generator, do not modify.
+    -->
+    <id column="id" property="id" jdbcType="INTEGER" />
+    <result column="userCode" property="usercode" jdbcType="VARCHAR" />
+    <result column="userName" property="username" jdbcType="VARCHAR" />
+    <result column="userPassword" property="userpassword" jdbcType="VARCHAR" />
+    <result column="gender" property="gender" jdbcType="INTEGER" />
+    <result column="birthday" property="birthday" jdbcType="DATE" />
+    <result column="phone" property="phone" jdbcType="VARCHAR" />
+    <result column="address" property="address" jdbcType="VARCHAR" />
+    <result column="userRole" property="userrole" jdbcType="INTEGER" />
+    <result column="createdBy" property="createdby" jdbcType="INTEGER" />
+    <result column="creationDate" property="creationdate" jdbcType="TIMESTAMP" />
+    <result column="modifyBy" property="modifyby" jdbcType="INTEGER" />
+    <result column="modifyDate" property="modifydate" jdbcType="TIMESTAMP" />
+  </resultMap>
+  <sql id="Example_Where_Clause" >
+    <!--
+      WARNING - @mbggenerated
+      This element is automatically generated by MyBatis Generator, do not modify.
+    -->
+    <where >
+      <foreach collection="oredCriteria" item="criteria" separator="or" >
+        <if test="criteria.valid" >
+          <trim prefix="(" suffix=")" prefixOverrides="and" >
+            <foreach collection="criteria.criteria" item="criterion" >
+              <choose >
+                <when test="criterion.noValue" >
+                  and ${criterion.condition}
+                </when>
+                <when test="criterion.singleValue" >
+                  and ${criterion.condition} #{criterion.value}
+                </when>
+                <when test="criterion.betweenValue" >
+                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
+                </when>
+                <when test="criterion.listValue" >
+                  and ${criterion.condition}
+                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
+                    #{listItem}
+                  </foreach>
+                </when>
+              </choose>
+            </foreach>
+          </trim>
+        </if>
+      </foreach>
+    </where>
+  </sql>
+  <sql id="Update_By_Example_Where_Clause" >
+    <!--
+      WARNING - @mbggenerated
+      This element is automatically generated by MyBatis Generator, do not modify.
+    -->
+    <where >
+      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
+        <if test="criteria.valid" >
+          <trim prefix="(" suffix=")" prefixOverrides="and" >
+            <foreach collection="criteria.criteria" item="criterion" >
+              <choose >
+                <when test="criterion.noValue" >
+                  and ${criterion.condition}
+                </when>
+                <when test="criterion.singleValue" >
+                  and ${criterion.condition} #{criterion.value}
+                </when>
+                <when test="criterion.betweenValue" >
+                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
+                </when>
+                <when test="criterion.listValue" >
+                  and ${criterion.condition}
+                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
+                    #{listItem}
+                  </foreach>
+                </when>
+              </choose>
+            </foreach>
+          </trim>
+        </if>
+      </foreach>
+    </where>
+  </sql>
+  <sql id="Base_Column_List" >
+    <!--
+      WARNING - @mbggenerated
+      This element is automatically generated by MyBatis Generator, do not modify.
+    -->
+    id, userCode, userName, userPassword, gender, birthday, phone, address, userRole, 
+    createdBy, creationDate, modifyBy, modifyDate
+  </sql>
+  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.lpc.pojo.SmbmsUserExample" >
+    <!--
+      WARNING - @mbggenerated
+      This element is automatically generated by MyBatis Generator, do not modify.
+    -->
+    select
+    <if test="distinct" >
+      distinct
+    </if>
+    <include refid="Base_Column_List" />
+    from smbms_user
+    <if test="_parameter != null" >
+      <include refid="Example_Where_Clause" />
+    </if>
+    <if test="orderByClause != null" >
+      order by ${orderByClause}
+    </if>
+  </select>
+  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
+    <!--
+      WARNING - @mbggenerated
+      This element is automatically generated by MyBatis Generator, do not modify.
+    -->
+    select 
+    <include refid="Base_Column_List" />
+    from smbms_user
+    where id = #{id,jdbcType=INTEGER}
+  </select>
+  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
+    <!--
+      WARNING - @mbggenerated
+      This element is automatically generated by MyBatis Generator, do not modify.
+    -->
+    delete from smbms_user
+    where id = #{id,jdbcType=INTEGER}
+  </delete>
+  <delete id="deleteByExample" parameterType="com.lpc.pojo.SmbmsUserExample" >
+    <!--
+      WARNING - @mbggenerated
+      This element is automatically generated by MyBatis Generator, do not modify.
+    -->
+    delete from smbms_user
+    <if test="_parameter != null" >
+      <include refid="Example_Where_Clause" />
+    </if>
+  </delete>
+  <insert id="insert" parameterType="com.lpc.pojo.SmbmsUser" >
+    <!--
+      WARNING - @mbggenerated
+      This element is automatically generated by MyBatis Generator, do not modify.
+    -->
+    insert into smbms_user (id, userCode, userName, 
+      userPassword, gender, birthday, 
+      phone, address, userRole, 
+      createdBy, creationDate, modifyBy, 
+      modifyDate)
+    values (#{id,jdbcType=INTEGER}, #{usercode,jdbcType=VARCHAR}, #{username,jdbcType=VARCHAR}, 
+      #{userpassword,jdbcType=VARCHAR}, #{gender,jdbcType=INTEGER}, #{birthday,jdbcType=DATE}, 
+      #{phone,jdbcType=VARCHAR}, #{address,jdbcType=VARCHAR}, #{userrole,jdbcType=INTEGER}, 
+      #{createdby,jdbcType=INTEGER}, #{creationdate,jdbcType=TIMESTAMP}, #{modifyby,jdbcType=INTEGER}, 
+      #{modifydate,jdbcType=TIMESTAMP})
+  </insert>
+  <insert id="insertSelective" parameterType="com.lpc.pojo.SmbmsUser" >
+    <!--
+      WARNING - @mbggenerated
+      This element is automatically generated by MyBatis Generator, do not modify.
+    -->
+    insert into smbms_user
+    <trim prefix="(" suffix=")" suffixOverrides="," >
+      <if test="id != null" >
+        id,
+      </if>
+      <if test="usercode != null" >
+        userCode,
+      </if>
+      <if test="username != null" >
+        userName,
+      </if>
+      <if test="userpassword != null" >
+        userPassword,
+      </if>
+      <if test="gender != null" >
+        gender,
+      </if>
+      <if test="birthday != null" >
+        birthday,
+      </if>
+      <if test="phone != null" >
+        phone,
+      </if>
+      <if test="address != null" >
+        address,
+      </if>
+      <if test="userrole != null" >
+        userRole,
+      </if>
+      <if test="createdby != null" >
+        createdBy,
+      </if>
+      <if test="creationdate != null" >
+        creationDate,
+      </if>
+      <if test="modifyby != null" >
+        modifyBy,
+      </if>
+      <if test="modifydate != null" >
+        modifyDate,
+      </if>
+    </trim>
+    <trim prefix="values (" suffix=")" suffixOverrides="," >
+      <if test="id != null" >
+        #{id,jdbcType=INTEGER},
+      </if>
+      <if test="usercode != null" >
+        #{usercode,jdbcType=VARCHAR},
+      </if>
+      <if test="username != null" >
+        #{username,jdbcType=VARCHAR},
+      </if>
+      <if test="userpassword != null" >
+        #{userpassword,jdbcType=VARCHAR},
+      </if>
+      <if test="gender != null" >
+        #{gender,jdbcType=INTEGER},
+      </if>
+      <if test="birthday != null" >
+        #{birthday,jdbcType=DATE},
+      </if>
+      <if test="phone != null" >
+        #{phone,jdbcType=VARCHAR},
+      </if>
+      <if test="address != null" >
+        #{address,jdbcType=VARCHAR},
+      </if>
+      <if test="userrole != null" >
+        #{userrole,jdbcType=INTEGER},
+      </if>
+      <if test="createdby != null" >
+        #{createdby,jdbcType=INTEGER},
+      </if>
+      <if test="creationdate != null" >
+        #{creationdate,jdbcType=TIMESTAMP},
+      </if>
+      <if test="modifyby != null" >
+        #{modifyby,jdbcType=INTEGER},
+      </if>
+      <if test="modifydate != null" >
+        #{modifydate,jdbcType=TIMESTAMP},
+      </if>
+    </trim>
+  </insert>
+  <select id="countByExample" parameterType="com.lpc.pojo.SmbmsUserExample" resultType="java.lang.Integer" >
+    <!--
+      WARNING - @mbggenerated
+      This element is automatically generated by MyBatis Generator, do not modify.
+    -->
+    select count(*) from smbms_user
+    <if test="_parameter != null" >
+      <include refid="Example_Where_Clause" />
+    </if>
+  </select>
+  <update id="updateByExampleSelective" parameterType="map" >
+    <!--
+      WARNING - @mbggenerated
+      This element is automatically generated by MyBatis Generator, do not modify.
+    -->
+    update smbms_user
+    <set >
+      <if test="record.id != null" >
+        id = #{record.id,jdbcType=INTEGER},
+      </if>
+      <if test="record.usercode != null" >
+        userCode = #{record.usercode,jdbcType=VARCHAR},
+      </if>
+      <if test="record.username != null" >
+        userName = #{record.username,jdbcType=VARCHAR},
+      </if>
+      <if test="record.userpassword != null" >
+        userPassword = #{record.userpassword,jdbcType=VARCHAR},
+      </if>
+      <if test="record.gender != null" >
+        gender = #{record.gender,jdbcType=INTEGER},
+      </if>
+      <if test="record.birthday != null" >
+        birthday = #{record.birthday,jdbcType=DATE},
+      </if>
+      <if test="record.phone != null" >
+        phone = #{record.phone,jdbcType=VARCHAR},
+      </if>
+      <if test="record.address != null" >
+        address = #{record.address,jdbcType=VARCHAR},
+      </if>
+      <if test="record.userrole != null" >
+        userRole = #{record.userrole,jdbcType=INTEGER},
+      </if>
+      <if test="record.createdby != null" >
+        createdBy = #{record.createdby,jdbcType=INTEGER},
+      </if>
+      <if test="record.creationdate != null" >
+        creationDate = #{record.creationdate,jdbcType=TIMESTAMP},
+      </if>
+      <if test="record.modifyby != null" >
+        modifyBy = #{record.modifyby,jdbcType=INTEGER},
+      </if>
+      <if test="record.modifydate != null" >
+        modifyDate = #{record.modifydate,jdbcType=TIMESTAMP},
+      </if>
+    </set>
+    <if test="_parameter != null" >
+      <include refid="Update_By_Example_Where_Clause" />
+    </if>
+  </update>
+  <update id="updateByExample" parameterType="map" >
+    <!--
+      WARNING - @mbggenerated
+      This element is automatically generated by MyBatis Generator, do not modify.
+    -->
+    update smbms_user
+    set id = #{record.id,jdbcType=INTEGER},
+      userCode = #{record.usercode,jdbcType=VARCHAR},
+      userName = #{record.username,jdbcType=VARCHAR},
+      userPassword = #{record.userpassword,jdbcType=VARCHAR},
+      gender = #{record.gender,jdbcType=INTEGER},
+      birthday = #{record.birthday,jdbcType=DATE},
+      phone = #{record.phone,jdbcType=VARCHAR},
+      address = #{record.address,jdbcType=VARCHAR},
+      userRole = #{record.userrole,jdbcType=INTEGER},
+      createdBy = #{record.createdby,jdbcType=INTEGER},
+      creationDate = #{record.creationdate,jdbcType=TIMESTAMP},
+      modifyBy = #{record.modifyby,jdbcType=INTEGER},
+      modifyDate = #{record.modifydate,jdbcType=TIMESTAMP}
+    <if test="_parameter != null" >
+      <include refid="Update_By_Example_Where_Clause" />
+    </if>
+  </update>
+  <update id="updateByPrimaryKeySelective" parameterType="com.lpc.pojo.SmbmsUser" >
+    <!--
+      WARNING - @mbggenerated
+      This element is automatically generated by MyBatis Generator, do not modify.
+    -->
+    update smbms_user
+    <set >
+      <if test="usercode != null" >
+        userCode = #{usercode,jdbcType=VARCHAR},
+      </if>
+      <if test="username != null" >
+        userName = #{username,jdbcType=VARCHAR},
+      </if>
+      <if test="userpassword != null" >
+        userPassword = #{userpassword,jdbcType=VARCHAR},
+      </if>
+      <if test="gender != null" >
+        gender = #{gender,jdbcType=INTEGER},
+      </if>
+      <if test="birthday != null" >
+        birthday = #{birthday,jdbcType=DATE},
+      </if>
+      <if test="phone != null" >
+        phone = #{phone,jdbcType=VARCHAR},
+      </if>
+      <if test="address != null" >
+        address = #{address,jdbcType=VARCHAR},
+      </if>
+      <if test="userrole != null" >
+        userRole = #{userrole,jdbcType=INTEGER},
+      </if>
+      <if test="createdby != null" >
+        createdBy = #{createdby,jdbcType=INTEGER},
+      </if>
+      <if test="creationdate != null" >
+        creationDate = #{creationdate,jdbcType=TIMESTAMP},
+      </if>
+      <if test="modifyby != null" >
+        modifyBy = #{modifyby,jdbcType=INTEGER},
+      </if>
+      <if test="modifydate != null" >
+        modifyDate = #{modifydate,jdbcType=TIMESTAMP},
+      </if>
+    </set>
+    where id = #{id,jdbcType=INTEGER}
+  </update>
+  <update id="updateByPrimaryKey" parameterType="com.lpc.pojo.SmbmsUser" >
+    <!--
+      WARNING - @mbggenerated
+      This element is automatically generated by MyBatis Generator, do not modify.
+    -->
+    update smbms_user
+    set userCode = #{usercode,jdbcType=VARCHAR},
+      userName = #{username,jdbcType=VARCHAR},
+      userPassword = #{userpassword,jdbcType=VARCHAR},
+      gender = #{gender,jdbcType=INTEGER},
+      birthday = #{birthday,jdbcType=DATE},
+      phone = #{phone,jdbcType=VARCHAR},
+      address = #{address,jdbcType=VARCHAR},
+      userRole = #{userrole,jdbcType=INTEGER},
+      createdBy = #{createdby,jdbcType=INTEGER},
+      creationDate = #{creationdate,jdbcType=TIMESTAMP},
+      modifyBy = #{modifyby,jdbcType=INTEGER},
+      modifyDate = #{modifydate,jdbcType=TIMESTAMP}
+    where id = #{id,jdbcType=INTEGER}
+  </update>
+</mapper>
\ No newline at end of file
Index: src/main/resources/mapper/SmbmsRoleMapper.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/resources/mapper/SmbmsRoleMapper.xml	(date 1594378695275)
+++ src/main/resources/mapper/SmbmsRoleMapper.xml	(date 1594378695275)
@@ -0,0 +1,303 @@
+<?xml version="1.0" encoding="UTF-8" ?>
+<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
+<mapper namespace="SmbmsRoleMapper" >
+  <resultMap id="BaseResultMap" type="com.lpc.pojo.SmbmsRole" >
+    <!--
+      WARNING - @mbggenerated
+      This element is automatically generated by MyBatis Generator, do not modify.
+    -->
+    <id column="id" property="id" jdbcType="BIGINT" />
+    <result column="roleCode" property="rolecode" jdbcType="VARCHAR" />
+    <result column="roleName" property="rolename" jdbcType="VARCHAR" />
+    <result column="createdBy" property="createdby" jdbcType="BIGINT" />
+    <result column="creationDate" property="creationdate" jdbcType="TIMESTAMP" />
+    <result column="modifyBy" property="modifyby" jdbcType="BIGINT" />
+    <result column="modifyDate" property="modifydate" jdbcType="TIMESTAMP" />
+  </resultMap>
+  <sql id="Example_Where_Clause" >
+    <!--
+      WARNING - @mbggenerated
+      This element is automatically generated by MyBatis Generator, do not modify.
+    -->
+    <where >
+      <foreach collection="oredCriteria" item="criteria" separator="or" >
+        <if test="criteria.valid" >
+          <trim prefix="(" suffix=")" prefixOverrides="and" >
+            <foreach collection="criteria.criteria" item="criterion" >
+              <choose >
+                <when test="criterion.noValue" >
+                  and ${criterion.condition}
+                </when>
+                <when test="criterion.singleValue" >
+                  and ${criterion.condition} #{criterion.value}
+                </when>
+                <when test="criterion.betweenValue" >
+                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
+                </when>
+                <when test="criterion.listValue" >
+                  and ${criterion.condition}
+                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
+                    #{listItem}
+                  </foreach>
+                </when>
+              </choose>
+            </foreach>
+          </trim>
+        </if>
+      </foreach>
+    </where>
+  </sql>
+  <sql id="Update_By_Example_Where_Clause" >
+    <!--
+      WARNING - @mbggenerated
+      This element is automatically generated by MyBatis Generator, do not modify.
+    -->
+    <where >
+      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
+        <if test="criteria.valid" >
+          <trim prefix="(" suffix=")" prefixOverrides="and" >
+            <foreach collection="criteria.criteria" item="criterion" >
+              <choose >
+                <when test="criterion.noValue" >
+                  and ${criterion.condition}
+                </when>
+                <when test="criterion.singleValue" >
+                  and ${criterion.condition} #{criterion.value}
+                </when>
+                <when test="criterion.betweenValue" >
+                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
+                </when>
+                <when test="criterion.listValue" >
+                  and ${criterion.condition}
+                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
+                    #{listItem}
+                  </foreach>
+                </when>
+              </choose>
+            </foreach>
+          </trim>
+        </if>
+      </foreach>
+    </where>
+  </sql>
+  <sql id="Base_Column_List" >
+    <!--
+      WARNING - @mbggenerated
+      This element is automatically generated by MyBatis Generator, do not modify.
+    -->
+    id, roleCode, roleName, createdBy, creationDate, modifyBy, modifyDate
+  </sql>
+  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.lpc.pojo.SmbmsRoleExample" >
+    <!--
+      WARNING - @mbggenerated
+      This element is automatically generated by MyBatis Generator, do not modify.
+    -->
+    select
+    <if test="distinct" >
+      distinct
+    </if>
+    <include refid="Base_Column_List" />
+    from smbms_role
+    <if test="_parameter != null" >
+      <include refid="Example_Where_Clause" />
+    </if>
+    <if test="orderByClause != null" >
+      order by ${orderByClause}
+    </if>
+  </select>
+  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
+    <!--
+      WARNING - @mbggenerated
+      This element is automatically generated by MyBatis Generator, do not modify.
+    -->
+    select 
+    <include refid="Base_Column_List" />
+    from smbms_role
+    where id = #{id,jdbcType=BIGINT}
+  </select>
+  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
+    <!--
+      WARNING - @mbggenerated
+      This element is automatically generated by MyBatis Generator, do not modify.
+    -->
+    delete from smbms_role
+    where id = #{id,jdbcType=BIGINT}
+  </delete>
+  <delete id="deleteByExample" parameterType="com.lpc.pojo.SmbmsRoleExample" >
+    <!--
+      WARNING - @mbggenerated
+      This element is automatically generated by MyBatis Generator, do not modify.
+    -->
+    delete from smbms_role
+    <if test="_parameter != null" >
+      <include refid="Example_Where_Clause" />
+    </if>
+  </delete>
+  <insert id="insert" parameterType="com.lpc.pojo.SmbmsRole" >
+    <!--
+      WARNING - @mbggenerated
+      This element is automatically generated by MyBatis Generator, do not modify.
+    -->
+    insert into smbms_role (id, roleCode, roleName, 
+      createdBy, creationDate, modifyBy, 
+      modifyDate)
+    values (#{id,jdbcType=BIGINT}, #{rolecode,jdbcType=VARCHAR}, #{rolename,jdbcType=VARCHAR}, 
+      #{createdby,jdbcType=BIGINT}, #{creationdate,jdbcType=TIMESTAMP}, #{modifyby,jdbcType=BIGINT}, 
+      #{modifydate,jdbcType=TIMESTAMP})
+  </insert>
+  <insert id="insertSelective" parameterType="com.lpc.pojo.SmbmsRole" >
+    <!--
+      WARNING - @mbggenerated
+      This element is automatically generated by MyBatis Generator, do not modify.
+    -->
+    insert into smbms_role
+    <trim prefix="(" suffix=")" suffixOverrides="," >
+      <if test="id != null" >
+        id,
+      </if>
+      <if test="rolecode != null" >
+        roleCode,
+      </if>
+      <if test="rolename != null" >
+        roleName,
+      </if>
+      <if test="createdby != null" >
+        createdBy,
+      </if>
+      <if test="creationdate != null" >
+        creationDate,
+      </if>
+      <if test="modifyby != null" >
+        modifyBy,
+      </if>
+      <if test="modifydate != null" >
+        modifyDate,
+      </if>
+    </trim>
+    <trim prefix="values (" suffix=")" suffixOverrides="," >
+      <if test="id != null" >
+        #{id,jdbcType=BIGINT},
+      </if>
+      <if test="rolecode != null" >
+        #{rolecode,jdbcType=VARCHAR},
+      </if>
+      <if test="rolename != null" >
+        #{rolename,jdbcType=VARCHAR},
+      </if>
+      <if test="createdby != null" >
+        #{createdby,jdbcType=BIGINT},
+      </if>
+      <if test="creationdate != null" >
+        #{creationdate,jdbcType=TIMESTAMP},
+      </if>
+      <if test="modifyby != null" >
+        #{modifyby,jdbcType=BIGINT},
+      </if>
+      <if test="modifydate != null" >
+        #{modifydate,jdbcType=TIMESTAMP},
+      </if>
+    </trim>
+  </insert>
+  <select id="countByExample" parameterType="com.lpc.pojo.SmbmsRoleExample" resultType="java.lang.Integer" >
+    <!--
+      WARNING - @mbggenerated
+      This element is automatically generated by MyBatis Generator, do not modify.
+    -->
+    select count(*) from smbms_role
+    <if test="_parameter != null" >
+      <include refid="Example_Where_Clause" />
+    </if>
+  </select>
+  <update id="updateByExampleSelective" parameterType="map" >
+    <!--
+      WARNING - @mbggenerated
+      This element is automatically generated by MyBatis Generator, do not modify.
+    -->
+    update smbms_role
+    <set >
+      <if test="record.id != null" >
+        id = #{record.id,jdbcType=BIGINT},
+      </if>
+      <if test="record.rolecode != null" >
+        roleCode = #{record.rolecode,jdbcType=VARCHAR},
+      </if>
+      <if test="record.rolename != null" >
+        roleName = #{record.rolename,jdbcType=VARCHAR},
+      </if>
+      <if test="record.createdby != null" >
+        createdBy = #{record.createdby,jdbcType=BIGINT},
+      </if>
+      <if test="record.creationdate != null" >
+        creationDate = #{record.creationdate,jdbcType=TIMESTAMP},
+      </if>
+      <if test="record.modifyby != null" >
+        modifyBy = #{record.modifyby,jdbcType=BIGINT},
+      </if>
+      <if test="record.modifydate != null" >
+        modifyDate = #{record.modifydate,jdbcType=TIMESTAMP},
+      </if>
+    </set>
+    <if test="_parameter != null" >
+      <include refid="Update_By_Example_Where_Clause" />
+    </if>
+  </update>
+  <update id="updateByExample" parameterType="map" >
+    <!--
+      WARNING - @mbggenerated
+      This element is automatically generated by MyBatis Generator, do not modify.
+    -->
+    update smbms_role
+    set id = #{record.id,jdbcType=BIGINT},
+      roleCode = #{record.rolecode,jdbcType=VARCHAR},
+      roleName = #{record.rolename,jdbcType=VARCHAR},
+      createdBy = #{record.createdby,jdbcType=BIGINT},
+      creationDate = #{record.creationdate,jdbcType=TIMESTAMP},
+      modifyBy = #{record.modifyby,jdbcType=BIGINT},
+      modifyDate = #{record.modifydate,jdbcType=TIMESTAMP}
+    <if test="_parameter != null" >
+      <include refid="Update_By_Example_Where_Clause" />
+    </if>
+  </update>
+  <update id="updateByPrimaryKeySelective" parameterType="com.lpc.pojo.SmbmsRole" >
+    <!--
+      WARNING - @mbggenerated
+      This element is automatically generated by MyBatis Generator, do not modify.
+    -->
+    update smbms_role
+    <set >
+      <if test="rolecode != null" >
+        roleCode = #{rolecode,jdbcType=VARCHAR},
+      </if>
+      <if test="rolename != null" >
+        roleName = #{rolename,jdbcType=VARCHAR},
+      </if>
+      <if test="createdby != null" >
+        createdBy = #{createdby,jdbcType=BIGINT},
+      </if>
+      <if test="creationdate != null" >
+        creationDate = #{creationdate,jdbcType=TIMESTAMP},
+      </if>
+      <if test="modifyby != null" >
+        modifyBy = #{modifyby,jdbcType=BIGINT},
+      </if>
+      <if test="modifydate != null" >
+        modifyDate = #{modifydate,jdbcType=TIMESTAMP},
+      </if>
+    </set>
+    where id = #{id,jdbcType=BIGINT}
+  </update>
+  <update id="updateByPrimaryKey" parameterType="com.lpc.pojo.SmbmsRole" >
+    <!--
+      WARNING - @mbggenerated
+      This element is automatically generated by MyBatis Generator, do not modify.
+    -->
+    update smbms_role
+    set roleCode = #{rolecode,jdbcType=VARCHAR},
+      roleName = #{rolename,jdbcType=VARCHAR},
+      createdBy = #{createdby,jdbcType=BIGINT},
+      creationDate = #{creationdate,jdbcType=TIMESTAMP},
+      modifyBy = #{modifyby,jdbcType=BIGINT},
+      modifyDate = #{modifydate,jdbcType=TIMESTAMP}
+    where id = #{id,jdbcType=BIGINT}
+  </update>
+</mapper>
\ No newline at end of file
Index: src/main/webapp/statics/js/time.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/webapp/statics/js/time.js	(date 1578576583604)
+++ src/main/webapp/statics/js/time.js	(date 1578576583604)
@@ -0,0 +1,43 @@
+//时间
+function fn(){
+    var time = new Date();
+    var str= "";
+    var div = document.getElementById("time");
+//    console.log(time);
+    var year = time.getFullYear();
+    var mon = time.getMonth()+1;
+    var day = time.getDate();
+    var h = time.getHours();
+    var m = time.getMinutes();
+    var s = time.getSeconds();
+    var week = time.getDay();
+    switch (week){
+        case 0:week="日";
+            break;
+        case 1:week="一";
+            break;
+        case 2:week="二";
+            break;
+        case 3:week="三";
+            break;
+        case 4:week="四";
+            break;
+        case 5:week="五";
+            break;
+        case 6:week="六";
+            break;
+    }
+    str = year +"年"+totwo(mon)+"月"+totwo(day)+"日"+"&nbsp;"+totwo(h)+":"+totwo(m)+":"+totwo(s)+"&nbsp;"+"星期"+week;
+    div.innerHTML = str;
+}
+fn();
+setInterval(fn,1000);
+function totwo(n){
+    if(n<=9){
+        return n = "0"+n;
+    }
+    else{
+        return n =""+n;
+    }
+}
+
Index: src/main/webapp/statics/js/billadd.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/webapp/statics/js/billadd.js	(date 1578576594564)
+++ src/main/webapp/statics/js/billadd.js	(date 1578576594564)
@@ -0,0 +1,152 @@
+var billCode = null;
+var productName = null;
+var productUnit = null;
+var productCount = null;
+var totalPrice = null;
+var providerId = null;
+var addBtn = null;
+var backBtn = null;
+
+function priceReg (value){
+	value = value.replace(/[^\d.]/g,"");  //清除“数字”和“.”以外的字符
+		value = value.replace(/^\./g,"");  //验证第一个字符是数字而不是.
+    value = value.replace(/\.{2,}/g,"."); //只保留第一个. 清除多余的.
+    value = value.replace(".","$#$").replace(/\./g,"").replace("$#$",".");//去掉特殊符号￥
+	if(value.indexOf(".")>0){
+		value = value.substring(0,value.indexOf(".")+3);
+	}
+	return value;
+}
+
+
+$(function(){
+	billCode = $("#billCode");
+	productName = $("#productName");
+	productUnit = $("#productUnit");
+	productCount = $("#productCount");
+	totalPrice = $("#totalPrice");
+	providerId = $("#providerId");
+	addBtn = $("#add");
+	backBtn = $("#back");
+	//初始化的时候，要把所有的提示信息变为：* 以提示必填项，更灵活，不要写在页面上
+	billCode.next().html("*");
+	productName.next().html("*");
+	productUnit.next().html("*");
+	productCount.next().html("*");
+	totalPrice.next().html("*");
+	providerId.next().html("*");
+	
+	$.ajax({
+		type:"GET",//请求类型
+		url:path+"/sys/billselect",//请求的url
+		//请求参数
+		dataType:"json",//ajax接口（请求url）返回的数据类型
+		success:function(data){//data：返回数据（json对象）
+			if(data != null){
+				$("select").html("");//通过标签选择器，得到select标签，适用于页面里只有一个select
+				var options = "<option value=\"0\">请选择</option>";
+				for(var i = 0; i < data.length; i++){
+					//alert(data[i].id);
+					//alert(data[i].proName);
+					options += "<option value=\""+data[i].id+"\">"+data[i].proName+"</option>";
+				}
+				$("select").html(options);
+			}
+		},
+		error:function(data){//当访问时候，404，500 等非200的错误状态码
+			validateTip(providerId.next(),{"color":"red"},imgNo+" 获取供应商列表error",false);
+		}
+	});
+	/*
+	 * 验证
+	 * 失焦\获焦
+	 * jquery的方法传递
+	 */
+	billCode.on("blur",function(){
+		if(billCode.val() != null && billCode.val() != ""){
+			validateTip(billCode.next(),{"color":"green"},imgYes,true);
+		}else{
+			validateTip(billCode.next(),{"color":"red"},imgNo+" 编码不能为空，请重新输入",false);
+		}
+	}).on("focus",function(){
+		//显示友情提示
+		validateTip(billCode.next(),{"color":"#666666"},"* 请输入订单编码",false);
+	}).focus();
+	
+	productName.on("focus",function(){
+		validateTip(productName.next(),{"color":"#666666"},"* 请输入商品名称",false);
+	}).on("blur",function(){
+		if(productName.val() != null && productName.val() != ""){
+			validateTip(productName.next(),{"color":"green"},imgYes,true);
+		}else{
+			validateTip(productName.next(),{"color":"red"},imgNo+" 商品名称不能为空，请重新输入",false);
+		}
+		
+	});
+	
+	productUnit.on("focus",function(){
+		validateTip(productUnit.next(),{"color":"#666666"},"* 请输入商品单位",false);
+	}).on("blur",function(){
+		if(productUnit.val() != null && productUnit.val() != ""){
+			validateTip(productUnit.next(),{"color":"green"},imgYes,true);
+		}else{
+			validateTip(productUnit.next(),{"color":"red"},imgNo+" 单位不能为空，请重新输入",false);
+		}
+		
+	});
+	
+	providerId.on("focus",function(){
+		validateTip(providerId.next(),{"color":"#666666"},"* 请选择供应商",false);
+	}).on("blur",function(){
+		if(providerId.val() != null && providerId.val() != "" && providerId.val() != 0){
+			validateTip(providerId.next(),{"color":"green"},imgYes,true);
+		}else{
+			validateTip(providerId.next(),{"color":"red"},imgNo+" 供应商不能为空，请选择",false);
+		}
+		
+	});
+	
+	productCount.on("focus",function(){
+		validateTip(productCount.next(),{"color":"#666666"},"* 请输入大于0的正自然数，小数点后保留2位",false);
+	}).on("keyup",function(){
+		this.value = priceReg(this.value);
+	}).on("blur",function(){
+		this.value = priceReg(this.value);
+	});
+	
+	totalPrice.on("focus",function(){
+		validateTip(totalPrice.next(),{"color":"#666666"},"* 请输入大于0的正自然数，小数点后保留2位",false);
+	}).on("keyup",function(){
+		this.value = priceReg(this.value);
+	}).on("blur",function(){
+		this.value = priceReg(this.value);
+	});
+	
+	addBtn.on("click",function(){
+		if(billCode.attr("validateStatus") != "true"){
+			billCode.blur();
+		}else if(productName.attr("validateStatus") != "true"){
+			productName.blur();
+		}else if(productUnit.attr("validateStatus") != "true"){
+			productUnit.blur();
+		}else if(providerId.attr("validateStatus") != "true"){
+			providerId.blur();
+		}else{
+			if(confirm("是否确认提交数据")){
+				$("#billForm").submit();
+			}
+		}
+	});
+	
+	backBtn.on("click",function(){
+		if(referer != undefined 
+			&& null != referer 
+			&& "" != referer
+			&& "null" != referer
+			&& referer.length > 4){
+		 window.location.href = referer;
+		}else{
+			history.back(-1);
+		}
+	});
+});
\ No newline at end of file
Index: src/main/webapp/statics/js/common.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/webapp/statics/js/common.js	(date 1578576591214)
+++ src/main/webapp/statics/js/common.js	(date 1578576591214)
@@ -0,0 +1,17 @@
+var path = $("#path").val();
+var imgYes = "<img width='15px' src='"+path+"/statics/images/y.png' />";
+var imgNo = "<img width='15px' src='"+path+"/statics/images/n.png' />";
+/**
+ * 提示信息显示
+ * element:显示提示信息的元素（font）
+ * css：提示样式
+ * tipString:提示信息
+ * status：true/false --验证是否通过
+ */
+function validateTip(element,css,tipString,status){
+	element.css(css);
+	element.html(tipString);
+	
+	element.prev().attr("validateStatus",status);
+}
+var referer = $("#referer").val();
\ No newline at end of file
Index: src/main/resources/springmvc-servlet.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/resources/springmvc-servlet.xml	(date 1594539837496)
+++ src/main/resources/springmvc-servlet.xml	(date 1594539837496)
@@ -0,0 +1,28 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<beans xmlns="http://www.springframework.org/schema/beans"
+    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
+    xmlns:mvc="http://www.springframework.org/schema/mvc"
+    xmlns:p="http://www.springframework.org/schema/p"
+    xmlns:context="http://www.springframework.org/schema/context"
+    xsi:schemaLocation="
+        http://www.springframework.org/schema/beans
+        http://www.springframework.org/schema/beans/spring-beans.xsd
+        http://www.springframework.org/schema/context
+        http://www.springframework.org/schema/context/spring-context.xsd
+        http://www.springframework.org/schema/mvc
+        http://www.springframework.org/schema/mvc/spring-mvc.xsd">
+	<context:component-scan base-package="com.lpc.controller"></context:component-scan>
+	<mvc:annotation-driven></mvc:annotation-driven>
+	<!-- <mvc:resources location="/statics/" mapping="/statics/**"></mvc:resources> -->
+	<bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
+		<property name="prefix" value="/WEB-INF/jsp/"></property>
+		<property name="suffix" value=".jsp"></property>
+	</bean>
+	  <mvc:default-servlet-handler/>
+	<mvc:interceptors>
+		<mvc:interceptor>
+			<mvc:mapping path="/sys/*"/>
+			<bean class="com.lpc.utils.SysInterceptor"></bean>
+		</mvc:interceptor>
+	</mvc:interceptors>
+</beans>
\ No newline at end of file
Index: src/main/resources/applicationContext.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/resources/applicationContext.xml	(date 1594378759852)
+++ src/main/resources/applicationContext.xml	(date 1594378759852)
@@ -0,0 +1,42 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<beans xmlns="http://www.springframework.org/schema/beans"
+	   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
+	   xmlns:aop="http://www.springframework.org/schema/aop"
+	   xmlns:p="http://www.springframework.org/schema/p"
+	   xmlns:tx="http://www.springframework.org/schema/tx"
+	   xmlns:context="http://www.springframework.org/schema/context"
+	   xsi:schemaLocation="
+            http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.5.xsd   
+            http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-2.5.xsd   
+            http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-2.5.xsd 
+            http://www.springframework.org/schema/context 
+            http://www.springframework.org/schema/context/spring-context.xsd">
+	<context:component-scan base-package="com.lpc.service"/>
+	<context:component-scan base-package="com.lpc.dao"/>
+	<context:property-placeholder location="classpath:jdbc.properties"/>
+	<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource">
+		<property name="driverClassName" value="${mysql.driver}" />
+		<property name="url" value="${mysql.url}" />
+		<property name="username" value="${mysql.username}" />
+		<property name="password" value="${mysql.password}" />
+	</bean>
+	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
+		<property name="dataSource" ref="dataSource"></property>
+		<property name="configLocation" value="classpath:mybatis-config.xml"></property>
+		<property name="mapperLocations" value="classpath:mapper/*.xml"/>
+	</bean>
+<!--	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
+		<property name="basePackage" value="com.lpc.dao"></property>
+	</bean>-->
+	<bean id="txManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
+		<property name="dataSource" ref="dataSource"></property>
+	</bean>
+	<tx:annotation-driven transaction-manager="txManager"/>
+
+	<!-- sqlSessionTemplate配置 -->
+	<bean id="sqlSession"    class="org.mybatis.spring.SqlSessionTemplate">
+		<constructor-arg index="0" ref="sqlSessionFactory" />
+	</bean>
+
+
+</beans>
\ No newline at end of file
Index: src/main/resources/mybatis-config.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/resources/mybatis-config.xml	(date 1594529192112)
+++ src/main/resources/mybatis-config.xml	(date 1594529192112)
@@ -0,0 +1,18 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<!DOCTYPE configuration
+PUBLIC "-//mybatis.org//DTD Config 3.0//EN"
+"http://mybatis.org/dtd/mybatis-3-config.dtd">
+<configuration>
+	<typeAliases>
+		<package name="com.lpc.pojo"/>
+	</typeAliases>
+	<plugins>
+		<plugin interceptor="com.github.pagehelper.PageInterceptor">
+			<!--reasonable：分页合理化参数，默认值为false。
+                当该参数设置为 true 时，pageNum<=0 时会查询第一页，
+                pageNum>pages（超过总数时），会查询最后一页。
+                默认false 时，直接根据参数进行查询。-->
+			<property name="reasonable" value="true"/>
+		</plugin>
+	</plugins>
+</configuration>
\ No newline at end of file
Index: src/main/webapp/statics/js/userview.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/webapp/statics/js/userview.js	(date 1578576581280)
+++ src/main/webapp/statics/js/userview.js	(date 1578576581280)
@@ -0,0 +1,17 @@
+var backBtn = null;
+
+$(function(){
+	backBtn = $("#back");
+	backBtn.on("click",function(){
+		//alert("view : "+referer);
+		if(referer != undefined 
+			&& null != referer 
+			&& "" != referer
+			&& "null" != referer
+			&& referer.length > 4){
+		 window.location.href = referer;
+		}else{
+			history.back(-1);
+		}
+	});
+});
\ No newline at end of file
Index: src/main/webapp/statics/js/userlist.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/webapp/statics/js/userlist.js	(date 1578576583312)
+++ src/main/webapp/statics/js/userlist.js	(date 1578576583312)
@@ -0,0 +1,76 @@
+var userObj;
+
+//用户管理页面上点击删除按钮弹出删除框(userlist.jsp)
+function deleteUser(obj){
+	$.ajax({
+		type:"GET",
+		url:path+"/sys/deleteUser",
+		data:{uid:obj.attr("userid")},
+		dataType:"json",
+		success:function(data){
+			if(data.delResult == "true"){//删除成功：移除删除行
+				cancleBtn();
+				obj.parents("tr").remove();
+			}else if(data.delResult == "false"){//删除失败
+				//alert("对不起，删除用户【"+obj.attr("username")+"】失败");
+				changeDLGContent("对不起，删除用户【"+obj.attr("username")+"】失败");
+			}else if(data.delResult == "notexist"){
+				//alert("对不起，用户【"+obj.attr("username")+"】不存在");
+				changeDLGContent("对不起，用户【"+obj.attr("username")+"】不存在");
+			}
+		},
+		error:function(data){
+			//alert("对不起，删除失败");
+			changeDLGContent("对不起，删除失败");
+		}
+	});
+}
+
+function openYesOrNoDLG(){
+	$('.zhezhao').css('display', 'block');
+	$('#removeUse').fadeIn();
+}
+
+function cancleBtn(){
+	$('.zhezhao').css('display', 'none');
+	$('#removeUse').fadeOut();
+}
+function changeDLGContent(contentStr){
+	var p = $(".removeMain").find("p");
+	p.html(contentStr);
+}
+
+$(function(){
+	//通过jquery的class选择器（数组）
+	//对每个class为viewUser的元素进行动作绑定（click）
+	/**
+	 * bind、live、delegate
+	 * on
+	 */
+	$(".viewUser").on("click",function(){
+		//将被绑定的元素（a）转换成jquery对象，可以使用jquery方法
+		var obj = $(this);
+		window.location.href=path+"/sys/viewUser?uid="+ obj.attr("userid");
+	});
+	
+	$(".modifyUser").on("click",function(){
+		var obj = $(this);
+		window.location.href=path+"/sys/modifyUser?uid="+ obj.attr("userid");
+	});
+
+	$('#no').click(function () {
+		cancleBtn();
+	});
+	
+	$('#yes').click(function () {
+		deleteUser(userObj);
+	});
+
+	$(".deleteUser").on("click",function(){
+		userObj = $(this);
+		changeDLGContent("你确定要删除用户【"+userObj.attr("username")+"】吗？");
+		openYesOrNoDLG();
+	});
+	
+	
+});
\ No newline at end of file
Index: src/main/webapp/statics/js/billmodify.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/webapp/statics/js/billmodify.js	(date 1594523062565)
+++ src/main/webapp/statics/js/billmodify.js	(date 1594523062565)
@@ -0,0 +1,146 @@
+var billCode = null;
+var productName = null;
+var productUnit = null;
+var productCount = null;
+var totalPrice = null;
+var providerId = null;
+var saveBtn = null;
+var backBtn = null;
+
+function priceReg (value){
+	value = value.replace(/[^\d.]/g,"");  //清除“数字”和“.”以外的字符
+		value = value.replace(/^\./g,"");  //验证第一个字符是数字而不是.
+    value = value.replace(/\.{2,}/g,"."); //只保留第一个. 清除多余的.
+    value = value.replace(".","$#$").replace(/\./g,"").replace("$#$",".");//去掉特殊符号￥
+	if(value.indexOf(".")>0){
+		value = value.substring(0,value.indexOf(".")+3);
+	}
+	return value;
+}
+
+
+$(function(){
+	billCode = $("#billCode");
+	productName = $("#productName");
+	productUnit = $("#productUnit");
+	productCount = $("#productCount");
+	totalPrice = $("#totalPrice");
+	providerId = $("#providerId");
+	saveBtn = $("#save");
+	backBtn = $("#back");
+	
+	//初始化的时候，要把所有的提示信息变为：* 以提示必填项，更灵活，不要写在页面上
+	billCode.next().html("*");
+	productName.next().html("*");
+	productUnit.next().html("*");
+	productCount.next().html("*");
+	totalPrice.next().html("*");
+	providerId.next().html("*");
+	$.ajax({
+		type:"GET",//请求类型
+		url:path+"/sys/billselect",//请求的url
+		//请求参数
+		dataType:"json",//ajax接口（请求url）返回的数据类型
+		success:function(data){//data：返回数据（json对象）
+			if(data != null){
+				var pid = $("#pid").val();
+				$("select").html("");//通过标签选择器，得到select标签，适用于页面里只有一个select
+				var options = "<option value=\"0\">请选择</option>";
+				for(var i = 0; i < data.length; i++){
+					//alert(data[i].id);
+					//alert(data[i].proName);
+					if(pid != null && pid != undefined && data[i].id == pid ){
+						options += "<option selected=\"selected\" value=\""+data[i].id+"\" >"+data[i].proName+"</option>";
+					}else{
+						options += "<option value=\""+data[i].id+"\" >"+data[i].proName+"</option>";
+					}
+					
+				}
+				$("select").html(options);
+			}
+		},
+		error:function(data){//当访问时候，404，500 等非200的错误状态码
+			validateTip(providerId.next(),{"color":"red"},imgNo+" 获取供应商列表error",false);
+		}
+	});
+	/*
+	 * 验证
+	 * 失焦\获焦
+	 * jquery的方法传递
+	 */
+	
+	productName.on("focus",function(){
+		validateTip(productName.next(),{"color":"#666666"},"* 请输入商品名称",false);
+	}).on("blur",function(){
+		if(productName.val() != null && productName.val() != ""){
+			validateTip(productName.next(),{"color":"green"},imgYes,true);
+		}else{
+			validateTip(productName.next(),{"color":"red"},imgNo+" 商品名称不能为空，请重新输入",false);
+		}
+		
+	});
+	
+	productUnit.on("focus",function(){
+		validateTip(productUnit.next(),{"color":"#666666"},"* 请输入商品单位",false);
+	}).on("blur",function(){
+		if(productUnit.val() != null && productUnit.val() != ""){
+			validateTip(productUnit.next(),{"color":"green"},imgYes,true);
+		}else{
+			validateTip(productUnit.next(),{"color":"red"},imgNo+" 单位不能为空，请重新输入",false);
+		}
+		
+	});
+	
+	providerId.on("focus",function(){
+		validateTip(providerId.next(),{"color":"#666666"},"* 请选择供应商",false);
+	}).on("blur",function(){
+		if(providerId.val() != null && providerId.val() != "" && providerId.val() != 0){
+			validateTip(providerId.next(),{"color":"green"},imgYes,true);
+		}else{
+			validateTip(providerId.next(),{"color":"red"},imgNo+" 供应商不能为空，请选择",false);
+		}
+		
+	});
+	
+	productCount.on("focus",function(){
+		validateTip(productCount.next(),{"color":"#666666"},"* 请输入大于0的正自然数，小数点后保留2位",false);
+	}).on("keyup",function(){
+		this.value = priceReg(this.value);
+	}).on("blur",function(){
+		this.value = priceReg(this.value);
+	});
+	
+	totalPrice.on("focus",function(){
+		validateTip(totalPrice.next(),{"color":"#666666"},"* 请输入大于0的正自然数，小数点后保留2位",false);
+	}).on("keyup",function(){
+		this.value = priceReg(this.value);
+	}).on("blur",function(){
+		this.value = priceReg(this.value);
+	});
+	
+	saveBtn.on("click",function(){
+		productName.blur();
+		productUnit.blur();
+		providerId.blur();
+		if(productName.attr("validateStatus") == "true" 
+			&& productUnit.attr("validateStatus") == "true" 
+			&& providerId.attr("validateStatus") == "true"){
+			if(confirm("是否确认提交数据")){
+				$("#billForm").submit();
+			}
+		}
+	});
+	
+	backBtn.on("click",function(){
+		//alert("modify: "+referer);
+		if(referer != undefined 
+			&& null != referer 
+			&& "" != referer
+			&& "null" != referer
+			&& referer.length > 4){
+		 window.location.href = referer;
+		}else{
+			history.back(-1);
+		}
+	});
+});
\ No newline at end of file
Index: .idea/encodings.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- .idea/encodings.xml	(date 1594528837409)
+++ .idea/encodings.xml	(date 1594528837409)
@@ -0,0 +1,7 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project version="4">
+  <component name="Encoding">
+    <file url="file://$PROJECT_DIR$/src/main/java" charset="UTF-8" />
+    <file url="file://$PROJECT_DIR$/src/main/resources" charset="UTF-8" />
+  </component>
+</project>
\ No newline at end of file
Index: src/main/webapp/statics/js/pwdmodify.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/webapp/statics/js/pwdmodify.js	(date 1578576587297)
+++ src/main/webapp/statics/js/pwdmodify.js	(date 1578576587297)
@@ -0,0 +1,81 @@
+var oldpassword = null;
+var newpassword = null;
+var rnewpassword = null;
+var saveBtn = null;
+
+$(function(){
+	oldpassword = $("#oldpassword");
+	newpassword = $("#newpassword");
+	rnewpassword = $("#rnewpassword");
+	saveBtn = $("#save");
+	
+	oldpassword.next().html("*");
+	newpassword.next().html("*");
+	rnewpassword.next().html("*");
+	
+	oldpassword.on("blur",function(){
+		$.ajax({
+			type:"GET",
+			url:path+"/sys/checkpwd",
+			data:{oldpassword:oldpassword.val()},
+			dataType:"json",
+			success:function(data){
+				if(data.result == "true"){//旧密码正确
+					validateTip(oldpassword.next(),{"color":"green"},imgYes,true);
+				}else if(data.result == "false"){//旧密码输入不正确
+					validateTip(oldpassword.next(),{"color":"red"},imgNo + " 原密码输入不正确",false);
+				}else if(data.result == "sessionerror"){//当前用户session过期，请重新登录
+					validateTip(oldpassword.next(),{"color":"red"},imgNo + " 当前用户session过期，请重新登录",false);
+				}else if(data.result == "error"){//旧密码输入为空
+					validateTip(oldpassword.next(),{"color":"red"},imgNo + " 请输入旧密码",false);
+				}
+			},
+			error:function(data){
+				//请求出错
+				validateTip(oldpassword.next(),{"color":"red"},imgNo + " 请求错误",false);
+			}
+		});
+		
+		
+	}).on("focus",function(){
+		validateTip(oldpassword.next(),{"color":"#666666"},"* 请输入原密码",false);
+	});
+	
+	newpassword.on("focus",function(){
+		validateTip(newpassword.next(),{"color":"#666666"},"* 密码长度必须是大于6小于20",false);
+	}).on("blur",function(){
+		if(newpassword.val() != null && newpassword.val().length > 6
+				&& newpassword.val().length < 20 ){
+			validateTip(newpassword.next(),{"color":"green"},imgYes,true);
+		}else{
+			validateTip(newpassword.next(),{"color":"red"},imgNo + " 密码输入不符合规范，请重新输入",false);
+		}
+	});
+	
+	
+	rnewpassword.on("focus",function(){
+		validateTip(rnewpassword.next(),{"color":"#666666"},"* 请输入与上面一致的密码",false);
+	}).on("blur",function(){
+		if(rnewpassword.val() != null && rnewpassword.val().length > 6
+				&& rnewpassword.val().length < 20 && newpassword.val() == rnewpassword.val()){
+			validateTip(rnewpassword.next(),{"color":"green"},imgYes,true);
+		}else{
+			validateTip(rnewpassword.next(),{"color":"red"},imgNo + " 两次密码输入不一致，请重新输入",false);
+		}
+	});
+	
+	
+	saveBtn.on("click",function(){
+		oldpassword.blur();
+		newpassword.blur();
+		rnewpassword.blur();
+		if(oldpassword.attr("validateStatus") == "true" 
+			&& newpassword.attr("validateStatus") == "true"
+			&& rnewpassword.attr("validateStatus") == "true"){
+			if(confirm("确定要修改密码？")){
+				$("#userForm").submit();
+			}
+		}
+		
+	});
+});
\ No newline at end of file
Index: src/main/webapp/statics/js/billlist.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/webapp/statics/js/billlist.js	(date 1594518683207)
+++ src/main/webapp/statics/js/billlist.js	(date 1594518683207)
@@ -0,0 +1,77 @@
+var billObj;
+
+//订单管理页面上点击删除按钮弹出删除框(billlist.jsp)
+function deleteBill(obj){
+	$.ajax({
+		type:"GET",
+		url:path+"/sys/billdel",
+		data:{billid:obj.attr("billid")},
+		dataType:"json",
+		success:function(data){
+			if(data.delResult == "true"){//删除成功：移除删除行
+				showMessage('删除成功','success',1000)
+				cancleBtn();
+				obj.parents("tr").remove();
+			}else if(data.delResult == "false"){//删除失败
+				//alert("对不起，删除订单【"+obj.attr("billcc")+"】失败");
+				changeDLGContent("对不起，删除订单【"+obj.attr("billcc")+"】失败");
+			}else if(data.delResult == "notexist"){
+				//alert("对不起，订单【"+obj.attr("billcc")+"】不存在");
+				changeDLGContent("对不起，订单【"+obj.attr("billcc")+"】不存在");
+			}
+		},
+		error:function(data){
+			alert("对不起，删除失败");
+		}
+	});
+}
+
+function openYesOrNoDLG(){
+	$('.zhezhao').css('display', 'block');
+	$('#removeBi').fadeIn();
+}
+
+function cancleBtn(){
+
+	$('.zhezhao').css('display', 'none');
+	$('#removeBi').fadeOut();
+}
+function changeDLGContent(contentStr){
+	var p = $(".removeMain").find("p");
+	p.html(contentStr);
+}
+function showMessage(message,type,time) {
+	let str = ''
+	switch (type) {
+		case 'success':
+			str = '<div class="success-message" style="width: 300px;height: 40px;text-align: center;background-color:#daf5eb;;color: rgba(59,128,58,0.7);position: fixed;left: 43%;top: 10%;line-height: 40px;border-radius: 5px;z-index: 9999">\n' +
+				'    <span class="mes-text">'+message+'</span></div>'
+			break;
+		case 'error':
+			str = '<div class="error-message" style="width: 300px;height: 40px;text-align: center;background-color: #f5f0e5;color: rgba(238,99,99,0.8);position: fixed;left: 43%;top: 10%;line-height: 40px;border-radius: 5px;;z-index: 9999">\n' +
+				'    <span class="mes-text">'+message+'</span></div>'
+	}
+	$('body').append(str)
+	setTimeout(function () {
+		$('.'+type+'-message').remove()
+	},time)
+}
+
+$(function(){
+	
+	$('#no').click(function () {
+		cancleBtn();
+	});
+	
+	$('#yes').click(function () {
+		deleteBill(billObj);
+	});
+
+	$(".deleteBill").on("click",function(){
+		billObj = $(this);
+		changeDLGContent("你确定要删除订单【"+billObj.attr("billcc")+"】吗？");
+		openYesOrNoDLG();
+	});
+	
+	
+});
\ No newline at end of file
Index: SuperMarketMaven.iml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- SuperMarketMaven.iml	(date 1594537937049)
+++ SuperMarketMaven.iml	(date 1594537937049)
@@ -0,0 +1,21 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<module version="4">
+  <component name="FacetManager">
+    <facet type="JRebel" name="JRebel">
+      <configuration>
+        <option name="ideModuleStorage">
+          <map>
+            <entry key="com.zeroturnaround.jrebel.FormatVersion" value="7.0.0" />
+            <entry key="com.zeroturnaround.jrebel.remoting.DeleteUnindexedFiles" value="false" />
+            <entry key="com.zeroturnaround.jrebel.remoting.ModuleRemoteServerSelection" value="off" />
+            <entry key="com.zeroturnaround.jrebel.remoting.ModuleSpecificSingleRemoteServer" />
+            <entry key="jrebelEnabled" value="true" />
+            <entry key="lastExternalPluginCheckTime" value="1594537902724" />
+            <entry key="savedRebelXmlBuildTool" />
+            <entry key="savedRebelXmlContent" />
+          </map>
+        </option>
+      </configuration>
+    </facet>
+  </component>
+</module>
\ No newline at end of file
Index: src/main/java/com/lpc/pojo/Page.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/java/com/lpc/pojo/Page.java	(date 1594528461334)
+++ src/main/java/com/lpc/pojo/Page.java	(date 1594528461334)
@@ -0,0 +1,35 @@
+package com.lpc.pojo;
+
+public class Page {
+		private int size;//每页信息条数
+		private int totalCount;//总信息条数
+		private int totalPage;//总页数
+		private int currentpage;//当前页
+		public int getSize() {
+			return size;
+		}
+		public void setSize(int size) {
+			this.size = size;
+		}
+		public int getTotalCount() {
+			return totalCount;
+		}
+		public void setTotalCount(int totalCount) {
+			this.totalCount = totalCount;
+			if(totalCount%size==0){
+				this.totalPage=totalCount/size;
+			}else{
+				this.totalPage=totalCount/size+1;
+			}
+		}
+		public int getTotalPage() {
+			return totalPage;
+		}
+		public int getCurrentpage() {
+			return currentpage;
+		}
+		public void setCurrentpage(int currentpage) {
+			this.currentpage = currentpage;
+		}
+		
+}
Index: src/main/webapp/statics/js/useradd.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/webapp/statics/js/useradd.js	(date 1578576583312)
+++ src/main/webapp/statics/js/useradd.js	(date 1578576583312)
@@ -0,0 +1,190 @@
+var userCode = null;
+var userName = null;
+var userPassword = null;
+var ruserPassword = null;
+var phone = null;
+var birthday = null;
+var userRole = null;
+var addBtn = null;
+var backBtn = null;
+
+
+$(function(){
+	userCode = $("#userCode");
+	userName = $("#userName");
+	userPassword = $("#userPassword");
+	ruserPassword = $("#ruserPassword");
+	phone = $("#phone");
+	birthday = $("#birthday");
+	userRole = $("#userRole");
+	addBtn = $("#add");
+	backBtn = $("#back");
+	//初始化的时候，要把所有的提示信息变为：* 以提示必填项，更灵活，不要写在页面上
+	userCode.next().html("*");
+	userName.next().html("*");
+	userPassword.next().html("*");
+	ruserPassword.next().html("*");
+	phone.next().html("*");
+	birthday.next().html("*");
+	userRole.next().html("*");
+	
+	$.ajax({
+		type:"GET",//请求类型
+		url:path+"/sys/getrolelist",//请求的url
+		//请求参数
+		dataType:"json",//ajax接口（请求url）返回的数据类型
+		success:function(data){//data：返回数据（json对象）
+			if(data != null){
+				userRole.html("");
+				var options = "<option value=\"0\">请选择</option>";
+				for(var i = 0; i < data.length; i++){
+					//alert(data[i].id);
+					//alert(data[i].roleName);
+					options += "<option value=\""+data[i].id+"\">"+data[i].roleName+"</option>";
+				}
+				userRole.html(options);
+			}
+		},
+		error:function(data){//当访问时候，404，500 等非200的错误状态码
+			validateTip(userRole.next(),{"color":"red"},imgNo+" 获取用户角色列表error",false);
+		}
+	});
+	
+	
+	
+	/*
+	 * 验证
+	 * 失焦\获焦
+	 * jquery的方法传递
+	 */
+	userCode.bind("blur",function(){
+		//ajax后台验证--userCode是否已存在
+		//user.do?method=ucexist&userCode=**
+		var code = userCode.val();
+		if(code == '' || code == null){
+			validateTip(userCode.next(),{"color":"red"},imgNo+ " 用户账号不能为空",false);
+			return;
+		}
+		$.ajax({
+			type:"GET",//请求类型
+			url:path+"/sys/usercode",//请求的url
+			data:{userCode:code},//请求参数
+			dataType:"json",//ajax接口（请求url）返回的数据类型
+			success:function(data){//data：返回数据（json对象）
+				if(data.userCode == "exist"){//账号已存在，错误提示
+					validateTip(userCode.next(),{"color":"red"},imgNo+ " 该用户账号已存在",false);
+				}else{//账号可用，正确提示
+					validateTip(userCode.next(),{"color":"green"},imgYes+" 该账号可以使用",true);
+				}
+			},
+			error:function(data){//当访问时候，404，500 等非200的错误状态码
+				validateTip(userCode.next(),{"color":"red"},imgNo+" 您访问的页面不存在",false);
+			}
+		});
+		
+		
+	}).bind("focus",function(){
+		//显示友情提示
+		validateTip(userCode.next(),{"color":"#666666"},"* 用户编码是您登录系统的账号",false);
+	}).focus();
+	
+	userName.bind("focus",function(){
+		validateTip(userName.next(),{"color":"#666666"},"* 用户名长度必须是大于1小于10的字符",false);
+	}).bind("blur",function(){
+		if(userName.val() != null && userName.val().length > 1
+				&& userName.val().length < 10){
+			validateTip(userName.next(),{"color":"green"},imgYes,true);
+		}else{
+			validateTip(userName.next(),{"color":"red"},imgNo+" 用户名输入的不符合规范，请重新输入",false);
+		}
+		
+	});
+	
+	userPassword.bind("focus",function(){
+		validateTip(userPassword.next(),{"color":"#666666"},"* 密码长度必须是大于6小于20",false);
+	}).bind("blur",function(){
+		if(userPassword.val() != null && userPassword.val().length > 6
+				&& userPassword.val().length < 20 ){
+			validateTip(userPassword.next(),{"color":"green"},imgYes,true);
+		}else{
+			validateTip(userPassword.next(),{"color":"red"},imgNo + " 密码输入不符合规范，请重新输入",false);
+		}
+	});
+	
+	ruserPassword.bind("focus",function(){
+		validateTip(ruserPassword.next(),{"color":"#666666"},"* 请输入与上面一只的密码",false);
+	}).bind("blur",function(){
+		if(ruserPassword.val() != null && ruserPassword.val().length > 6
+				&& ruserPassword.val().length < 20 && userPassword.val() == ruserPassword.val()){
+			validateTip(ruserPassword.next(),{"color":"green"},imgYes,true);
+		}else{
+			validateTip(ruserPassword.next(),{"color":"red"},imgNo + " 两次密码输入不一致，请重新输入",false);
+		}
+	});
+	
+	
+	birthday.bind("focus",function(){
+		validateTip(birthday.next(),{"color":"#666666"},"* 点击输入框，选择日期",false);
+	}).bind("blur",function(){
+		if(birthday.val() != null && birthday.val() != ""){
+			validateTip(birthday.next(),{"color":"green"},imgYes,true);
+		}else{
+			validateTip(birthday.next(),{"color":"red"},imgNo + " 选择的日期不正确,请重新输入",false);
+		}
+	});
+	
+	phone.bind("focus",function(){
+		validateTip(phone.next(),{"color":"#666666"},"* 请输入手机号",false);
+	}).bind("blur",function(){
+		var patrn=/^(13[0-9]|15[0-9]|18[0-9])\d{8}$/;
+		if(phone.val().match(patrn)){
+			validateTip(phone.next(),{"color":"green"},imgYes,true);
+		}else{
+			validateTip(phone.next(),{"color":"red"},imgNo + " 您输入的手机号格式不正确",false);
+		}
+	});
+	
+	userRole.bind("focus",function(){
+		validateTip(userRole.next(),{"color":"#666666"},"* 请选择用户角色",false);
+	}).bind("blur",function(){
+		if(userRole.val() != null && userRole.val() > 0){
+			validateTip(userRole.next(),{"color":"green"},imgYes,true);
+		}else{
+			validateTip(userRole.next(),{"color":"red"},imgNo + " 请重新选择用户角色",false);
+		}
+	});
+	
+	addBtn.bind("click",function(){
+		if(userCode.attr("validateStatus") != "true"){
+			userCode.blur();
+		}else if(userName.attr("validateStatus") != "true"){
+			userName.blur();
+		}else if(userPassword.attr("validateStatus") != "true"){
+			userPassword.blur();
+		}else if(ruserPassword.attr("validateStatus") != "true"){
+			ruserPassword.blur();
+		}else if(birthday.attr("validateStatus") != "true"){
+			birthday.blur();
+		}else if(phone.attr("validateStatus") != "true"){
+			phone.blur();
+		}else if(userRole.attr("validateStatus") != "true"){
+			userRole.blur();
+		}else{
+			if(confirm("是否确认提交数据")){
+				$("#userForm").submit();
+			}
+		}
+	});
+	
+	backBtn.on("click",function(){
+		if(referer != undefined 
+			&& null != referer 
+			&& "" != referer
+			&& "null" != referer
+			&& referer.length > 4){
+		 window.location.href = referer;
+		}else{
+			history.back(-1);
+		}
+	});
+});
\ No newline at end of file
Index: src/main/webapp/statics/js/rollpage.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/webapp/statics/js/rollpage.js	(date 1578576586200)
+++ src/main/webapp/statics/js/rollpage.js	(date 1578576586200)
@@ -0,0 +1,19 @@
+
+function jump_to(){
+    //alert(num);
+	//验证用户的输入
+	var regexp=/^[1-9]\d*$/;
+	var totalPageCount = document.getElementById("totalPageCount").value;
+	var num = document.getElementById("inputPage").value;
+	
+	//alert(totalPageCount);
+	if(!regexp.test(num)){
+		alert("请输入大于0的正整数！");
+		return false;
+	}else if((num-totalPageCount) > 0){
+		alert("请输入小于总页数的页码");
+		return false;
+	}else{
+		$("#jump").submit();
+	}
+}
\ No newline at end of file
Index: src/main/webapp/statics/js/billview.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/webapp/statics/js/billview.js	(date 1578576591705)
+++ src/main/webapp/statics/js/billview.js	(date 1578576591705)
@@ -0,0 +1,17 @@
+var backBtn = null;
+
+$(function(){
+	backBtn = $("#back");
+	backBtn.on("click",function(){
+		//alert("view : "+referer);
+		if(referer != undefined 
+			&& null != referer 
+			&& "" != referer
+			&& "null" != referer
+			&& referer.length > 4){
+		 window.location.href = referer;
+		}else{
+			history.back(-1);
+		}
+	});
+});
\ No newline at end of file
Index: src/main/resources/rebel.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/resources/rebel.xml	(date 1594524138994)
+++ src/main/resources/rebel.xml	(date 1594524138994)
@@ -0,0 +1,21 @@
+<?xml version="1.0" encoding="UTF-8"?>
+
+<!--
+  This is the JRebel configuration file. It maps the running application to your IDE workspace, enabling JRebel reloading for this project.
+  Refer to https://manuals.jrebel.com/jrebel/standalone/config.html for more information.
+-->
+<application generated-by="intellij" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://www.zeroturnaround.com" xsi:schemaLocation="http://www.zeroturnaround.com http://update.zeroturnaround.com/jrebel/rebel-2_1.xsd">
+
+	<classpath>
+		<dir name="F:/电商云上/日考/李金超0707日考文件/SuperMarketMaven/target/classes">
+		</dir>
+	</classpath>
+
+	<web>
+		<link target="/">
+			<dir name="F:/电商云上/日考/李金超0707日考文件/SuperMarketMaven/src/main/webapp">
+			</dir>
+		</link>
+	</web>
+
+</application>
Index: src/main/webapp/statics/js/jquery-1.8.3.min.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/webapp/statics/js/jquery-1.8.3.min.js	(date 1578576592437)
+++ src/main/webapp/statics/js/jquery-1.8.3.min.js	(date 1578576592437)
@@ -0,0 +1,2 @@
+/*! jQuery v1.8.3 jquery.com | jquery.org/license */
+(function(e,t){function _(e){var t=M[e]={};return v.each(e.split(y),function(e,n){t[n]=!0}),t}function H(e,n,r){if(r===t&&e.nodeType===1){var i="data-"+n.replace(P,"-$1").toLowerCase();r=e.getAttribute(i);if(typeof r=="string"){try{r=r==="true"?!0:r==="false"?!1:r==="null"?null:+r+""===r?+r:D.test(r)?v.parseJSON(r):r}catch(s){}v.data(e,n,r)}else r=t}return r}function B(e){var t;for(t in e){if(t==="data"&&v.isEmptyObject(e[t]))continue;if(t!=="toJSON")return!1}return!0}function et(){return!1}function tt(){return!0}function ut(e){return!e||!e.parentNode||e.parentNode.nodeType===11}function at(e,t){do e=e[t];while(e&&e.nodeType!==1);return e}function ft(e,t,n){t=t||0;if(v.isFunction(t))return v.grep(e,function(e,r){var i=!!t.call(e,r,e);return i===n});if(t.nodeType)return v.grep(e,function(e,r){return e===t===n});if(typeof t=="string"){var r=v.grep(e,function(e){return e.nodeType===1});if(it.test(t))return v.filter(t,r,!n);t=v.filter(t,r)}return v.grep(e,function(e,r){return v.inArray(e,t)>=0===n})}function lt(e){var t=ct.split("|"),n=e.createDocumentFragment();if(n.createElement)while(t.length)n.createElement(t.pop());return n}function Lt(e,t){return e.getElementsByTagName(t)[0]||e.appendChild(e.ownerDocument.createElement(t))}function At(e,t){if(t.nodeType!==1||!v.hasData(e))return;var n,r,i,s=v._data(e),o=v._data(t,s),u=s.events;if(u){delete o.handle,o.events={};for(n in u)for(r=0,i=u[n].length;r<i;r++)v.event.add(t,n,u[n][r])}o.data&&(o.data=v.extend({},o.data))}function Ot(e,t){var n;if(t.nodeType!==1)return;t.clearAttributes&&t.clearAttributes(),t.mergeAttributes&&t.mergeAttributes(e),n=t.nodeName.toLowerCase(),n==="object"?(t.parentNode&&(t.outerHTML=e.outerHTML),v.support.html5Clone&&e.innerHTML&&!v.trim(t.innerHTML)&&(t.innerHTML=e.innerHTML)):n==="input"&&Et.test(e.type)?(t.defaultChecked=t.checked=e.checked,t.value!==e.value&&(t.value=e.value)):n==="option"?t.selected=e.defaultSelected:n==="input"||n==="textarea"?t.defaultValue=e.defaultValue:n==="script"&&t.text!==e.text&&(t.text=e.text),t.removeAttribute(v.expando)}function Mt(e){return typeof e.getElementsByTagName!="undefined"?e.getElementsByTagName("*"):typeof e.querySelectorAll!="undefined"?e.querySelectorAll("*"):[]}function _t(e){Et.test(e.type)&&(e.defaultChecked=e.checked)}function Qt(e,t){if(t in e)return t;var n=t.charAt(0).toUpperCase()+t.slice(1),r=t,i=Jt.length;while(i--){t=Jt[i]+n;if(t in e)return t}return r}function Gt(e,t){return e=t||e,v.css(e,"display")==="none"||!v.contains(e.ownerDocument,e)}function Yt(e,t){var n,r,i=[],s=0,o=e.length;for(;s<o;s++){n=e[s];if(!n.style)continue;i[s]=v._data(n,"olddisplay"),t?(!i[s]&&n.style.display==="none"&&(n.style.display=""),n.style.display===""&&Gt(n)&&(i[s]=v._data(n,"olddisplay",nn(n.nodeName)))):(r=Dt(n,"display"),!i[s]&&r!=="none"&&v._data(n,"olddisplay",r))}for(s=0;s<o;s++){n=e[s];if(!n.style)continue;if(!t||n.style.display==="none"||n.style.display==="")n.style.display=t?i[s]||"":"none"}return e}function Zt(e,t,n){var r=Rt.exec(t);return r?Math.max(0,r[1]-(n||0))+(r[2]||"px"):t}function en(e,t,n,r){var i=n===(r?"border":"content")?4:t==="width"?1:0,s=0;for(;i<4;i+=2)n==="margin"&&(s+=v.css(e,n+$t[i],!0)),r?(n==="content"&&(s-=parseFloat(Dt(e,"padding"+$t[i]))||0),n!=="margin"&&(s-=parseFloat(Dt(e,"border"+$t[i]+"Width"))||0)):(s+=parseFloat(Dt(e,"padding"+$t[i]))||0,n!=="padding"&&(s+=parseFloat(Dt(e,"border"+$t[i]+"Width"))||0));return s}function tn(e,t,n){var r=t==="width"?e.offsetWidth:e.offsetHeight,i=!0,s=v.support.boxSizing&&v.css(e,"boxSizing")==="border-box";if(r<=0||r==null){r=Dt(e,t);if(r<0||r==null)r=e.style[t];if(Ut.test(r))return r;i=s&&(v.support.boxSizingReliable||r===e.style[t]),r=parseFloat(r)||0}return r+en(e,t,n||(s?"border":"content"),i)+"px"}function nn(e){if(Wt[e])return Wt[e];var t=v("<"+e+">").appendTo(i.body),n=t.css("display");t.remove();if(n==="none"||n===""){Pt=i.body.appendChild(Pt||v.extend(i.createElement("iframe"),{frameBorder:0,width:0,height:0}));if(!Ht||!Pt.createElement)Ht=(Pt.contentWindow||Pt.contentDocument).document,Ht.write("<!doctype html><html><body>"),Ht.close();t=Ht.body.appendChild(Ht.createElement(e)),n=Dt(t,"display"),i.body.removeChild(Pt)}return Wt[e]=n,n}function fn(e,t,n,r){var i;if(v.isArray(t))v.each(t,function(t,i){n||sn.test(e)?r(e,i):fn(e+"["+(typeof i=="object"?t:"")+"]",i,n,r)});else if(!n&&v.type(t)==="object")for(i in t)fn(e+"["+i+"]",t[i],n,r);else r(e,t)}function Cn(e){return function(t,n){typeof t!="string"&&(n=t,t="*");var r,i,s,o=t.toLowerCase().split(y),u=0,a=o.length;if(v.isFunction(n))for(;u<a;u++)r=o[u],s=/^\+/.test(r),s&&(r=r.substr(1)||"*"),i=e[r]=e[r]||[],i[s?"unshift":"push"](n)}}function kn(e,n,r,i,s,o){s=s||n.dataTypes[0],o=o||{},o[s]=!0;var u,a=e[s],f=0,l=a?a.length:0,c=e===Sn;for(;f<l&&(c||!u);f++)u=a[f](n,r,i),typeof u=="string"&&(!c||o[u]?u=t:(n.dataTypes.unshift(u),u=kn(e,n,r,i,u,o)));return(c||!u)&&!o["*"]&&(u=kn(e,n,r,i,"*",o)),u}function Ln(e,n){var r,i,s=v.ajaxSettings.flatOptions||{};for(r in n)n[r]!==t&&((s[r]?e:i||(i={}))[r]=n[r]);i&&v.extend(!0,e,i)}function An(e,n,r){var i,s,o,u,a=e.contents,f=e.dataTypes,l=e.responseFields;for(s in l)s in r&&(n[l[s]]=r[s]);while(f[0]==="*")f.shift(),i===t&&(i=e.mimeType||n.getResponseHeader("content-type"));if(i)for(s in a)if(a[s]&&a[s].test(i)){f.unshift(s);break}if(f[0]in r)o=f[0];else{for(s in r){if(!f[0]||e.converters[s+" "+f[0]]){o=s;break}u||(u=s)}o=o||u}if(o)return o!==f[0]&&f.unshift(o),r[o]}function On(e,t){var n,r,i,s,o=e.dataTypes.slice(),u=o[0],a={},f=0;e.dataFilter&&(t=e.dataFilter(t,e.dataType));if(o[1])for(n in e.converters)a[n.toLowerCase()]=e.converters[n];for(;i=o[++f];)if(i!=="*"){if(u!=="*"&&u!==i){n=a[u+" "+i]||a["* "+i];if(!n)for(r in a){s=r.split(" ");if(s[1]===i){n=a[u+" "+s[0]]||a["* "+s[0]];if(n){n===!0?n=a[r]:a[r]!==!0&&(i=s[0],o.splice(f--,0,i));break}}}if(n!==!0)if(n&&e["throws"])t=n(t);else try{t=n(t)}catch(l){return{state:"parsererror",error:n?l:"No conversion from "+u+" to "+i}}}u=i}return{state:"success",data:t}}function Fn(){try{return new e.XMLHttpRequest}catch(t){}}function In(){try{return new e.ActiveXObject("Microsoft.XMLHTTP")}catch(t){}}function $n(){return setTimeout(function(){qn=t},0),qn=v.now()}function Jn(e,t){v.each(t,function(t,n){var r=(Vn[t]||[]).concat(Vn["*"]),i=0,s=r.length;for(;i<s;i++)if(r[i].call(e,t,n))return})}function Kn(e,t,n){var r,i=0,s=0,o=Xn.length,u=v.Deferred().always(function(){delete a.elem}),a=function(){var t=qn||$n(),n=Math.max(0,f.startTime+f.duration-t),r=n/f.duration||0,i=1-r,s=0,o=f.tweens.length;for(;s<o;s++)f.tweens[s].run(i);return u.notifyWith(e,[f,i,n]),i<1&&o?n:(u.resolveWith(e,[f]),!1)},f=u.promise({elem:e,props:v.extend({},t),opts:v.extend(!0,{specialEasing:{}},n),originalProperties:t,originalOptions:n,startTime:qn||$n(),duration:n.duration,tweens:[],createTween:function(t,n,r){var i=v.Tween(e,f.opts,t,n,f.opts.specialEasing[t]||f.opts.easing);return f.tweens.push(i),i},stop:function(t){var n=0,r=t?f.tweens.length:0;for(;n<r;n++)f.tweens[n].run(1);return t?u.resolveWith(e,[f,t]):u.rejectWith(e,[f,t]),this}}),l=f.props;Qn(l,f.opts.specialEasing);for(;i<o;i++){r=Xn[i].call(f,e,l,f.opts);if(r)return r}return Jn(f,l),v.isFunction(f.opts.start)&&f.opts.start.call(e,f),v.fx.timer(v.extend(a,{anim:f,queue:f.opts.queue,elem:e})),f.progress(f.opts.progress).done(f.opts.done,f.opts.complete).fail(f.opts.fail).always(f.opts.always)}function Qn(e,t){var n,r,i,s,o;for(n in e){r=v.camelCase(n),i=t[r],s=e[n],v.isArray(s)&&(i=s[1],s=e[n]=s[0]),n!==r&&(e[r]=s,delete e[n]),o=v.cssHooks[r];if(o&&"expand"in o){s=o.expand(s),delete e[r];for(n in s)n in e||(e[n]=s[n],t[n]=i)}else t[r]=i}}function Gn(e,t,n){var r,i,s,o,u,a,f,l,c,h=this,p=e.style,d={},m=[],g=e.nodeType&&Gt(e);n.queue||(l=v._queueHooks(e,"fx"),l.unqueued==null&&(l.unqueued=0,c=l.empty.fire,l.empty.fire=function(){l.unqueued||c()}),l.unqueued++,h.always(function(){h.always(function(){l.unqueued--,v.queue(e,"fx").length||l.empty.fire()})})),e.nodeType===1&&("height"in t||"width"in t)&&(n.overflow=[p.overflow,p.overflowX,p.overflowY],v.css(e,"display")==="inline"&&v.css(e,"float")==="none"&&(!v.support.inlineBlockNeedsLayout||nn(e.nodeName)==="inline"?p.display="inline-block":p.zoom=1)),n.overflow&&(p.overflow="hidden",v.support.shrinkWrapBlocks||h.done(function(){p.overflow=n.overflow[0],p.overflowX=n.overflow[1],p.overflowY=n.overflow[2]}));for(r in t){s=t[r];if(Un.exec(s)){delete t[r],a=a||s==="toggle";if(s===(g?"hide":"show"))continue;m.push(r)}}o=m.length;if(o){u=v._data(e,"fxshow")||v._data(e,"fxshow",{}),"hidden"in u&&(g=u.hidden),a&&(u.hidden=!g),g?v(e).show():h.done(function(){v(e).hide()}),h.done(function(){var t;v.removeData(e,"fxshow",!0);for(t in d)v.style(e,t,d[t])});for(r=0;r<o;r++)i=m[r],f=h.createTween(i,g?u[i]:0),d[i]=u[i]||v.style(e,i),i in u||(u[i]=f.start,g&&(f.end=f.start,f.start=i==="width"||i==="height"?1:0))}}function Yn(e,t,n,r,i){return new Yn.prototype.init(e,t,n,r,i)}function Zn(e,t){var n,r={height:e},i=0;t=t?1:0;for(;i<4;i+=2-t)n=$t[i],r["margin"+n]=r["padding"+n]=e;return t&&(r.opacity=r.width=e),r}function tr(e){return v.isWindow(e)?e:e.nodeType===9?e.defaultView||e.parentWindow:!1}var n,r,i=e.document,s=e.location,o=e.navigator,u=e.jQuery,a=e.$,f=Array.prototype.push,l=Array.prototype.slice,c=Array.prototype.indexOf,h=Object.prototype.toString,p=Object.prototype.hasOwnProperty,d=String.prototype.trim,v=function(e,t){return new v.fn.init(e,t,n)},m=/[\-+]?(?:\d*\.|)\d+(?:[eE][\-+]?\d+|)/.source,g=/\S/,y=/\s+/,b=/^[\s\uFEFF\xA0]+|[\s\uFEFF\xA0]+$/g,w=/^(?:[^#<]*(<[\w\W]+>)[^>]*$|#([\w\-]*)$)/,E=/^<(\w+)\s*\/?>(?:<\/\1>|)$/,S=/^[\],:{}\s]*$/,x=/(?:^|:|,)(?:\s*\[)+/g,T=/\\(?:["\\\/bfnrt]|u[\da-fA-F]{4})/g,N=/"[^"\\\r\n]*"|true|false|null|-?(?:\d\d*\.|)\d+(?:[eE][\-+]?\d+|)/g,C=/^-ms-/,k=/-([\da-z])/gi,L=function(e,t){return(t+"").toUpperCase()},A=function(){i.addEventListener?(i.removeEventListener("DOMContentLoaded",A,!1),v.ready()):i.readyState==="complete"&&(i.detachEvent("onreadystatechange",A),v.ready())},O={};v.fn=v.prototype={constructor:v,init:function(e,n,r){var s,o,u,a;if(!e)return this;if(e.nodeType)return this.context=this[0]=e,this.length=1,this;if(typeof e=="string"){e.charAt(0)==="<"&&e.charAt(e.length-1)===">"&&e.length>=3?s=[null,e,null]:s=w.exec(e);if(s&&(s[1]||!n)){if(s[1])return n=n instanceof v?n[0]:n,a=n&&n.nodeType?n.ownerDocument||n:i,e=v.parseHTML(s[1],a,!0),E.test(s[1])&&v.isPlainObject(n)&&this.attr.call(e,n,!0),v.merge(this,e);o=i.getElementById(s[2]);if(o&&o.parentNode){if(o.id!==s[2])return r.find(e);this.length=1,this[0]=o}return this.context=i,this.selector=e,this}return!n||n.jquery?(n||r).find(e):this.constructor(n).find(e)}return v.isFunction(e)?r.ready(e):(e.selector!==t&&(this.selector=e.selector,this.context=e.context),v.makeArray(e,this))},selector:"",jquery:"1.8.3",length:0,size:function(){return this.length},toArray:function(){return l.call(this)},get:function(e){return e==null?this.toArray():e<0?this[this.length+e]:this[e]},pushStack:function(e,t,n){var r=v.merge(this.constructor(),e);return r.prevObject=this,r.context=this.context,t==="find"?r.selector=this.selector+(this.selector?" ":"")+n:t&&(r.selector=this.selector+"."+t+"("+n+")"),r},each:function(e,t){return v.each(this,e,t)},ready:function(e){return v.ready.promise().done(e),this},eq:function(e){return e=+e,e===-1?this.slice(e):this.slice(e,e+1)},first:function(){return this.eq(0)},last:function(){return this.eq(-1)},slice:function(){return this.pushStack(l.apply(this,arguments),"slice",l.call(arguments).join(","))},map:function(e){return this.pushStack(v.map(this,function(t,n){return e.call(t,n,t)}))},end:function(){return this.prevObject||this.constructor(null)},push:f,sort:[].sort,splice:[].splice},v.fn.init.prototype=v.fn,v.extend=v.fn.extend=function(){var e,n,r,i,s,o,u=arguments[0]||{},a=1,f=arguments.length,l=!1;typeof u=="boolean"&&(l=u,u=arguments[1]||{},a=2),typeof u!="object"&&!v.isFunction(u)&&(u={}),f===a&&(u=this,--a);for(;a<f;a++)if((e=arguments[a])!=null)for(n in e){r=u[n],i=e[n];if(u===i)continue;l&&i&&(v.isPlainObject(i)||(s=v.isArray(i)))?(s?(s=!1,o=r&&v.isArray(r)?r:[]):o=r&&v.isPlainObject(r)?r:{},u[n]=v.extend(l,o,i)):i!==t&&(u[n]=i)}return u},v.extend({noConflict:function(t){return e.$===v&&(e.$=a),t&&e.jQuery===v&&(e.jQuery=u),v},isReady:!1,readyWait:1,holdReady:function(e){e?v.readyWait++:v.ready(!0)},ready:function(e){if(e===!0?--v.readyWait:v.isReady)return;if(!i.body)return setTimeout(v.ready,1);v.isReady=!0;if(e!==!0&&--v.readyWait>0)return;r.resolveWith(i,[v]),v.fn.trigger&&v(i).trigger("ready").off("ready")},isFunction:function(e){return v.type(e)==="function"},isArray:Array.isArray||function(e){return v.type(e)==="array"},isWindow:function(e){return e!=null&&e==e.window},isNumeric:function(e){return!isNaN(parseFloat(e))&&isFinite(e)},type:function(e){return e==null?String(e):O[h.call(e)]||"object"},isPlainObject:function(e){if(!e||v.type(e)!=="object"||e.nodeType||v.isWindow(e))return!1;try{if(e.constructor&&!p.call(e,"constructor")&&!p.call(e.constructor.prototype,"isPrototypeOf"))return!1}catch(n){return!1}var r;for(r in e);return r===t||p.call(e,r)},isEmptyObject:function(e){var t;for(t in e)return!1;return!0},error:function(e){throw new Error(e)},parseHTML:function(e,t,n){var r;return!e||typeof e!="string"?null:(typeof t=="boolean"&&(n=t,t=0),t=t||i,(r=E.exec(e))?[t.createElement(r[1])]:(r=v.buildFragment([e],t,n?null:[]),v.merge([],(r.cacheable?v.clone(r.fragment):r.fragment).childNodes)))},parseJSON:function(t){if(!t||typeof t!="string")return null;t=v.trim(t);if(e.JSON&&e.JSON.parse)return e.JSON.parse(t);if(S.test(t.replace(T,"@").replace(N,"]").replace(x,"")))return(new Function("return "+t))();v.error("Invalid JSON: "+t)},parseXML:function(n){var r,i;if(!n||typeof n!="string")return null;try{e.DOMParser?(i=new DOMParser,r=i.parseFromString(n,"text/xml")):(r=new ActiveXObject("Microsoft.XMLDOM"),r.async="false",r.loadXML(n))}catch(s){r=t}return(!r||!r.documentElement||r.getElementsByTagName("parsererror").length)&&v.error("Invalid XML: "+n),r},noop:function(){},globalEval:function(t){t&&g.test(t)&&(e.execScript||function(t){e.eval.call(e,t)})(t)},camelCase:function(e){return e.replace(C,"ms-").replace(k,L)},nodeName:function(e,t){return e.nodeName&&e.nodeName.toLowerCase()===t.toLowerCase()},each:function(e,n,r){var i,s=0,o=e.length,u=o===t||v.isFunction(e);if(r){if(u){for(i in e)if(n.apply(e[i],r)===!1)break}else for(;s<o;)if(n.apply(e[s++],r)===!1)break}else if(u){for(i in e)if(n.call(e[i],i,e[i])===!1)break}else for(;s<o;)if(n.call(e[s],s,e[s++])===!1)break;return e},trim:d&&!d.call("\ufeff\u00a0")?function(e){return e==null?"":d.call(e)}:function(e){return e==null?"":(e+"").replace(b,"")},makeArray:function(e,t){var n,r=t||[];return e!=null&&(n=v.type(e),e.length==null||n==="string"||n==="function"||n==="regexp"||v.isWindow(e)?f.call(r,e):v.merge(r,e)),r},inArray:function(e,t,n){var r;if(t){if(c)return c.call(t,e,n);r=t.length,n=n?n<0?Math.max(0,r+n):n:0;for(;n<r;n++)if(n in t&&t[n]===e)return n}return-1},merge:function(e,n){var r=n.length,i=e.length,s=0;if(typeof r=="number")for(;s<r;s++)e[i++]=n[s];else while(n[s]!==t)e[i++]=n[s++];return e.length=i,e},grep:function(e,t,n){var r,i=[],s=0,o=e.length;n=!!n;for(;s<o;s++)r=!!t(e[s],s),n!==r&&i.push(e[s]);return i},map:function(e,n,r){var i,s,o=[],u=0,a=e.length,f=e instanceof v||a!==t&&typeof a=="number"&&(a>0&&e[0]&&e[a-1]||a===0||v.isArray(e));if(f)for(;u<a;u++)i=n(e[u],u,r),i!=null&&(o[o.length]=i);else for(s in e)i=n(e[s],s,r),i!=null&&(o[o.length]=i);return o.concat.apply([],o)},guid:1,proxy:function(e,n){var r,i,s;return typeof n=="string"&&(r=e[n],n=e,e=r),v.isFunction(e)?(i=l.call(arguments,2),s=function(){return e.apply(n,i.concat(l.call(arguments)))},s.guid=e.guid=e.guid||v.guid++,s):t},access:function(e,n,r,i,s,o,u){var a,f=r==null,l=0,c=e.length;if(r&&typeof r=="object"){for(l in r)v.access(e,n,l,r[l],1,o,i);s=1}else if(i!==t){a=u===t&&v.isFunction(i),f&&(a?(a=n,n=function(e,t,n){return a.call(v(e),n)}):(n.call(e,i),n=null));if(n)for(;l<c;l++)n(e[l],r,a?i.call(e[l],l,n(e[l],r)):i,u);s=1}return s?e:f?n.call(e):c?n(e[0],r):o},now:function(){return(new Date).getTime()}}),v.ready.promise=function(t){if(!r){r=v.Deferred();if(i.readyState==="complete")setTimeout(v.ready,1);else if(i.addEventListener)i.addEventListener("DOMContentLoaded",A,!1),e.addEventListener("load",v.ready,!1);else{i.attachEvent("onreadystatechange",A),e.attachEvent("onload",v.ready);var n=!1;try{n=e.frameElement==null&&i.documentElement}catch(s){}n&&n.doScroll&&function o(){if(!v.isReady){try{n.doScroll("left")}catch(e){return setTimeout(o,50)}v.ready()}}()}}return r.promise(t)},v.each("Boolean Number String Function Array Date RegExp Object".split(" "),function(e,t){O["[object "+t+"]"]=t.toLowerCase()}),n=v(i);var M={};v.Callbacks=function(e){e=typeof e=="string"?M[e]||_(e):v.extend({},e);var n,r,i,s,o,u,a=[],f=!e.once&&[],l=function(t){n=e.memory&&t,r=!0,u=s||0,s=0,o=a.length,i=!0;for(;a&&u<o;u++)if(a[u].apply(t[0],t[1])===!1&&e.stopOnFalse){n=!1;break}i=!1,a&&(f?f.length&&l(f.shift()):n?a=[]:c.disable())},c={add:function(){if(a){var t=a.length;(function r(t){v.each(t,function(t,n){var i=v.type(n);i==="function"?(!e.unique||!c.has(n))&&a.push(n):n&&n.length&&i!=="string"&&r(n)})})(arguments),i?o=a.length:n&&(s=t,l(n))}return this},remove:function(){return a&&v.each(arguments,function(e,t){var n;while((n=v.inArray(t,a,n))>-1)a.splice(n,1),i&&(n<=o&&o--,n<=u&&u--)}),this},has:function(e){return v.inArray(e,a)>-1},empty:function(){return a=[],this},disable:function(){return a=f=n=t,this},disabled:function(){return!a},lock:function(){return f=t,n||c.disable(),this},locked:function(){return!f},fireWith:function(e,t){return t=t||[],t=[e,t.slice?t.slice():t],a&&(!r||f)&&(i?f.push(t):l(t)),this},fire:function(){return c.fireWith(this,arguments),this},fired:function(){return!!r}};return c},v.extend({Deferred:function(e){var t=[["resolve","done",v.Callbacks("once memory"),"resolved"],["reject","fail",v.Callbacks("once memory"),"rejected"],["notify","progress",v.Callbacks("memory")]],n="pending",r={state:function(){return n},always:function(){return i.done(arguments).fail(arguments),this},then:function(){var e=arguments;return v.Deferred(function(n){v.each(t,function(t,r){var s=r[0],o=e[t];i[r[1]](v.isFunction(o)?function(){var e=o.apply(this,arguments);e&&v.isFunction(e.promise)?e.promise().done(n.resolve).fail(n.reject).progress(n.notify):n[s+"With"](this===i?n:this,[e])}:n[s])}),e=null}).promise()},promise:function(e){return e!=null?v.extend(e,r):r}},i={};return r.pipe=r.then,v.each(t,function(e,s){var o=s[2],u=s[3];r[s[1]]=o.add,u&&o.add(function(){n=u},t[e^1][2].disable,t[2][2].lock),i[s[0]]=o.fire,i[s[0]+"With"]=o.fireWith}),r.promise(i),e&&e.call(i,i),i},when:function(e){var t=0,n=l.call(arguments),r=n.length,i=r!==1||e&&v.isFunction(e.promise)?r:0,s=i===1?e:v.Deferred(),o=function(e,t,n){return function(r){t[e]=this,n[e]=arguments.length>1?l.call(arguments):r,n===u?s.notifyWith(t,n):--i||s.resolveWith(t,n)}},u,a,f;if(r>1){u=new Array(r),a=new Array(r),f=new Array(r);for(;t<r;t++)n[t]&&v.isFunction(n[t].promise)?n[t].promise().done(o(t,f,n)).fail(s.reject).progress(o(t,a,u)):--i}return i||s.resolveWith(f,n),s.promise()}}),v.support=function(){var t,n,r,s,o,u,a,f,l,c,h,p=i.createElement("div");p.setAttribute("className","t"),p.innerHTML="  <link/><table></table><a href='/a'>a</a><input type='checkbox'/>",n=p.getElementsByTagName("*"),r=p.getElementsByTagName("a")[0];if(!n||!r||!n.length)return{};s=i.createElement("select"),o=s.appendChild(i.createElement("option")),u=p.getElementsByTagName("input")[0],r.style.cssText="top:1px;float:left;opacity:.5",t={leadingWhitespace:p.firstChild.nodeType===3,tbody:!p.getElementsByTagName("tbody").length,htmlSerialize:!!p.getElementsByTagName("link").length,style:/top/.test(r.getAttribute("style")),hrefNormalized:r.getAttribute("href")==="/a",opacity:/^0.5/.test(r.style.opacity),cssFloat:!!r.style.cssFloat,checkOn:u.value==="on",optSelected:o.selected,getSetAttribute:p.className!=="t",enctype:!!i.createElement("form").enctype,html5Clone:i.createElement("nav").cloneNode(!0).outerHTML!=="<:nav></:nav>",boxModel:i.compatMode==="CSS1Compat",submitBubbles:!0,changeBubbles:!0,focusinBubbles:!1,deleteExpando:!0,noCloneEvent:!0,inlineBlockNeedsLayout:!1,shrinkWrapBlocks:!1,reliableMarginRight:!0,boxSizingReliable:!0,pixelPosition:!1},u.checked=!0,t.noCloneChecked=u.cloneNode(!0).checked,s.disabled=!0,t.optDisabled=!o.disabled;try{delete p.test}catch(d){t.deleteExpando=!1}!p.addEventListener&&p.attachEvent&&p.fireEvent&&(p.attachEvent("onclick",h=function(){t.noCloneEvent=!1}),p.cloneNode(!0).fireEvent("onclick"),p.detachEvent("onclick",h)),u=i.createElement("input"),u.value="t",u.setAttribute("type","radio"),t.radioValue=u.value==="t",u.setAttribute("checked","checked"),u.setAttribute("name","t"),p.appendChild(u),a=i.createDocumentFragment(),a.appendChild(p.lastChild),t.checkClone=a.cloneNode(!0).cloneNode(!0).lastChild.checked,t.appendChecked=u.checked,a.removeChild(u),a.appendChild(p);if(p.attachEvent)for(l in{submit:!0,change:!0,focusin:!0})f="on"+l,c=f in p,c||(p.setAttribute(f,"return;"),c=typeof p[f]=="function"),t[l+"Bubbles"]=c;return v(function(){var n,r,s,o,u="padding:0;margin:0;border:0;display:block;overflow:hidden;",a=i.getElementsByTagName("body")[0];if(!a)return;n=i.createElement("div"),n.style.cssText="visibility:hidden;border:0;width:0;height:0;position:static;top:0;margin-top:1px",a.insertBefore(n,a.firstChild),r=i.createElement("div"),n.appendChild(r),r.innerHTML="<table><tr><td></td><td>t</td></tr></table>",s=r.getElementsByTagName("td"),s[0].style.cssText="padding:0;margin:0;border:0;display:none",c=s[0].offsetHeight===0,s[0].style.display="",s[1].style.display="none",t.reliableHiddenOffsets=c&&s[0].offsetHeight===0,r.innerHTML="",r.style.cssText="box-sizing:border-box;-moz-box-sizing:border-box;-webkit-box-sizing:border-box;padding:1px;border:1px;display:block;width:4px;margin-top:1%;position:absolute;top:1%;",t.boxSizing=r.offsetWidth===4,t.doesNotIncludeMarginInBodyOffset=a.offsetTop!==1,e.getComputedStyle&&(t.pixelPosition=(e.getComputedStyle(r,null)||{}).top!=="1%",t.boxSizingReliable=(e.getComputedStyle(r,null)||{width:"4px"}).width==="4px",o=i.createElement("div"),o.style.cssText=r.style.cssText=u,o.style.marginRight=o.style.width="0",r.style.width="1px",r.appendChild(o),t.reliableMarginRight=!parseFloat((e.getComputedStyle(o,null)||{}).marginRight)),typeof r.style.zoom!="undefined"&&(r.innerHTML="",r.style.cssText=u+"width:1px;padding:1px;display:inline;zoom:1",t.inlineBlockNeedsLayout=r.offsetWidth===3,r.style.display="block",r.style.overflow="visible",r.innerHTML="<div></div>",r.firstChild.style.width="5px",t.shrinkWrapBlocks=r.offsetWidth!==3,n.style.zoom=1),a.removeChild(n),n=r=s=o=null}),a.removeChild(p),n=r=s=o=u=a=p=null,t}();var D=/(?:\{[\s\S]*\}|\[[\s\S]*\])$/,P=/([A-Z])/g;v.extend({cache:{},deletedIds:[],uuid:0,expando:"jQuery"+(v.fn.jquery+Math.random()).replace(/\D/g,""),noData:{embed:!0,object:"clsid:D27CDB6E-AE6D-11cf-96B8-444553540000",applet:!0},hasData:function(e){return e=e.nodeType?v.cache[e[v.expando]]:e[v.expando],!!e&&!B(e)},data:function(e,n,r,i){if(!v.acceptData(e))return;var s,o,u=v.expando,a=typeof n=="string",f=e.nodeType,l=f?v.cache:e,c=f?e[u]:e[u]&&u;if((!c||!l[c]||!i&&!l[c].data)&&a&&r===t)return;c||(f?e[u]=c=v.deletedIds.pop()||v.guid++:c=u),l[c]||(l[c]={},f||(l[c].toJSON=v.noop));if(typeof n=="object"||typeof n=="function")i?l[c]=v.extend(l[c],n):l[c].data=v.extend(l[c].data,n);return s=l[c],i||(s.data||(s.data={}),s=s.data),r!==t&&(s[v.camelCase(n)]=r),a?(o=s[n],o==null&&(o=s[v.camelCase(n)])):o=s,o},removeData:function(e,t,n){if(!v.acceptData(e))return;var r,i,s,o=e.nodeType,u=o?v.cache:e,a=o?e[v.expando]:v.expando;if(!u[a])return;if(t){r=n?u[a]:u[a].data;if(r){v.isArray(t)||(t in r?t=[t]:(t=v.camelCase(t),t in r?t=[t]:t=t.split(" ")));for(i=0,s=t.length;i<s;i++)delete r[t[i]];if(!(n?B:v.isEmptyObject)(r))return}}if(!n){delete u[a].data;if(!B(u[a]))return}o?v.cleanData([e],!0):v.support.deleteExpando||u!=u.window?delete u[a]:u[a]=null},_data:function(e,t,n){return v.data(e,t,n,!0)},acceptData:function(e){var t=e.nodeName&&v.noData[e.nodeName.toLowerCase()];return!t||t!==!0&&e.getAttribute("classid")===t}}),v.fn.extend({data:function(e,n){var r,i,s,o,u,a=this[0],f=0,l=null;if(e===t){if(this.length){l=v.data(a);if(a.nodeType===1&&!v._data(a,"parsedAttrs")){s=a.attributes;for(u=s.length;f<u;f++)o=s[f].name,o.indexOf("data-")||(o=v.camelCase(o.substring(5)),H(a,o,l[o]));v._data(a,"parsedAttrs",!0)}}return l}return typeof e=="object"?this.each(function(){v.data(this,e)}):(r=e.split(".",2),r[1]=r[1]?"."+r[1]:"",i=r[1]+"!",v.access(this,function(n){if(n===t)return l=this.triggerHandler("getData"+i,[r[0]]),l===t&&a&&(l=v.data(a,e),l=H(a,e,l)),l===t&&r[1]?this.data(r[0]):l;r[1]=n,this.each(function(){var t=v(this);t.triggerHandler("setData"+i,r),v.data(this,e,n),t.triggerHandler("changeData"+i,r)})},null,n,arguments.length>1,null,!1))},removeData:function(e){return this.each(function(){v.removeData(this,e)})}}),v.extend({queue:function(e,t,n){var r;if(e)return t=(t||"fx")+"queue",r=v._data(e,t),n&&(!r||v.isArray(n)?r=v._data(e,t,v.makeArray(n)):r.push(n)),r||[]},dequeue:function(e,t){t=t||"fx";var n=v.queue(e,t),r=n.length,i=n.shift(),s=v._queueHooks(e,t),o=function(){v.dequeue(e,t)};i==="inprogress"&&(i=n.shift(),r--),i&&(t==="fx"&&n.unshift("inprogress"),delete s.stop,i.call(e,o,s)),!r&&s&&s.empty.fire()},_queueHooks:function(e,t){var n=t+"queueHooks";return v._data(e,n)||v._data(e,n,{empty:v.Callbacks("once memory").add(function(){v.removeData(e,t+"queue",!0),v.removeData(e,n,!0)})})}}),v.fn.extend({queue:function(e,n){var r=2;return typeof e!="string"&&(n=e,e="fx",r--),arguments.length<r?v.queue(this[0],e):n===t?this:this.each(function(){var t=v.queue(this,e,n);v._queueHooks(this,e),e==="fx"&&t[0]!=="inprogress"&&v.dequeue(this,e)})},dequeue:function(e){return this.each(function(){v.dequeue(this,e)})},delay:function(e,t){return e=v.fx?v.fx.speeds[e]||e:e,t=t||"fx",this.queue(t,function(t,n){var r=setTimeout(t,e);n.stop=function(){clearTimeout(r)}})},clearQueue:function(e){return this.queue(e||"fx",[])},promise:function(e,n){var r,i=1,s=v.Deferred(),o=this,u=this.length,a=function(){--i||s.resolveWith(o,[o])};typeof e!="string"&&(n=e,e=t),e=e||"fx";while(u--)r=v._data(o[u],e+"queueHooks"),r&&r.empty&&(i++,r.empty.add(a));return a(),s.promise(n)}});var j,F,I,q=/[\t\r\n]/g,R=/\r/g,U=/^(?:button|input)$/i,z=/^(?:button|input|object|select|textarea)$/i,W=/^a(?:rea|)$/i,X=/^(?:autofocus|autoplay|async|checked|controls|defer|disabled|hidden|loop|multiple|open|readonly|required|scoped|selected)$/i,V=v.support.getSetAttribute;v.fn.extend({attr:function(e,t){return v.access(this,v.attr,e,t,arguments.length>1)},removeAttr:function(e){return this.each(function(){v.removeAttr(this,e)})},prop:function(e,t){return v.access(this,v.prop,e,t,arguments.length>1)},removeProp:function(e){return e=v.propFix[e]||e,this.each(function(){try{this[e]=t,delete this[e]}catch(n){}})},addClass:function(e){var t,n,r,i,s,o,u;if(v.isFunction(e))return this.each(function(t){v(this).addClass(e.call(this,t,this.className))});if(e&&typeof e=="string"){t=e.split(y);for(n=0,r=this.length;n<r;n++){i=this[n];if(i.nodeType===1)if(!i.className&&t.length===1)i.className=e;else{s=" "+i.className+" ";for(o=0,u=t.length;o<u;o++)s.indexOf(" "+t[o]+" ")<0&&(s+=t[o]+" ");i.className=v.trim(s)}}}return this},removeClass:function(e){var n,r,i,s,o,u,a;if(v.isFunction(e))return this.each(function(t){v(this).removeClass(e.call(this,t,this.className))});if(e&&typeof e=="string"||e===t){n=(e||"").split(y);for(u=0,a=this.length;u<a;u++){i=this[u];if(i.nodeType===1&&i.className){r=(" "+i.className+" ").replace(q," ");for(s=0,o=n.length;s<o;s++)while(r.indexOf(" "+n[s]+" ")>=0)r=r.replace(" "+n[s]+" "," ");i.className=e?v.trim(r):""}}}return this},toggleClass:function(e,t){var n=typeof e,r=typeof t=="boolean";return v.isFunction(e)?this.each(function(n){v(this).toggleClass(e.call(this,n,this.className,t),t)}):this.each(function(){if(n==="string"){var i,s=0,o=v(this),u=t,a=e.split(y);while(i=a[s++])u=r?u:!o.hasClass(i),o[u?"addClass":"removeClass"](i)}else if(n==="undefined"||n==="boolean")this.className&&v._data(this,"__className__",this.className),this.className=this.className||e===!1?"":v._data(this,"__className__")||""})},hasClass:function(e){var t=" "+e+" ",n=0,r=this.length;for(;n<r;n++)if(this[n].nodeType===1&&(" "+this[n].className+" ").replace(q," ").indexOf(t)>=0)return!0;return!1},val:function(e){var n,r,i,s=this[0];if(!arguments.length){if(s)return n=v.valHooks[s.type]||v.valHooks[s.nodeName.toLowerCase()],n&&"get"in n&&(r=n.get(s,"value"))!==t?r:(r=s.value,typeof r=="string"?r.replace(R,""):r==null?"":r);return}return i=v.isFunction(e),this.each(function(r){var s,o=v(this);if(this.nodeType!==1)return;i?s=e.call(this,r,o.val()):s=e,s==null?s="":typeof s=="number"?s+="":v.isArray(s)&&(s=v.map(s,function(e){return e==null?"":e+""})),n=v.valHooks[this.type]||v.valHooks[this.nodeName.toLowerCase()];if(!n||!("set"in n)||n.set(this,s,"value")===t)this.value=s})}}),v.extend({valHooks:{option:{get:function(e){var t=e.attributes.value;return!t||t.specified?e.value:e.text}},select:{get:function(e){var t,n,r=e.options,i=e.selectedIndex,s=e.type==="select-one"||i<0,o=s?null:[],u=s?i+1:r.length,a=i<0?u:s?i:0;for(;a<u;a++){n=r[a];if((n.selected||a===i)&&(v.support.optDisabled?!n.disabled:n.getAttribute("disabled")===null)&&(!n.parentNode.disabled||!v.nodeName(n.parentNode,"optgroup"))){t=v(n).val();if(s)return t;o.push(t)}}return o},set:function(e,t){var n=v.makeArray(t);return v(e).find("option").each(function(){this.selected=v.inArray(v(this).val(),n)>=0}),n.length||(e.selectedIndex=-1),n}}},attrFn:{},attr:function(e,n,r,i){var s,o,u,a=e.nodeType;if(!e||a===3||a===8||a===2)return;if(i&&v.isFunction(v.fn[n]))return v(e)[n](r);if(typeof e.getAttribute=="undefined")return v.prop(e,n,r);u=a!==1||!v.isXMLDoc(e),u&&(n=n.toLowerCase(),o=v.attrHooks[n]||(X.test(n)?F:j));if(r!==t){if(r===null){v.removeAttr(e,n);return}return o&&"set"in o&&u&&(s=o.set(e,r,n))!==t?s:(e.setAttribute(n,r+""),r)}return o&&"get"in o&&u&&(s=o.get(e,n))!==null?s:(s=e.getAttribute(n),s===null?t:s)},removeAttr:function(e,t){var n,r,i,s,o=0;if(t&&e.nodeType===1){r=t.split(y);for(;o<r.length;o++)i=r[o],i&&(n=v.propFix[i]||i,s=X.test(i),s||v.attr(e,i,""),e.removeAttribute(V?i:n),s&&n in e&&(e[n]=!1))}},attrHooks:{type:{set:function(e,t){if(U.test(e.nodeName)&&e.parentNode)v.error("type property can't be changed");else if(!v.support.radioValue&&t==="radio"&&v.nodeName(e,"input")){var n=e.value;return e.setAttribute("type",t),n&&(e.value=n),t}}},value:{get:function(e,t){return j&&v.nodeName(e,"button")?j.get(e,t):t in e?e.value:null},set:function(e,t,n){if(j&&v.nodeName(e,"button"))return j.set(e,t,n);e.value=t}}},propFix:{tabindex:"tabIndex",readonly:"readOnly","for":"htmlFor","class":"className",maxlength:"maxLength",cellspacing:"cellSpacing",cellpadding:"cellPadding",rowspan:"rowSpan",colspan:"colSpan",usemap:"useMap",frameborder:"frameBorder",contenteditable:"contentEditable"},prop:function(e,n,r){var i,s,o,u=e.nodeType;if(!e||u===3||u===8||u===2)return;return o=u!==1||!v.isXMLDoc(e),o&&(n=v.propFix[n]||n,s=v.propHooks[n]),r!==t?s&&"set"in s&&(i=s.set(e,r,n))!==t?i:e[n]=r:s&&"get"in s&&(i=s.get(e,n))!==null?i:e[n]},propHooks:{tabIndex:{get:function(e){var n=e.getAttributeNode("tabindex");return n&&n.specified?parseInt(n.value,10):z.test(e.nodeName)||W.test(e.nodeName)&&e.href?0:t}}}}),F={get:function(e,n){var r,i=v.prop(e,n);return i===!0||typeof i!="boolean"&&(r=e.getAttributeNode(n))&&r.nodeValue!==!1?n.toLowerCase():t},set:function(e,t,n){var r;return t===!1?v.removeAttr(e,n):(r=v.propFix[n]||n,r in e&&(e[r]=!0),e.setAttribute(n,n.toLowerCase())),n}},V||(I={name:!0,id:!0,coords:!0},j=v.valHooks.button={get:function(e,n){var r;return r=e.getAttributeNode(n),r&&(I[n]?r.value!=="":r.specified)?r.value:t},set:function(e,t,n){var r=e.getAttributeNode(n);return r||(r=i.createAttribute(n),e.setAttributeNode(r)),r.value=t+""}},v.each(["width","height"],function(e,t){v.attrHooks[t]=v.extend(v.attrHooks[t],{set:function(e,n){if(n==="")return e.setAttribute(t,"auto"),n}})}),v.attrHooks.contenteditable={get:j.get,set:function(e,t,n){t===""&&(t="false"),j.set(e,t,n)}}),v.support.hrefNormalized||v.each(["href","src","width","height"],function(e,n){v.attrHooks[n]=v.extend(v.attrHooks[n],{get:function(e){var r=e.getAttribute(n,2);return r===null?t:r}})}),v.support.style||(v.attrHooks.style={get:function(e){return e.style.cssText.toLowerCase()||t},set:function(e,t){return e.style.cssText=t+""}}),v.support.optSelected||(v.propHooks.selected=v.extend(v.propHooks.selected,{get:function(e){var t=e.parentNode;return t&&(t.selectedIndex,t.parentNode&&t.parentNode.selectedIndex),null}})),v.support.enctype||(v.propFix.enctype="encoding"),v.support.checkOn||v.each(["radio","checkbox"],function(){v.valHooks[this]={get:function(e){return e.getAttribute("value")===null?"on":e.value}}}),v.each(["radio","checkbox"],function(){v.valHooks[this]=v.extend(v.valHooks[this],{set:function(e,t){if(v.isArray(t))return e.checked=v.inArray(v(e).val(),t)>=0}})});var $=/^(?:textarea|input|select)$/i,J=/^([^\.]*|)(?:\.(.+)|)$/,K=/(?:^|\s)hover(\.\S+|)\b/,Q=/^key/,G=/^(?:mouse|contextmenu)|click/,Y=/^(?:focusinfocus|focusoutblur)$/,Z=function(e){return v.event.special.hover?e:e.replace(K,"mouseenter$1 mouseleave$1")};v.event={add:function(e,n,r,i,s){var o,u,a,f,l,c,h,p,d,m,g;if(e.nodeType===3||e.nodeType===8||!n||!r||!(o=v._data(e)))return;r.handler&&(d=r,r=d.handler,s=d.selector),r.guid||(r.guid=v.guid++),a=o.events,a||(o.events=a={}),u=o.handle,u||(o.handle=u=function(e){return typeof v=="undefined"||!!e&&v.event.triggered===e.type?t:v.event.dispatch.apply(u.elem,arguments)},u.elem=e),n=v.trim(Z(n)).split(" ");for(f=0;f<n.length;f++){l=J.exec(n[f])||[],c=l[1],h=(l[2]||"").split(".").sort(),g=v.event.special[c]||{},c=(s?g.delegateType:g.bindType)||c,g=v.event.special[c]||{},p=v.extend({type:c,origType:l[1],data:i,handler:r,guid:r.guid,selector:s,needsContext:s&&v.expr.match.needsContext.test(s),namespace:h.join(".")},d),m=a[c];if(!m){m=a[c]=[],m.delegateCount=0;if(!g.setup||g.setup.call(e,i,h,u)===!1)e.addEventListener?e.addEventListener(c,u,!1):e.attachEvent&&e.attachEvent("on"+c,u)}g.add&&(g.add.call(e,p),p.handler.guid||(p.handler.guid=r.guid)),s?m.splice(m.delegateCount++,0,p):m.push(p),v.event.global[c]=!0}e=null},global:{},remove:function(e,t,n,r,i){var s,o,u,a,f,l,c,h,p,d,m,g=v.hasData(e)&&v._data(e);if(!g||!(h=g.events))return;t=v.trim(Z(t||"")).split(" ");for(s=0;s<t.length;s++){o=J.exec(t[s])||[],u=a=o[1],f=o[2];if(!u){for(u in h)v.event.remove(e,u+t[s],n,r,!0);continue}p=v.event.special[u]||{},u=(r?p.delegateType:p.bindType)||u,d=h[u]||[],l=d.length,f=f?new RegExp("(^|\\.)"+f.split(".").sort().join("\\.(?:.*\\.|)")+"(\\.|$)"):null;for(c=0;c<d.length;c++)m=d[c],(i||a===m.origType)&&(!n||n.guid===m.guid)&&(!f||f.test(m.namespace))&&(!r||r===m.selector||r==="**"&&m.selector)&&(d.splice(c--,1),m.selector&&d.delegateCount--,p.remove&&p.remove.call(e,m));d.length===0&&l!==d.length&&((!p.teardown||p.teardown.call(e,f,g.handle)===!1)&&v.removeEvent(e,u,g.handle),delete h[u])}v.isEmptyObject(h)&&(delete g.handle,v.removeData(e,"events",!0))},customEvent:{getData:!0,setData:!0,changeData:!0},trigger:function(n,r,s,o){if(!s||s.nodeType!==3&&s.nodeType!==8){var u,a,f,l,c,h,p,d,m,g,y=n.type||n,b=[];if(Y.test(y+v.event.triggered))return;y.indexOf("!")>=0&&(y=y.slice(0,-1),a=!0),y.indexOf(".")>=0&&(b=y.split("."),y=b.shift(),b.sort());if((!s||v.event.customEvent[y])&&!v.event.global[y])return;n=typeof n=="object"?n[v.expando]?n:new v.Event(y,n):new v.Event(y),n.type=y,n.isTrigger=!0,n.exclusive=a,n.namespace=b.join("."),n.namespace_re=n.namespace?new RegExp("(^|\\.)"+b.join("\\.(?:.*\\.|)")+"(\\.|$)"):null,h=y.indexOf(":")<0?"on"+y:"";if(!s){u=v.cache;for(f in u)u[f].events&&u[f].events[y]&&v.event.trigger(n,r,u[f].handle.elem,!0);return}n.result=t,n.target||(n.target=s),r=r!=null?v.makeArray(r):[],r.unshift(n),p=v.event.special[y]||{};if(p.trigger&&p.trigger.apply(s,r)===!1)return;m=[[s,p.bindType||y]];if(!o&&!p.noBubble&&!v.isWindow(s)){g=p.delegateType||y,l=Y.test(g+y)?s:s.parentNode;for(c=s;l;l=l.parentNode)m.push([l,g]),c=l;c===(s.ownerDocument||i)&&m.push([c.defaultView||c.parentWindow||e,g])}for(f=0;f<m.length&&!n.isPropagationStopped();f++)l=m[f][0],n.type=m[f][1],d=(v._data(l,"events")||{})[n.type]&&v._data(l,"handle"),d&&d.apply(l,r),d=h&&l[h],d&&v.acceptData(l)&&d.apply&&d.apply(l,r)===!1&&n.preventDefault();return n.type=y,!o&&!n.isDefaultPrevented()&&(!p._default||p._default.apply(s.ownerDocument,r)===!1)&&(y!=="click"||!v.nodeName(s,"a"))&&v.acceptData(s)&&h&&s[y]&&(y!=="focus"&&y!=="blur"||n.target.offsetWidth!==0)&&!v.isWindow(s)&&(c=s[h],c&&(s[h]=null),v.event.triggered=y,s[y](),v.event.triggered=t,c&&(s[h]=c)),n.result}return},dispatch:function(n){n=v.event.fix(n||e.event);var r,i,s,o,u,a,f,c,h,p,d=(v._data(this,"events")||{})[n.type]||[],m=d.delegateCount,g=l.call(arguments),y=!n.exclusive&&!n.namespace,b=v.event.special[n.type]||{},w=[];g[0]=n,n.delegateTarget=this;if(b.preDispatch&&b.preDispatch.call(this,n)===!1)return;if(m&&(!n.button||n.type!=="click"))for(s=n.target;s!=this;s=s.parentNode||this)if(s.disabled!==!0||n.type!=="click"){u={},f=[];for(r=0;r<m;r++)c=d[r],h=c.selector,u[h]===t&&(u[h]=c.needsContext?v(h,this).index(s)>=0:v.find(h,this,null,[s]).length),u[h]&&f.push(c);f.length&&w.push({elem:s,matches:f})}d.length>m&&w.push({elem:this,matches:d.slice(m)});for(r=0;r<w.length&&!n.isPropagationStopped();r++){a=w[r],n.currentTarget=a.elem;for(i=0;i<a.matches.length&&!n.isImmediatePropagationStopped();i++){c=a.matches[i];if(y||!n.namespace&&!c.namespace||n.namespace_re&&n.namespace_re.test(c.namespace))n.data=c.data,n.handleObj=c,o=((v.event.special[c.origType]||{}).handle||c.handler).apply(a.elem,g),o!==t&&(n.result=o,o===!1&&(n.preventDefault(),n.stopPropagation()))}}return b.postDispatch&&b.postDispatch.call(this,n),n.result},props:"attrChange attrName relatedNode srcElement altKey bubbles cancelable ctrlKey currentTarget eventPhase metaKey relatedTarget shiftKey target timeStamp view which".split(" "),fixHooks:{},keyHooks:{props:"char charCode key keyCode".split(" "),filter:function(e,t){return e.which==null&&(e.which=t.charCode!=null?t.charCode:t.keyCode),e}},mouseHooks:{props:"button buttons clientX clientY fromElement offsetX offsetY pageX pageY screenX screenY toElement".split(" "),filter:function(e,n){var r,s,o,u=n.button,a=n.fromElement;return e.pageX==null&&n.clientX!=null&&(r=e.target.ownerDocument||i,s=r.documentElement,o=r.body,e.pageX=n.clientX+(s&&s.scrollLeft||o&&o.scrollLeft||0)-(s&&s.clientLeft||o&&o.clientLeft||0),e.pageY=n.clientY+(s&&s.scrollTop||o&&o.scrollTop||0)-(s&&s.clientTop||o&&o.clientTop||0)),!e.relatedTarget&&a&&(e.relatedTarget=a===e.target?n.toElement:a),!e.which&&u!==t&&(e.which=u&1?1:u&2?3:u&4?2:0),e}},fix:function(e){if(e[v.expando])return e;var t,n,r=e,s=v.event.fixHooks[e.type]||{},o=s.props?this.props.concat(s.props):this.props;e=v.Event(r);for(t=o.length;t;)n=o[--t],e[n]=r[n];return e.target||(e.target=r.srcElement||i),e.target.nodeType===3&&(e.target=e.target.parentNode),e.metaKey=!!e.metaKey,s.filter?s.filter(e,r):e},special:{load:{noBubble:!0},focus:{delegateType:"focusin"},blur:{delegateType:"focusout"},beforeunload:{setup:function(e,t,n){v.isWindow(this)&&(this.onbeforeunload=n)},teardown:function(e,t){this.onbeforeunload===t&&(this.onbeforeunload=null)}}},simulate:function(e,t,n,r){var i=v.extend(new v.Event,n,{type:e,isSimulated:!0,originalEvent:{}});r?v.event.trigger(i,null,t):v.event.dispatch.call(t,i),i.isDefaultPrevented()&&n.preventDefault()}},v.event.handle=v.event.dispatch,v.removeEvent=i.removeEventListener?function(e,t,n){e.removeEventListener&&e.removeEventListener(t,n,!1)}:function(e,t,n){var r="on"+t;e.detachEvent&&(typeof e[r]=="undefined"&&(e[r]=null),e.detachEvent(r,n))},v.Event=function(e,t){if(!(this instanceof v.Event))return new v.Event(e,t);e&&e.type?(this.originalEvent=e,this.type=e.type,this.isDefaultPrevented=e.defaultPrevented||e.returnValue===!1||e.getPreventDefault&&e.getPreventDefault()?tt:et):this.type=e,t&&v.extend(this,t),this.timeStamp=e&&e.timeStamp||v.now(),this[v.expando]=!0},v.Event.prototype={preventDefault:function(){this.isDefaultPrevented=tt;var e=this.originalEvent;if(!e)return;e.preventDefault?e.preventDefault():e.returnValue=!1},stopPropagation:function(){this.isPropagationStopped=tt;var e=this.originalEvent;if(!e)return;e.stopPropagation&&e.stopPropagation(),e.cancelBubble=!0},stopImmediatePropagation:function(){this.isImmediatePropagationStopped=tt,this.stopPropagation()},isDefaultPrevented:et,isPropagationStopped:et,isImmediatePropagationStopped:et},v.each({mouseenter:"mouseover",mouseleave:"mouseout"},function(e,t){v.event.special[e]={delegateType:t,bindType:t,handle:function(e){var n,r=this,i=e.relatedTarget,s=e.handleObj,o=s.selector;if(!i||i!==r&&!v.contains(r,i))e.type=s.origType,n=s.handler.apply(this,arguments),e.type=t;return n}}}),v.support.submitBubbles||(v.event.special.submit={setup:function(){if(v.nodeName(this,"form"))return!1;v.event.add(this,"click._submit keypress._submit",function(e){var n=e.target,r=v.nodeName(n,"input")||v.nodeName(n,"button")?n.form:t;r&&!v._data(r,"_submit_attached")&&(v.event.add(r,"submit._submit",function(e){e._submit_bubble=!0}),v._data(r,"_submit_attached",!0))})},postDispatch:function(e){e._submit_bubble&&(delete e._submit_bubble,this.parentNode&&!e.isTrigger&&v.event.simulate("submit",this.parentNode,e,!0))},teardown:function(){if(v.nodeName(this,"form"))return!1;v.event.remove(this,"._submit")}}),v.support.changeBubbles||(v.event.special.change={setup:function(){if($.test(this.nodeName)){if(this.type==="checkbox"||this.type==="radio")v.event.add(this,"propertychange._change",function(e){e.originalEvent.propertyName==="checked"&&(this._just_changed=!0)}),v.event.add(this,"click._change",function(e){this._just_changed&&!e.isTrigger&&(this._just_changed=!1),v.event.simulate("change",this,e,!0)});return!1}v.event.add(this,"beforeactivate._change",function(e){var t=e.target;$.test(t.nodeName)&&!v._data(t,"_change_attached")&&(v.event.add(t,"change._change",function(e){this.parentNode&&!e.isSimulated&&!e.isTrigger&&v.event.simulate("change",this.parentNode,e,!0)}),v._data(t,"_change_attached",!0))})},handle:function(e){var t=e.target;if(this!==t||e.isSimulated||e.isTrigger||t.type!=="radio"&&t.type!=="checkbox")return e.handleObj.handler.apply(this,arguments)},teardown:function(){return v.event.remove(this,"._change"),!$.test(this.nodeName)}}),v.support.focusinBubbles||v.each({focus:"focusin",blur:"focusout"},function(e,t){var n=0,r=function(e){v.event.simulate(t,e.target,v.event.fix(e),!0)};v.event.special[t]={setup:function(){n++===0&&i.addEventListener(e,r,!0)},teardown:function(){--n===0&&i.removeEventListener(e,r,!0)}}}),v.fn.extend({on:function(e,n,r,i,s){var o,u;if(typeof e=="object"){typeof n!="string"&&(r=r||n,n=t);for(u in e)this.on(u,n,r,e[u],s);return this}r==null&&i==null?(i=n,r=n=t):i==null&&(typeof n=="string"?(i=r,r=t):(i=r,r=n,n=t));if(i===!1)i=et;else if(!i)return this;return s===1&&(o=i,i=function(e){return v().off(e),o.apply(this,arguments)},i.guid=o.guid||(o.guid=v.guid++)),this.each(function(){v.event.add(this,e,i,r,n)})},one:function(e,t,n,r){return this.on(e,t,n,r,1)},off:function(e,n,r){var i,s;if(e&&e.preventDefault&&e.handleObj)return i=e.handleObj,v(e.delegateTarget).off(i.namespace?i.origType+"."+i.namespace:i.origType,i.selector,i.handler),this;if(typeof e=="object"){for(s in e)this.off(s,n,e[s]);return this}if(n===!1||typeof n=="function")r=n,n=t;return r===!1&&(r=et),this.each(function(){v.event.remove(this,e,r,n)})},bind:function(e,t,n){return this.on(e,null,t,n)},unbind:function(e,t){return this.off(e,null,t)},live:function(e,t,n){return v(this.context).on(e,this.selector,t,n),this},die:function(e,t){return v(this.context).off(e,this.selector||"**",t),this},delegate:function(e,t,n,r){return this.on(t,e,n,r)},undelegate:function(e,t,n){return arguments.length===1?this.off(e,"**"):this.off(t,e||"**",n)},trigger:function(e,t){return this.each(function(){v.event.trigger(e,t,this)})},triggerHandler:function(e,t){if(this[0])return v.event.trigger(e,t,this[0],!0)},toggle:function(e){var t=arguments,n=e.guid||v.guid++,r=0,i=function(n){var i=(v._data(this,"lastToggle"+e.guid)||0)%r;return v._data(this,"lastToggle"+e.guid,i+1),n.preventDefault(),t[i].apply(this,arguments)||!1};i.guid=n;while(r<t.length)t[r++].guid=n;return this.click(i)},hover:function(e,t){return this.mouseenter(e).mouseleave(t||e)}}),v.each("blur focus focusin focusout load resize scroll unload click dblclick mousedown mouseup mousemove mouseover mouseout mouseenter mouseleave change select submit keydown keypress keyup error contextmenu".split(" "),function(e,t){v.fn[t]=function(e,n){return n==null&&(n=e,e=null),arguments.length>0?this.on(t,null,e,n):this.trigger(t)},Q.test(t)&&(v.event.fixHooks[t]=v.event.keyHooks),G.test(t)&&(v.event.fixHooks[t]=v.event.mouseHooks)}),function(e,t){function nt(e,t,n,r){n=n||[],t=t||g;var i,s,a,f,l=t.nodeType;if(!e||typeof e!="string")return n;if(l!==1&&l!==9)return[];a=o(t);if(!a&&!r)if(i=R.exec(e))if(f=i[1]){if(l===9){s=t.getElementById(f);if(!s||!s.parentNode)return n;if(s.id===f)return n.push(s),n}else if(t.ownerDocument&&(s=t.ownerDocument.getElementById(f))&&u(t,s)&&s.id===f)return n.push(s),n}else{if(i[2])return S.apply(n,x.call(t.getElementsByTagName(e),0)),n;if((f=i[3])&&Z&&t.getElementsByClassName)return S.apply(n,x.call(t.getElementsByClassName(f),0)),n}return vt(e.replace(j,"$1"),t,n,r,a)}function rt(e){return function(t){var n=t.nodeName.toLowerCase();return n==="input"&&t.type===e}}function it(e){return function(t){var n=t.nodeName.toLowerCase();return(n==="input"||n==="button")&&t.type===e}}function st(e){return N(function(t){return t=+t,N(function(n,r){var i,s=e([],n.length,t),o=s.length;while(o--)n[i=s[o]]&&(n[i]=!(r[i]=n[i]))})})}function ot(e,t,n){if(e===t)return n;var r=e.nextSibling;while(r){if(r===t)return-1;r=r.nextSibling}return 1}function ut(e,t){var n,r,s,o,u,a,f,l=L[d][e+" "];if(l)return t?0:l.slice(0);u=e,a=[],f=i.preFilter;while(u){if(!n||(r=F.exec(u)))r&&(u=u.slice(r[0].length)||u),a.push(s=[]);n=!1;if(r=I.exec(u))s.push(n=new m(r.shift())),u=u.slice(n.length),n.type=r[0].replace(j," ");for(o in i.filter)(r=J[o].exec(u))&&(!f[o]||(r=f[o](r)))&&(s.push(n=new m(r.shift())),u=u.slice(n.length),n.type=o,n.matches=r);if(!n)break}return t?u.length:u?nt.error(e):L(e,a).slice(0)}function at(e,t,r){var i=t.dir,s=r&&t.dir==="parentNode",o=w++;return t.first?function(t,n,r){while(t=t[i])if(s||t.nodeType===1)return e(t,n,r)}:function(t,r,u){if(!u){var a,f=b+" "+o+" ",l=f+n;while(t=t[i])if(s||t.nodeType===1){if((a=t[d])===l)return t.sizset;if(typeof a=="string"&&a.indexOf(f)===0){if(t.sizset)return t}else{t[d]=l;if(e(t,r,u))return t.sizset=!0,t;t.sizset=!1}}}else while(t=t[i])if(s||t.nodeType===1)if(e(t,r,u))return t}}function ft(e){return e.length>1?function(t,n,r){var i=e.length;while(i--)if(!e[i](t,n,r))return!1;return!0}:e[0]}function lt(e,t,n,r,i){var s,o=[],u=0,a=e.length,f=t!=null;for(;u<a;u++)if(s=e[u])if(!n||n(s,r,i))o.push(s),f&&t.push(u);return o}function ct(e,t,n,r,i,s){return r&&!r[d]&&(r=ct(r)),i&&!i[d]&&(i=ct(i,s)),N(function(s,o,u,a){var f,l,c,h=[],p=[],d=o.length,v=s||dt(t||"*",u.nodeType?[u]:u,[]),m=e&&(s||!t)?lt(v,h,e,u,a):v,g=n?i||(s?e:d||r)?[]:o:m;n&&n(m,g,u,a);if(r){f=lt(g,p),r(f,[],u,a),l=f.length;while(l--)if(c=f[l])g[p[l]]=!(m[p[l]]=c)}if(s){if(i||e){if(i){f=[],l=g.length;while(l--)(c=g[l])&&f.push(m[l]=c);i(null,g=[],f,a)}l=g.length;while(l--)(c=g[l])&&(f=i?T.call(s,c):h[l])>-1&&(s[f]=!(o[f]=c))}}else g=lt(g===o?g.splice(d,g.length):g),i?i(null,o,g,a):S.apply(o,g)})}function ht(e){var t,n,r,s=e.length,o=i.relative[e[0].type],u=o||i.relative[" "],a=o?1:0,f=at(function(e){return e===t},u,!0),l=at(function(e){return T.call(t,e)>-1},u,!0),h=[function(e,n,r){return!o&&(r||n!==c)||((t=n).nodeType?f(e,n,r):l(e,n,r))}];for(;a<s;a++)if(n=i.relative[e[a].type])h=[at(ft(h),n)];else{n=i.filter[e[a].type].apply(null,e[a].matches);if(n[d]){r=++a;for(;r<s;r++)if(i.relative[e[r].type])break;return ct(a>1&&ft(h),a>1&&e.slice(0,a-1).join("").replace(j,"$1"),n,a<r&&ht(e.slice(a,r)),r<s&&ht(e=e.slice(r)),r<s&&e.join(""))}h.push(n)}return ft(h)}function pt(e,t){var r=t.length>0,s=e.length>0,o=function(u,a,f,l,h){var p,d,v,m=[],y=0,w="0",x=u&&[],T=h!=null,N=c,C=u||s&&i.find.TAG("*",h&&a.parentNode||a),k=b+=N==null?1:Math.E;T&&(c=a!==g&&a,n=o.el);for(;(p=C[w])!=null;w++){if(s&&p){for(d=0;v=e[d];d++)if(v(p,a,f)){l.push(p);break}T&&(b=k,n=++o.el)}r&&((p=!v&&p)&&y--,u&&x.push(p))}y+=w;if(r&&w!==y){for(d=0;v=t[d];d++)v(x,m,a,f);if(u){if(y>0)while(w--)!x[w]&&!m[w]&&(m[w]=E.call(l));m=lt(m)}S.apply(l,m),T&&!u&&m.length>0&&y+t.length>1&&nt.uniqueSort(l)}return T&&(b=k,c=N),x};return o.el=0,r?N(o):o}function dt(e,t,n){var r=0,i=t.length;for(;r<i;r++)nt(e,t[r],n);return n}function vt(e,t,n,r,s){var o,u,f,l,c,h=ut(e),p=h.length;if(!r&&h.length===1){u=h[0]=h[0].slice(0);if(u.length>2&&(f=u[0]).type==="ID"&&t.nodeType===9&&!s&&i.relative[u[1].type]){t=i.find.ID(f.matches[0].replace($,""),t,s)[0];if(!t)return n;e=e.slice(u.shift().length)}for(o=J.POS.test(e)?-1:u.length-1;o>=0;o--){f=u[o];if(i.relative[l=f.type])break;if(c=i.find[l])if(r=c(f.matches[0].replace($,""),z.test(u[0].type)&&t.parentNode||t,s)){u.splice(o,1),e=r.length&&u.join("");if(!e)return S.apply(n,x.call(r,0)),n;break}}}return a(e,h)(r,t,s,n,z.test(e)),n}function mt(){}var n,r,i,s,o,u,a,f,l,c,h=!0,p="undefined",d=("sizcache"+Math.random()).replace(".",""),m=String,g=e.document,y=g.documentElement,b=0,w=0,E=[].pop,S=[].push,x=[].slice,T=[].indexOf||function(e){var t=0,n=this.length;for(;t<n;t++)if(this[t]===e)return t;return-1},N=function(e,t){return e[d]=t==null||t,e},C=function(){var e={},t=[];return N(function(n,r){return t.push(n)>i.cacheLength&&delete e[t.shift()],e[n+" "]=r},e)},k=C(),L=C(),A=C(),O="[\\x20\\t\\r\\n\\f]",M="(?:\\\\.|[-\\w]|[^\\x00-\\xa0])+",_=M.replace("w","w#"),D="([*^$|!~]?=)",P="\\["+O+"*("+M+")"+O+"*(?:"+D+O+"*(?:(['\"])((?:\\\\.|[^\\\\])*?)\\3|("+_+")|)|)"+O+"*\\]",H=":("+M+")(?:\\((?:(['\"])((?:\\\\.|[^\\\\])*?)\\2|([^()[\\]]*|(?:(?:"+P+")|[^:]|\\\\.)*|.*))\\)|)",B=":(even|odd|eq|gt|lt|nth|first|last)(?:\\("+O+"*((?:-\\d)?\\d*)"+O+"*\\)|)(?=[^-]|$)",j=new RegExp("^"+O+"+|((?:^|[^\\\\])(?:\\\\.)*)"+O+"+$","g"),F=new RegExp("^"+O+"*,"+O+"*"),I=new RegExp("^"+O+"*([\\x20\\t\\r\\n\\f>+~])"+O+"*"),q=new RegExp(H),R=/^(?:#([\w\-]+)|(\w+)|\.([\w\-]+))$/,U=/^:not/,z=/[\x20\t\r\n\f]*[+~]/,W=/:not\($/,X=/h\d/i,V=/input|select|textarea|button/i,$=/\\(?!\\)/g,J={ID:new RegExp("^#("+M+")"),CLASS:new RegExp("^\\.("+M+")"),NAME:new RegExp("^\\[name=['\"]?("+M+")['\"]?\\]"),TAG:new RegExp("^("+M.replace("w","w*")+")"),ATTR:new RegExp("^"+P),PSEUDO:new RegExp("^"+H),POS:new RegExp(B,"i"),CHILD:new RegExp("^:(only|nth|first|last)-child(?:\\("+O+"*(even|odd|(([+-]|)(\\d*)n|)"+O+"*(?:([+-]|)"+O+"*(\\d+)|))"+O+"*\\)|)","i"),needsContext:new RegExp("^"+O+"*[>+~]|"+B,"i")},K=function(e){var t=g.createElement("div");try{return e(t)}catch(n){return!1}finally{t=null}},Q=K(function(e){return e.appendChild(g.createComment("")),!e.getElementsByTagName("*").length}),G=K(function(e){return e.innerHTML="<a href='#'></a>",e.firstChild&&typeof e.firstChild.getAttribute!==p&&e.firstChild.getAttribute("href")==="#"}),Y=K(function(e){e.innerHTML="<select></select>";var t=typeof e.lastChild.getAttribute("multiple");return t!=="boolean"&&t!=="string"}),Z=K(function(e){return e.innerHTML="<div class='hidden e'></div><div class='hidden'></div>",!e.getElementsByClassName||!e.getElementsByClassName("e").length?!1:(e.lastChild.className="e",e.getElementsByClassName("e").length===2)}),et=K(function(e){e.id=d+0,e.innerHTML="<a name='"+d+"'></a><div name='"+d+"'></div>",y.insertBefore(e,y.firstChild);var t=g.getElementsByName&&g.getElementsByName(d).length===2+g.getElementsByName(d+0).length;return r=!g.getElementById(d),y.removeChild(e),t});try{x.call(y.childNodes,0)[0].nodeType}catch(tt){x=function(e){var t,n=[];for(;t=this[e];e++)n.push(t);return n}}nt.matches=function(e,t){return nt(e,null,null,t)},nt.matchesSelector=function(e,t){return nt(t,null,null,[e]).length>0},s=nt.getText=function(e){var t,n="",r=0,i=e.nodeType;if(i){if(i===1||i===9||i===11){if(typeof e.textContent=="string")return e.textContent;for(e=e.firstChild;e;e=e.nextSibling)n+=s(e)}else if(i===3||i===4)return e.nodeValue}else for(;t=e[r];r++)n+=s(t);return n},o=nt.isXML=function(e){var t=e&&(e.ownerDocument||e).documentElement;return t?t.nodeName!=="HTML":!1},u=nt.contains=y.contains?function(e,t){var n=e.nodeType===9?e.documentElement:e,r=t&&t.parentNode;return e===r||!!(r&&r.nodeType===1&&n.contains&&n.contains(r))}:y.compareDocumentPosition?function(e,t){return t&&!!(e.compareDocumentPosition(t)&16)}:function(e,t){while(t=t.parentNode)if(t===e)return!0;return!1},nt.attr=function(e,t){var n,r=o(e);return r||(t=t.toLowerCase()),(n=i.attrHandle[t])?n(e):r||Y?e.getAttribute(t):(n=e.getAttributeNode(t),n?typeof e[t]=="boolean"?e[t]?t:null:n.specified?n.value:null:null)},i=nt.selectors={cacheLength:50,createPseudo:N,match:J,attrHandle:G?{}:{href:function(e){return e.getAttribute("href",2)},type:function(e){return e.getAttribute("type")}},find:{ID:r?function(e,t,n){if(typeof t.getElementById!==p&&!n){var r=t.getElementById(e);return r&&r.parentNode?[r]:[]}}:function(e,n,r){if(typeof n.getElementById!==p&&!r){var i=n.getElementById(e);return i?i.id===e||typeof i.getAttributeNode!==p&&i.getAttributeNode("id").value===e?[i]:t:[]}},TAG:Q?function(e,t){if(typeof t.getElementsByTagName!==p)return t.getElementsByTagName(e)}:function(e,t){var n=t.getElementsByTagName(e);if(e==="*"){var r,i=[],s=0;for(;r=n[s];s++)r.nodeType===1&&i.push(r);return i}return n},NAME:et&&function(e,t){if(typeof t.getElementsByName!==p)return t.getElementsByName(name)},CLASS:Z&&function(e,t,n){if(typeof t.getElementsByClassName!==p&&!n)return t.getElementsByClassName(e)}},relative:{">":{dir:"parentNode",first:!0}," ":{dir:"parentNode"},"+":{dir:"previousSibling",first:!0},"~":{dir:"previousSibling"}},preFilter:{ATTR:function(e){return e[1]=e[1].replace($,""),e[3]=(e[4]||e[5]||"").replace($,""),e[2]==="~="&&(e[3]=" "+e[3]+" "),e.slice(0,4)},CHILD:function(e){return e[1]=e[1].toLowerCase(),e[1]==="nth"?(e[2]||nt.error(e[0]),e[3]=+(e[3]?e[4]+(e[5]||1):2*(e[2]==="even"||e[2]==="odd")),e[4]=+(e[6]+e[7]||e[2]==="odd")):e[2]&&nt.error(e[0]),e},PSEUDO:function(e){var t,n;if(J.CHILD.test(e[0]))return null;if(e[3])e[2]=e[3];else if(t=e[4])q.test(t)&&(n=ut(t,!0))&&(n=t.indexOf(")",t.length-n)-t.length)&&(t=t.slice(0,n),e[0]=e[0].slice(0,n)),e[2]=t;return e.slice(0,3)}},filter:{ID:r?function(e){return e=e.replace($,""),function(t){return t.getAttribute("id")===e}}:function(e){return e=e.replace($,""),function(t){var n=typeof t.getAttributeNode!==p&&t.getAttributeNode("id");return n&&n.value===e}},TAG:function(e){return e==="*"?function(){return!0}:(e=e.replace($,"").toLowerCase(),function(t){return t.nodeName&&t.nodeName.toLowerCase()===e})},CLASS:function(e){var t=k[d][e+" "];return t||(t=new RegExp("(^|"+O+")"+e+"("+O+"|$)"))&&k(e,function(e){return t.test(e.className||typeof e.getAttribute!==p&&e.getAttribute("class")||"")})},ATTR:function(e,t,n){return function(r,i){var s=nt.attr(r,e);return s==null?t==="!=":t?(s+="",t==="="?s===n:t==="!="?s!==n:t==="^="?n&&s.indexOf(n)===0:t==="*="?n&&s.indexOf(n)>-1:t==="$="?n&&s.substr(s.length-n.length)===n:t==="~="?(" "+s+" ").indexOf(n)>-1:t==="|="?s===n||s.substr(0,n.length+1)===n+"-":!1):!0}},CHILD:function(e,t,n,r){return e==="nth"?function(e){var t,i,s=e.parentNode;if(n===1&&r===0)return!0;if(s){i=0;for(t=s.firstChild;t;t=t.nextSibling)if(t.nodeType===1){i++;if(e===t)break}}return i-=r,i===n||i%n===0&&i/n>=0}:function(t){var n=t;switch(e){case"only":case"first":while(n=n.previousSibling)if(n.nodeType===1)return!1;if(e==="first")return!0;n=t;case"last":while(n=n.nextSibling)if(n.nodeType===1)return!1;return!0}}},PSEUDO:function(e,t){var n,r=i.pseudos[e]||i.setFilters[e.toLowerCase()]||nt.error("unsupported pseudo: "+e);return r[d]?r(t):r.length>1?(n=[e,e,"",t],i.setFilters.hasOwnProperty(e.toLowerCase())?N(function(e,n){var i,s=r(e,t),o=s.length;while(o--)i=T.call(e,s[o]),e[i]=!(n[i]=s[o])}):function(e){return r(e,0,n)}):r}},pseudos:{not:N(function(e){var t=[],n=[],r=a(e.replace(j,"$1"));return r[d]?N(function(e,t,n,i){var s,o=r(e,null,i,[]),u=e.length;while(u--)if(s=o[u])e[u]=!(t[u]=s)}):function(e,i,s){return t[0]=e,r(t,null,s,n),!n.pop()}}),has:N(function(e){return function(t){return nt(e,t).length>0}}),contains:N(function(e){return function(t){return(t.textContent||t.innerText||s(t)).indexOf(e)>-1}}),enabled:function(e){return e.disabled===!1},disabled:function(e){return e.disabled===!0},checked:function(e){var t=e.nodeName.toLowerCase();return t==="input"&&!!e.checked||t==="option"&&!!e.selected},selected:function(e){return e.parentNode&&e.parentNode.selectedIndex,e.selected===!0},parent:function(e){return!i.pseudos.empty(e)},empty:function(e){var t;e=e.firstChild;while(e){if(e.nodeName>"@"||(t=e.nodeType)===3||t===4)return!1;e=e.nextSibling}return!0},header:function(e){return X.test(e.nodeName)},text:function(e){var t,n;return e.nodeName.toLowerCase()==="input"&&(t=e.type)==="text"&&((n=e.getAttribute("type"))==null||n.toLowerCase()===t)},radio:rt("radio"),checkbox:rt("checkbox"),file:rt("file"),password:rt("password"),image:rt("image"),submit:it("submit"),reset:it("reset"),button:function(e){var t=e.nodeName.toLowerCase();return t==="input"&&e.type==="button"||t==="button"},input:function(e){return V.test(e.nodeName)},focus:function(e){var t=e.ownerDocument;return e===t.activeElement&&(!t.hasFocus||t.hasFocus())&&!!(e.type||e.href||~e.tabIndex)},active:function(e){return e===e.ownerDocument.activeElement},first:st(function(){return[0]}),last:st(function(e,t){return[t-1]}),eq:st(function(e,t,n){return[n<0?n+t:n]}),even:st(function(e,t){for(var n=0;n<t;n+=2)e.push(n);return e}),odd:st(function(e,t){for(var n=1;n<t;n+=2)e.push(n);return e}),lt:st(function(e,t,n){for(var r=n<0?n+t:n;--r>=0;)e.push(r);return e}),gt:st(function(e,t,n){for(var r=n<0?n+t:n;++r<t;)e.push(r);return e})}},f=y.compareDocumentPosition?function(e,t){return e===t?(l=!0,0):(!e.compareDocumentPosition||!t.compareDocumentPosition?e.compareDocumentPosition:e.compareDocumentPosition(t)&4)?-1:1}:function(e,t){if(e===t)return l=!0,0;if(e.sourceIndex&&t.sourceIndex)return e.sourceIndex-t.sourceIndex;var n,r,i=[],s=[],o=e.parentNode,u=t.parentNode,a=o;if(o===u)return ot(e,t);if(!o)return-1;if(!u)return 1;while(a)i.unshift(a),a=a.parentNode;a=u;while(a)s.unshift(a),a=a.parentNode;n=i.length,r=s.length;for(var f=0;f<n&&f<r;f++)if(i[f]!==s[f])return ot(i[f],s[f]);return f===n?ot(e,s[f],-1):ot(i[f],t,1)},[0,0].sort(f),h=!l,nt.uniqueSort=function(e){var t,n=[],r=1,i=0;l=h,e.sort(f);if(l){for(;t=e[r];r++)t===e[r-1]&&(i=n.push(r));while(i--)e.splice(n[i],1)}return e},nt.error=function(e){throw new Error("Syntax error, unrecognized expression: "+e)},a=nt.compile=function(e,t){var n,r=[],i=[],s=A[d][e+" "];if(!s){t||(t=ut(e)),n=t.length;while(n--)s=ht(t[n]),s[d]?r.push(s):i.push(s);s=A(e,pt(i,r))}return s},g.querySelectorAll&&function(){var e,t=vt,n=/'|\\/g,r=/\=[\x20\t\r\n\f]*([^'"\]]*)[\x20\t\r\n\f]*\]/g,i=[":focus"],s=[":active"],u=y.matchesSelector||y.mozMatchesSelector||y.webkitMatchesSelector||y.oMatchesSelector||y.msMatchesSelector;K(function(e){e.innerHTML="<select><option selected=''></option></select>",e.querySelectorAll("[selected]").length||i.push("\\["+O+"*(?:checked|disabled|ismap|multiple|readonly|selected|value)"),e.querySelectorAll(":checked").length||i.push(":checked")}),K(function(e){e.innerHTML="<p test=''></p>",e.querySelectorAll("[test^='']").length&&i.push("[*^$]="+O+"*(?:\"\"|'')"),e.innerHTML="<input type='hidden'/>",e.querySelectorAll(":enabled").length||i.push(":enabled",":disabled")}),i=new RegExp(i.join("|")),vt=function(e,r,s,o,u){if(!o&&!u&&!i.test(e)){var a,f,l=!0,c=d,h=r,p=r.nodeType===9&&e;if(r.nodeType===1&&r.nodeName.toLowerCase()!=="object"){a=ut(e),(l=r.getAttribute("id"))?c=l.replace(n,"\\$&"):r.setAttribute("id",c),c="[id='"+c+"'] ",f=a.length;while(f--)a[f]=c+a[f].join("");h=z.test(e)&&r.parentNode||r,p=a.join(",")}if(p)try{return S.apply(s,x.call(h.querySelectorAll(p),0)),s}catch(v){}finally{l||r.removeAttribute("id")}}return t(e,r,s,o,u)},u&&(K(function(t){e=u.call(t,"div");try{u.call(t,"[test!='']:sizzle"),s.push("!=",H)}catch(n){}}),s=new RegExp(s.join("|")),nt.matchesSelector=function(t,n){n=n.replace(r,"='$1']");if(!o(t)&&!s.test(n)&&!i.test(n))try{var a=u.call(t,n);if(a||e||t.document&&t.document.nodeType!==11)return a}catch(f){}return nt(n,null,null,[t]).length>0})}(),i.pseudos.nth=i.pseudos.eq,i.filters=mt.prototype=i.pseudos,i.setFilters=new mt,nt.attr=v.attr,v.find=nt,v.expr=nt.selectors,v.expr[":"]=v.expr.pseudos,v.unique=nt.uniqueSort,v.text=nt.getText,v.isXMLDoc=nt.isXML,v.contains=nt.contains}(e);var nt=/Until$/,rt=/^(?:parents|prev(?:Until|All))/,it=/^.[^:#\[\.,]*$/,st=v.expr.match.needsContext,ot={children:!0,contents:!0,next:!0,prev:!0};v.fn.extend({find:function(e){var t,n,r,i,s,o,u=this;if(typeof e!="string")return v(e).filter(function(){for(t=0,n=u.length;t<n;t++)if(v.contains(u[t],this))return!0});o=this.pushStack("","find",e);for(t=0,n=this.length;t<n;t++){r=o.length,v.find(e,this[t],o);if(t>0)for(i=r;i<o.length;i++)for(s=0;s<r;s++)if(o[s]===o[i]){o.splice(i--,1);break}}return o},has:function(e){var t,n=v(e,this),r=n.length;return this.filter(function(){for(t=0;t<r;t++)if(v.contains(this,n[t]))return!0})},not:function(e){return this.pushStack(ft(this,e,!1),"not",e)},filter:function(e){return this.pushStack(ft(this,e,!0),"filter",e)},is:function(e){return!!e&&(typeof e=="string"?st.test(e)?v(e,this.context).index(this[0])>=0:v.filter(e,this).length>0:this.filter(e).length>0)},closest:function(e,t){var n,r=0,i=this.length,s=[],o=st.test(e)||typeof e!="string"?v(e,t||this.context):0;for(;r<i;r++){n=this[r];while(n&&n.ownerDocument&&n!==t&&n.nodeType!==11){if(o?o.index(n)>-1:v.find.matchesSelector(n,e)){s.push(n);break}n=n.parentNode}}return s=s.length>1?v.unique(s):s,this.pushStack(s,"closest",e)},index:function(e){return e?typeof e=="string"?v.inArray(this[0],v(e)):v.inArray(e.jquery?e[0]:e,this):this[0]&&this[0].parentNode?this.prevAll().length:-1},add:function(e,t){var n=typeof e=="string"?v(e,t):v.makeArray(e&&e.nodeType?[e]:e),r=v.merge(this.get(),n);return this.pushStack(ut(n[0])||ut(r[0])?r:v.unique(r))},addBack:function(e){return this.add(e==null?this.prevObject:this.prevObject.filter(e))}}),v.fn.andSelf=v.fn.addBack,v.each({parent:function(e){var t=e.parentNode;return t&&t.nodeType!==11?t:null},parents:function(e){return v.dir(e,"parentNode")},parentsUntil:function(e,t,n){return v.dir(e,"parentNode",n)},next:function(e){return at(e,"nextSibling")},prev:function(e){return at(e,"previousSibling")},nextAll:function(e){return v.dir(e,"nextSibling")},prevAll:function(e){return v.dir(e,"previousSibling")},nextUntil:function(e,t,n){return v.dir(e,"nextSibling",n)},prevUntil:function(e,t,n){return v.dir(e,"previousSibling",n)},siblings:function(e){return v.sibling((e.parentNode||{}).firstChild,e)},children:function(e){return v.sibling(e.firstChild)},contents:function(e){return v.nodeName(e,"iframe")?e.contentDocument||e.contentWindow.document:v.merge([],e.childNodes)}},function(e,t){v.fn[e]=function(n,r){var i=v.map(this,t,n);return nt.test(e)||(r=n),r&&typeof r=="string"&&(i=v.filter(r,i)),i=this.length>1&&!ot[e]?v.unique(i):i,this.length>1&&rt.test(e)&&(i=i.reverse()),this.pushStack(i,e,l.call(arguments).join(","))}}),v.extend({filter:function(e,t,n){return n&&(e=":not("+e+")"),t.length===1?v.find.matchesSelector(t[0],e)?[t[0]]:[]:v.find.matches(e,t)},dir:function(e,n,r){var i=[],s=e[n];while(s&&s.nodeType!==9&&(r===t||s.nodeType!==1||!v(s).is(r)))s.nodeType===1&&i.push(s),s=s[n];return i},sibling:function(e,t){var n=[];for(;e;e=e.nextSibling)e.nodeType===1&&e!==t&&n.push(e);return n}});var ct="abbr|article|aside|audio|bdi|canvas|data|datalist|details|figcaption|figure|footer|header|hgroup|mark|meter|nav|output|progress|section|summary|time|video",ht=/ jQuery\d+="(?:null|\d+)"/g,pt=/^\s+/,dt=/<(?!area|br|col|embed|hr|img|input|link|meta|param)(([\w:]+)[^>]*)\/>/gi,vt=/<([\w:]+)/,mt=/<tbody/i,gt=/<|&#?\w+;/,yt=/<(?:script|style|link)/i,bt=/<(?:script|object|embed|option|style)/i,wt=new RegExp("<(?:"+ct+")[\\s/>]","i"),Et=/^(?:checkbox|radio)$/,St=/checked\s*(?:[^=]|=\s*.checked.)/i,xt=/\/(java|ecma)script/i,Tt=/^\s*<!(?:\[CDATA\[|\-\-)|[\]\-]{2}>\s*$/g,Nt={option:[1,"<select multiple='multiple'>","</select>"],legend:[1,"<fieldset>","</fieldset>"],thead:[1,"<table>","</table>"],tr:[2,"<table><tbody>","</tbody></table>"],td:[3,"<table><tbody><tr>","</tr></tbody></table>"],col:[2,"<table><tbody></tbody><colgroup>","</colgroup></table>"],area:[1,"<map>","</map>"],_default:[0,"",""]},Ct=lt(i),kt=Ct.appendChild(i.createElement("div"));Nt.optgroup=Nt.option,Nt.tbody=Nt.tfoot=Nt.colgroup=Nt.caption=Nt.thead,Nt.th=Nt.td,v.support.htmlSerialize||(Nt._default=[1,"X<div>","</div>"]),v.fn.extend({text:function(e){return v.access(this,function(e){return e===t?v.text(this):this.empty().append((this[0]&&this[0].ownerDocument||i).createTextNode(e))},null,e,arguments.length)},wrapAll:function(e){if(v.isFunction(e))return this.each(function(t){v(this).wrapAll(e.call(this,t))});if(this[0]){var t=v(e,this[0].ownerDocument).eq(0).clone(!0);this[0].parentNode&&t.insertBefore(this[0]),t.map(function(){var e=this;while(e.firstChild&&e.firstChild.nodeType===1)e=e.firstChild;return e}).append(this)}return this},wrapInner:function(e){return v.isFunction(e)?this.each(function(t){v(this).wrapInner(e.call(this,t))}):this.each(function(){var t=v(this),n=t.contents();n.length?n.wrapAll(e):t.append(e)})},wrap:function(e){var t=v.isFunction(e);return this.each(function(n){v(this).wrapAll(t?e.call(this,n):e)})},unwrap:function(){return this.parent().each(function(){v.nodeName(this,"body")||v(this).replaceWith(this.childNodes)}).end()},append:function(){return this.domManip(arguments,!0,function(e){(this.nodeType===1||this.nodeType===11)&&this.appendChild(e)})},prepend:function(){return this.domManip(arguments,!0,function(e){(this.nodeType===1||this.nodeType===11)&&this.insertBefore(e,this.firstChild)})},before:function(){if(!ut(this[0]))return this.domManip(arguments,!1,function(e){this.parentNode.insertBefore(e,this)});if(arguments.length){var e=v.clean(arguments);return this.pushStack(v.merge(e,this),"before",this.selector)}},after:function(){if(!ut(this[0]))return this.domManip(arguments,!1,function(e){this.parentNode.insertBefore(e,this.nextSibling)});if(arguments.length){var e=v.clean(arguments);return this.pushStack(v.merge(this,e),"after",this.selector)}},remove:function(e,t){var n,r=0;for(;(n=this[r])!=null;r++)if(!e||v.filter(e,[n]).length)!t&&n.nodeType===1&&(v.cleanData(n.getElementsByTagName("*")),v.cleanData([n])),n.parentNode&&n.parentNode.removeChild(n);return this},empty:function(){var e,t=0;for(;(e=this[t])!=null;t++){e.nodeType===1&&v.cleanData(e.getElementsByTagName("*"));while(e.firstChild)e.removeChild(e.firstChild)}return this},clone:function(e,t){return e=e==null?!1:e,t=t==null?e:t,this.map(function(){return v.clone(this,e,t)})},html:function(e){return v.access(this,function(e){var n=this[0]||{},r=0,i=this.length;if(e===t)return n.nodeType===1?n.innerHTML.replace(ht,""):t;if(typeof e=="string"&&!yt.test(e)&&(v.support.htmlSerialize||!wt.test(e))&&(v.support.leadingWhitespace||!pt.test(e))&&!Nt[(vt.exec(e)||["",""])[1].toLowerCase()]){e=e.replace(dt,"<$1></$2>");try{for(;r<i;r++)n=this[r]||{},n.nodeType===1&&(v.cleanData(n.getElementsByTagName("*")),n.innerHTML=e);n=0}catch(s){}}n&&this.empty().append(e)},null,e,arguments.length)},replaceWith:function(e){return ut(this[0])?this.length?this.pushStack(v(v.isFunction(e)?e():e),"replaceWith",e):this:v.isFunction(e)?this.each(function(t){var n=v(this),r=n.html();n.replaceWith(e.call(this,t,r))}):(typeof e!="string"&&(e=v(e).detach()),this.each(function(){var t=this.nextSibling,n=this.parentNode;v(this).remove(),t?v(t).before(e):v(n).append(e)}))},detach:function(e){return this.remove(e,!0)},domManip:function(e,n,r){e=[].concat.apply([],e);var i,s,o,u,a=0,f=e[0],l=[],c=this.length;if(!v.support.checkClone&&c>1&&typeof f=="string"&&St.test(f))return this.each(function(){v(this).domManip(e,n,r)});if(v.isFunction(f))return this.each(function(i){var s=v(this);e[0]=f.call(this,i,n?s.html():t),s.domManip(e,n,r)});if(this[0]){i=v.buildFragment(e,this,l),o=i.fragment,s=o.firstChild,o.childNodes.length===1&&(o=s);if(s){n=n&&v.nodeName(s,"tr");for(u=i.cacheable||c-1;a<c;a++)r.call(n&&v.nodeName(this[a],"table")?Lt(this[a],"tbody"):this[a],a===u?o:v.clone(o,!0,!0))}o=s=null,l.length&&v.each(l,function(e,t){t.src?v.ajax?v.ajax({url:t.src,type:"GET",dataType:"script",async:!1,global:!1,"throws":!0}):v.error("no ajax"):v.globalEval((t.text||t.textContent||t.innerHTML||"").replace(Tt,"")),t.parentNode&&t.parentNode.removeChild(t)})}return this}}),v.buildFragment=function(e,n,r){var s,o,u,a=e[0];return n=n||i,n=!n.nodeType&&n[0]||n,n=n.ownerDocument||n,e.length===1&&typeof a=="string"&&a.length<512&&n===i&&a.charAt(0)==="<"&&!bt.test(a)&&(v.support.checkClone||!St.test(a))&&(v.support.html5Clone||!wt.test(a))&&(o=!0,s=v.fragments[a],u=s!==t),s||(s=n.createDocumentFragment(),v.clean(e,n,s,r),o&&(v.fragments[a]=u&&s)),{fragment:s,cacheable:o}},v.fragments={},v.each({appendTo:"append",prependTo:"prepend",insertBefore:"before",insertAfter:"after",replaceAll:"replaceWith"},function(e,t){v.fn[e]=function(n){var r,i=0,s=[],o=v(n),u=o.length,a=this.length===1&&this[0].parentNode;if((a==null||a&&a.nodeType===11&&a.childNodes.length===1)&&u===1)return o[t](this[0]),this;for(;i<u;i++)r=(i>0?this.clone(!0):this).get(),v(o[i])[t](r),s=s.concat(r);return this.pushStack(s,e,o.selector)}}),v.extend({clone:function(e,t,n){var r,i,s,o;v.support.html5Clone||v.isXMLDoc(e)||!wt.test("<"+e.nodeName+">")?o=e.cloneNode(!0):(kt.innerHTML=e.outerHTML,kt.removeChild(o=kt.firstChild));if((!v.support.noCloneEvent||!v.support.noCloneChecked)&&(e.nodeType===1||e.nodeType===11)&&!v.isXMLDoc(e)){Ot(e,o),r=Mt(e),i=Mt(o);for(s=0;r[s];++s)i[s]&&Ot(r[s],i[s])}if(t){At(e,o);if(n){r=Mt(e),i=Mt(o);for(s=0;r[s];++s)At(r[s],i[s])}}return r=i=null,o},clean:function(e,t,n,r){var s,o,u,a,f,l,c,h,p,d,m,g,y=t===i&&Ct,b=[];if(!t||typeof t.createDocumentFragment=="undefined")t=i;for(s=0;(u=e[s])!=null;s++){typeof u=="number"&&(u+="");if(!u)continue;if(typeof u=="string")if(!gt.test(u))u=t.createTextNode(u);else{y=y||lt(t),c=t.createElement("div"),y.appendChild(c),u=u.replace(dt,"<$1></$2>"),a=(vt.exec(u)||["",""])[1].toLowerCase(),f=Nt[a]||Nt._default,l=f[0],c.innerHTML=f[1]+u+f[2];while(l--)c=c.lastChild;if(!v.support.tbody){h=mt.test(u),p=a==="table"&&!h?c.firstChild&&c.firstChild.childNodes:f[1]==="<table>"&&!h?c.childNodes:[];for(o=p.length-1;o>=0;--o)v.nodeName(p[o],"tbody")&&!p[o].childNodes.length&&p[o].parentNode.removeChild(p[o])}!v.support.leadingWhitespace&&pt.test(u)&&c.insertBefore(t.createTextNode(pt.exec(u)[0]),c.firstChild),u=c.childNodes,c.parentNode.removeChild(c)}u.nodeType?b.push(u):v.merge(b,u)}c&&(u=c=y=null);if(!v.support.appendChecked)for(s=0;(u=b[s])!=null;s++)v.nodeName(u,"input")?_t(u):typeof u.getElementsByTagName!="undefined"&&v.grep(u.getElementsByTagName("input"),_t);if(n){m=function(e){if(!e.type||xt.test(e.type))return r?r.push(e.parentNode?e.parentNode.removeChild(e):e):n.appendChild(e)};for(s=0;(u=b[s])!=null;s++)if(!v.nodeName(u,"script")||!m(u))n.appendChild(u),typeof u.getElementsByTagName!="undefined"&&(g=v.grep(v.merge([],u.getElementsByTagName("script")),m),b.splice.apply(b,[s+1,0].concat(g)),s+=g.length)}return b},cleanData:function(e,t){var n,r,i,s,o=0,u=v.expando,a=v.cache,f=v.support.deleteExpando,l=v.event.special;for(;(i=e[o])!=null;o++)if(t||v.acceptData(i)){r=i[u],n=r&&a[r];if(n){if(n.events)for(s in n.events)l[s]?v.event.remove(i,s):v.removeEvent(i,s,n.handle);a[r]&&(delete a[r],f?delete i[u]:i.removeAttribute?i.removeAttribute(u):i[u]=null,v.deletedIds.push(r))}}}}),function(){var e,t;v.uaMatch=function(e){e=e.toLowerCase();var t=/(chrome)[ \/]([\w.]+)/.exec(e)||/(webkit)[ \/]([\w.]+)/.exec(e)||/(opera)(?:.*version|)[ \/]([\w.]+)/.exec(e)||/(msie) ([\w.]+)/.exec(e)||e.indexOf("compatible")<0&&/(mozilla)(?:.*? rv:([\w.]+)|)/.exec(e)||[];return{browser:t[1]||"",version:t[2]||"0"}},e=v.uaMatch(o.userAgent),t={},e.browser&&(t[e.browser]=!0,t.version=e.version),t.chrome?t.webkit=!0:t.webkit&&(t.safari=!0),v.browser=t,v.sub=function(){function e(t,n){return new e.fn.init(t,n)}v.extend(!0,e,this),e.superclass=this,e.fn=e.prototype=this(),e.fn.constructor=e,e.sub=this.sub,e.fn.init=function(r,i){return i&&i instanceof v&&!(i instanceof e)&&(i=e(i)),v.fn.init.call(this,r,i,t)},e.fn.init.prototype=e.fn;var t=e(i);return e}}();var Dt,Pt,Ht,Bt=/alpha\([^)]*\)/i,jt=/opacity=([^)]*)/,Ft=/^(top|right|bottom|left)$/,It=/^(none|table(?!-c[ea]).+)/,qt=/^margin/,Rt=new RegExp("^("+m+")(.*)$","i"),Ut=new RegExp("^("+m+")(?!px)[a-z%]+$","i"),zt=new RegExp("^([-+])=("+m+")","i"),Wt={BODY:"block"},Xt={position:"absolute",visibility:"hidden",display:"block"},Vt={letterSpacing:0,fontWeight:400},$t=["Top","Right","Bottom","Left"],Jt=["Webkit","O","Moz","ms"],Kt=v.fn.toggle;v.fn.extend({css:function(e,n){return v.access(this,function(e,n,r){return r!==t?v.style(e,n,r):v.css(e,n)},e,n,arguments.length>1)},show:function(){return Yt(this,!0)},hide:function(){return Yt(this)},toggle:function(e,t){var n=typeof e=="boolean";return v.isFunction(e)&&v.isFunction(t)?Kt.apply(this,arguments):this.each(function(){(n?e:Gt(this))?v(this).show():v(this).hide()})}}),v.extend({cssHooks:{opacity:{get:function(e,t){if(t){var n=Dt(e,"opacity");return n===""?"1":n}}}},cssNumber:{fillOpacity:!0,fontWeight:!0,lineHeight:!0,opacity:!0,orphans:!0,widows:!0,zIndex:!0,zoom:!0},cssProps:{"float":v.support.cssFloat?"cssFloat":"styleFloat"},style:function(e,n,r,i){if(!e||e.nodeType===3||e.nodeType===8||!e.style)return;var s,o,u,a=v.camelCase(n),f=e.style;n=v.cssProps[a]||(v.cssProps[a]=Qt(f,a)),u=v.cssHooks[n]||v.cssHooks[a];if(r===t)return u&&"get"in u&&(s=u.get(e,!1,i))!==t?s:f[n];o=typeof r,o==="string"&&(s=zt.exec(r))&&(r=(s[1]+1)*s[2]+parseFloat(v.css(e,n)),o="number");if(r==null||o==="number"&&isNaN(r))return;o==="number"&&!v.cssNumber[a]&&(r+="px");if(!u||!("set"in u)||(r=u.set(e,r,i))!==t)try{f[n]=r}catch(l){}},css:function(e,n,r,i){var s,o,u,a=v.camelCase(n);return n=v.cssProps[a]||(v.cssProps[a]=Qt(e.style,a)),u=v.cssHooks[n]||v.cssHooks[a],u&&"get"in u&&(s=u.get(e,!0,i)),s===t&&(s=Dt(e,n)),s==="normal"&&n in Vt&&(s=Vt[n]),r||i!==t?(o=parseFloat(s),r||v.isNumeric(o)?o||0:s):s},swap:function(e,t,n){var r,i,s={};for(i in t)s[i]=e.style[i],e.style[i]=t[i];r=n.call(e);for(i in t)e.style[i]=s[i];return r}}),e.getComputedStyle?Dt=function(t,n){var r,i,s,o,u=e.getComputedStyle(t,null),a=t.style;return u&&(r=u.getPropertyValue(n)||u[n],r===""&&!v.contains(t.ownerDocument,t)&&(r=v.style(t,n)),Ut.test(r)&&qt.test(n)&&(i=a.width,s=a.minWidth,o=a.maxWidth,a.minWidth=a.maxWidth=a.width=r,r=u.width,a.width=i,a.minWidth=s,a.maxWidth=o)),r}:i.documentElement.currentStyle&&(Dt=function(e,t){var n,r,i=e.currentStyle&&e.currentStyle[t],s=e.style;return i==null&&s&&s[t]&&(i=s[t]),Ut.test(i)&&!Ft.test(t)&&(n=s.left,r=e.runtimeStyle&&e.runtimeStyle.left,r&&(e.runtimeStyle.left=e.currentStyle.left),s.left=t==="fontSize"?"1em":i,i=s.pixelLeft+"px",s.left=n,r&&(e.runtimeStyle.left=r)),i===""?"auto":i}),v.each(["height","width"],function(e,t){v.cssHooks[t]={get:function(e,n,r){if(n)return e.offsetWidth===0&&It.test(Dt(e,"display"))?v.swap(e,Xt,function(){return tn(e,t,r)}):tn(e,t,r)},set:function(e,n,r){return Zt(e,n,r?en(e,t,r,v.support.boxSizing&&v.css(e,"boxSizing")==="border-box"):0)}}}),v.support.opacity||(v.cssHooks.opacity={get:function(e,t){return jt.test((t&&e.currentStyle?e.currentStyle.filter:e.style.filter)||"")?.01*parseFloat(RegExp.$1)+"":t?"1":""},set:function(e,t){var n=e.style,r=e.currentStyle,i=v.isNumeric(t)?"alpha(opacity="+t*100+")":"",s=r&&r.filter||n.filter||"";n.zoom=1;if(t>=1&&v.trim(s.replace(Bt,""))===""&&n.removeAttribute){n.removeAttribute("filter");if(r&&!r.filter)return}n.filter=Bt.test(s)?s.replace(Bt,i):s+" "+i}}),v(function(){v.support.reliableMarginRight||(v.cssHooks.marginRight={get:function(e,t){return v.swap(e,{display:"inline-block"},function(){if(t)return Dt(e,"marginRight")})}}),!v.support.pixelPosition&&v.fn.position&&v.each(["top","left"],function(e,t){v.cssHooks[t]={get:function(e,n){if(n){var r=Dt(e,t);return Ut.test(r)?v(e).position()[t]+"px":r}}}})}),v.expr&&v.expr.filters&&(v.expr.filters.hidden=function(e){return e.offsetWidth===0&&e.offsetHeight===0||!v.support.reliableHiddenOffsets&&(e.style&&e.style.display||Dt(e,"display"))==="none"},v.expr.filters.visible=function(e){return!v.expr.filters.hidden(e)}),v.each({margin:"",padding:"",border:"Width"},function(e,t){v.cssHooks[e+t]={expand:function(n){var r,i=typeof n=="string"?n.split(" "):[n],s={};for(r=0;r<4;r++)s[e+$t[r]+t]=i[r]||i[r-2]||i[0];return s}},qt.test(e)||(v.cssHooks[e+t].set=Zt)});var rn=/%20/g,sn=/\[\]$/,on=/\r?\n/g,un=/^(?:color|date|datetime|datetime-local|email|hidden|month|number|password|range|search|tel|text|time|url|week)$/i,an=/^(?:select|textarea)/i;v.fn.extend({serialize:function(){return v.param(this.serializeArray())},serializeArray:function(){return this.map(function(){return this.elements?v.makeArray(this.elements):this}).filter(function(){return this.name&&!this.disabled&&(this.checked||an.test(this.nodeName)||un.test(this.type))}).map(function(e,t){var n=v(this).val();return n==null?null:v.isArray(n)?v.map(n,function(e,n){return{name:t.name,value:e.replace(on,"\r\n")}}):{name:t.name,value:n.replace(on,"\r\n")}}).get()}}),v.param=function(e,n){var r,i=[],s=function(e,t){t=v.isFunction(t)?t():t==null?"":t,i[i.length]=encodeURIComponent(e)+"="+encodeURIComponent(t)};n===t&&(n=v.ajaxSettings&&v.ajaxSettings.traditional);if(v.isArray(e)||e.jquery&&!v.isPlainObject(e))v.each(e,function(){s(this.name,this.value)});else for(r in e)fn(r,e[r],n,s);return i.join("&").replace(rn,"+")};var ln,cn,hn=/#.*$/,pn=/^(.*?):[ \t]*([^\r\n]*)\r?$/mg,dn=/^(?:about|app|app\-storage|.+\-extension|file|res|widget):$/,vn=/^(?:GET|HEAD)$/,mn=/^\/\//,gn=/\?/,yn=/<script\b[^<]*(?:(?!<\/script>)<[^<]*)*<\/script>/gi,bn=/([?&])_=[^&]*/,wn=/^([\w\+\.\-]+:)(?:\/\/([^\/?#:]*)(?::(\d+)|)|)/,En=v.fn.load,Sn={},xn={},Tn=["*/"]+["*"];try{cn=s.href}catch(Nn){cn=i.createElement("a"),cn.href="",cn=cn.href}ln=wn.exec(cn.toLowerCase())||[],v.fn.load=function(e,n,r){if(typeof e!="string"&&En)return En.apply(this,arguments);if(!this.length)return this;var i,s,o,u=this,a=e.indexOf(" ");return a>=0&&(i=e.slice(a,e.length),e=e.slice(0,a)),v.isFunction(n)?(r=n,n=t):n&&typeof n=="object"&&(s="POST"),v.ajax({url:e,type:s,dataType:"html",data:n,complete:function(e,t){r&&u.each(r,o||[e.responseText,t,e])}}).done(function(e){o=arguments,u.html(i?v("<div>").append(e.replace(yn,"")).find(i):e)}),this},v.each("ajaxStart ajaxStop ajaxComplete ajaxError ajaxSuccess ajaxSend".split(" "),function(e,t){v.fn[t]=function(e){return this.on(t,e)}}),v.each(["get","post"],function(e,n){v[n]=function(e,r,i,s){return v.isFunction(r)&&(s=s||i,i=r,r=t),v.ajax({type:n,url:e,data:r,success:i,dataType:s})}}),v.extend({getScript:function(e,n){return v.get(e,t,n,"script")},getJSON:function(e,t,n){return v.get(e,t,n,"json")},ajaxSetup:function(e,t){return t?Ln(e,v.ajaxSettings):(t=e,e=v.ajaxSettings),Ln(e,t),e},ajaxSettings:{url:cn,isLocal:dn.test(ln[1]),global:!0,type:"GET",contentType:"application/x-www-form-urlencoded; charset=UTF-8",processData:!0,async:!0,accepts:{xml:"application/xml, text/xml",html:"text/html",text:"text/plain",json:"application/json, text/javascript","*":Tn},contents:{xml:/xml/,html:/html/,json:/json/},responseFields:{xml:"responseXML",text:"responseText"},converters:{"* text":e.String,"text html":!0,"text json":v.parseJSON,"text xml":v.parseXML},flatOptions:{context:!0,url:!0}},ajaxPrefilter:Cn(Sn),ajaxTransport:Cn(xn),ajax:function(e,n){function T(e,n,s,a){var l,y,b,w,S,T=n;if(E===2)return;E=2,u&&clearTimeout(u),o=t,i=a||"",x.readyState=e>0?4:0,s&&(w=An(c,x,s));if(e>=200&&e<300||e===304)c.ifModified&&(S=x.getResponseHeader("Last-Modified"),S&&(v.lastModified[r]=S),S=x.getResponseHeader("Etag"),S&&(v.etag[r]=S)),e===304?(T="notmodified",l=!0):(l=On(c,w),T=l.state,y=l.data,b=l.error,l=!b);else{b=T;if(!T||e)T="error",e<0&&(e=0)}x.status=e,x.statusText=(n||T)+"",l?d.resolveWith(h,[y,T,x]):d.rejectWith(h,[x,T,b]),x.statusCode(g),g=t,f&&p.trigger("ajax"+(l?"Success":"Error"),[x,c,l?y:b]),m.fireWith(h,[x,T]),f&&(p.trigger("ajaxComplete",[x,c]),--v.active||v.event.trigger("ajaxStop"))}typeof e=="object"&&(n=e,e=t),n=n||{};var r,i,s,o,u,a,f,l,c=v.ajaxSetup({},n),h=c.context||c,p=h!==c&&(h.nodeType||h instanceof v)?v(h):v.event,d=v.Deferred(),m=v.Callbacks("once memory"),g=c.statusCode||{},b={},w={},E=0,S="canceled",x={readyState:0,setRequestHeader:function(e,t){if(!E){var n=e.toLowerCase();e=w[n]=w[n]||e,b[e]=t}return this},getAllResponseHeaders:function(){return E===2?i:null},getResponseHeader:function(e){var n;if(E===2){if(!s){s={};while(n=pn.exec(i))s[n[1].toLowerCase()]=n[2]}n=s[e.toLowerCase()]}return n===t?null:n},overrideMimeType:function(e){return E||(c.mimeType=e),this},abort:function(e){return e=e||S,o&&o.abort(e),T(0,e),this}};d.promise(x),x.success=x.done,x.error=x.fail,x.complete=m.add,x.statusCode=function(e){if(e){var t;if(E<2)for(t in e)g[t]=[g[t],e[t]];else t=e[x.status],x.always(t)}return this},c.url=((e||c.url)+"").replace(hn,"").replace(mn,ln[1]+"//"),c.dataTypes=v.trim(c.dataType||"*").toLowerCase().split(y),c.crossDomain==null&&(a=wn.exec(c.url.toLowerCase()),c.crossDomain=!(!a||a[1]===ln[1]&&a[2]===ln[2]&&(a[3]||(a[1]==="http:"?80:443))==(ln[3]||(ln[1]==="http:"?80:443)))),c.data&&c.processData&&typeof c.data!="string"&&(c.data=v.param(c.data,c.traditional)),kn(Sn,c,n,x);if(E===2)return x;f=c.global,c.type=c.type.toUpperCase(),c.hasContent=!vn.test(c.type),f&&v.active++===0&&v.event.trigger("ajaxStart");if(!c.hasContent){c.data&&(c.url+=(gn.test(c.url)?"&":"?")+c.data,delete c.data),r=c.url;if(c.cache===!1){var N=v.now(),C=c.url.replace(bn,"$1_="+N);c.url=C+(C===c.url?(gn.test(c.url)?"&":"?")+"_="+N:"")}}(c.data&&c.hasContent&&c.contentType!==!1||n.contentType)&&x.setRequestHeader("Content-Type",c.contentType),c.ifModified&&(r=r||c.url,v.lastModified[r]&&x.setRequestHeader("If-Modified-Since",v.lastModified[r]),v.etag[r]&&x.setRequestHeader("If-None-Match",v.etag[r])),x.setRequestHeader("Accept",c.dataTypes[0]&&c.accepts[c.dataTypes[0]]?c.accepts[c.dataTypes[0]]+(c.dataTypes[0]!=="*"?", "+Tn+"; q=0.01":""):c.accepts["*"]);for(l in c.headers)x.setRequestHeader(l,c.headers[l]);if(!c.beforeSend||c.beforeSend.call(h,x,c)!==!1&&E!==2){S="abort";for(l in{success:1,error:1,complete:1})x[l](c[l]);o=kn(xn,c,n,x);if(!o)T(-1,"No Transport");else{x.readyState=1,f&&p.trigger("ajaxSend",[x,c]),c.async&&c.timeout>0&&(u=setTimeout(function(){x.abort("timeout")},c.timeout));try{E=1,o.send(b,T)}catch(k){if(!(E<2))throw k;T(-1,k)}}return x}return x.abort()},active:0,lastModified:{},etag:{}});var Mn=[],_n=/\?/,Dn=/(=)\?(?=&|$)|\?\?/,Pn=v.now();v.ajaxSetup({jsonp:"callback",jsonpCallback:function(){var e=Mn.pop()||v.expando+"_"+Pn++;return this[e]=!0,e}}),v.ajaxPrefilter("json jsonp",function(n,r,i){var s,o,u,a=n.data,f=n.url,l=n.jsonp!==!1,c=l&&Dn.test(f),h=l&&!c&&typeof a=="string"&&!(n.contentType||"").indexOf("application/x-www-form-urlencoded")&&Dn.test(a);if(n.dataTypes[0]==="jsonp"||c||h)return s=n.jsonpCallback=v.isFunction(n.jsonpCallback)?n.jsonpCallback():n.jsonpCallback,o=e[s],c?n.url=f.replace(Dn,"$1"+s):h?n.data=a.replace(Dn,"$1"+s):l&&(n.url+=(_n.test(f)?"&":"?")+n.jsonp+"="+s),n.converters["script json"]=function(){return u||v.error(s+" was not called"),u[0]},n.dataTypes[0]="json",e[s]=function(){u=arguments},i.always(function(){e[s]=o,n[s]&&(n.jsonpCallback=r.jsonpCallback,Mn.push(s)),u&&v.isFunction(o)&&o(u[0]),u=o=t}),"script"}),v.ajaxSetup({accepts:{script:"text/javascript, application/javascript, application/ecmascript, application/x-ecmascript"},contents:{script:/javascript|ecmascript/},converters:{"text script":function(e){return v.globalEval(e),e}}}),v.ajaxPrefilter("script",function(e){e.cache===t&&(e.cache=!1),e.crossDomain&&(e.type="GET",e.global=!1)}),v.ajaxTransport("script",function(e){if(e.crossDomain){var n,r=i.head||i.getElementsByTagName("head")[0]||i.documentElement;return{send:function(s,o){n=i.createElement("script"),n.async="async",e.scriptCharset&&(n.charset=e.scriptCharset),n.src=e.url,n.onload=n.onreadystatechange=function(e,i){if(i||!n.readyState||/loaded|complete/.test(n.readyState))n.onload=n.onreadystatechange=null,r&&n.parentNode&&r.removeChild(n),n=t,i||o(200,"success")},r.insertBefore(n,r.firstChild)},abort:function(){n&&n.onload(0,1)}}}});var Hn,Bn=e.ActiveXObject?function(){for(var e in Hn)Hn[e](0,1)}:!1,jn=0;v.ajaxSettings.xhr=e.ActiveXObject?function(){return!this.isLocal&&Fn()||In()}:Fn,function(e){v.extend(v.support,{ajax:!!e,cors:!!e&&"withCredentials"in e})}(v.ajaxSettings.xhr()),v.support.ajax&&v.ajaxTransport(function(n){if(!n.crossDomain||v.support.cors){var r;return{send:function(i,s){var o,u,a=n.xhr();n.username?a.open(n.type,n.url,n.async,n.username,n.password):a.open(n.type,n.url,n.async);if(n.xhrFields)for(u in n.xhrFields)a[u]=n.xhrFields[u];n.mimeType&&a.overrideMimeType&&a.overrideMimeType(n.mimeType),!n.crossDomain&&!i["X-Requested-With"]&&(i["X-Requested-With"]="XMLHttpRequest");try{for(u in i)a.setRequestHeader(u,i[u])}catch(f){}a.send(n.hasContent&&n.data||null),r=function(e,i){var u,f,l,c,h;try{if(r&&(i||a.readyState===4)){r=t,o&&(a.onreadystatechange=v.noop,Bn&&delete Hn[o]);if(i)a.readyState!==4&&a.abort();else{u=a.status,l=a.getAllResponseHeaders(),c={},h=a.responseXML,h&&h.documentElement&&(c.xml=h);try{c.text=a.responseText}catch(p){}try{f=a.statusText}catch(p){f=""}!u&&n.isLocal&&!n.crossDomain?u=c.text?200:404:u===1223&&(u=204)}}}catch(d){i||s(-1,d)}c&&s(u,f,c,l)},n.async?a.readyState===4?setTimeout(r,0):(o=++jn,Bn&&(Hn||(Hn={},v(e).unload(Bn)),Hn[o]=r),a.onreadystatechange=r):r()},abort:function(){r&&r(0,1)}}}});var qn,Rn,Un=/^(?:toggle|show|hide)$/,zn=new RegExp("^(?:([-+])=|)("+m+")([a-z%]*)$","i"),Wn=/queueHooks$/,Xn=[Gn],Vn={"*":[function(e,t){var n,r,i=this.createTween(e,t),s=zn.exec(t),o=i.cur(),u=+o||0,a=1,f=20;if(s){n=+s[2],r=s[3]||(v.cssNumber[e]?"":"px");if(r!=="px"&&u){u=v.css(i.elem,e,!0)||n||1;do a=a||".5",u/=a,v.style(i.elem,e,u+r);while(a!==(a=i.cur()/o)&&a!==1&&--f)}i.unit=r,i.start=u,i.end=s[1]?u+(s[1]+1)*n:n}return i}]};v.Animation=v.extend(Kn,{tweener:function(e,t){v.isFunction(e)?(t=e,e=["*"]):e=e.split(" ");var n,r=0,i=e.length;for(;r<i;r++)n=e[r],Vn[n]=Vn[n]||[],Vn[n].unshift(t)},prefilter:function(e,t){t?Xn.unshift(e):Xn.push(e)}}),v.Tween=Yn,Yn.prototype={constructor:Yn,init:function(e,t,n,r,i,s){this.elem=e,this.prop=n,this.easing=i||"swing",this.options=t,this.start=this.now=this.cur(),this.end=r,this.unit=s||(v.cssNumber[n]?"":"px")},cur:function(){var e=Yn.propHooks[this.prop];return e&&e.get?e.get(this):Yn.propHooks._default.get(this)},run:function(e){var t,n=Yn.propHooks[this.prop];return this.options.duration?this.pos=t=v.easing[this.easing](e,this.options.duration*e,0,1,this.options.duration):this.pos=t=e,this.now=(this.end-this.start)*t+this.start,this.options.step&&this.options.step.call(this.elem,this.now,this),n&&n.set?n.set(this):Yn.propHooks._default.set(this),this}},Yn.prototype.init.prototype=Yn.prototype,Yn.propHooks={_default:{get:function(e){var t;return e.elem[e.prop]==null||!!e.elem.style&&e.elem.style[e.prop]!=null?(t=v.css(e.elem,e.prop,!1,""),!t||t==="auto"?0:t):e.elem[e.prop]},set:function(e){v.fx.step[e.prop]?v.fx.step[e.prop](e):e.elem.style&&(e.elem.style[v.cssProps[e.prop]]!=null||v.cssHooks[e.prop])?v.style(e.elem,e.prop,e.now+e.unit):e.elem[e.prop]=e.now}}},Yn.propHooks.scrollTop=Yn.propHooks.scrollLeft={set:function(e){e.elem.nodeType&&e.elem.parentNode&&(e.elem[e.prop]=e.now)}},v.each(["toggle","show","hide"],function(e,t){var n=v.fn[t];v.fn[t]=function(r,i,s){return r==null||typeof r=="boolean"||!e&&v.isFunction(r)&&v.isFunction(i)?n.apply(this,arguments):this.animate(Zn(t,!0),r,i,s)}}),v.fn.extend({fadeTo:function(e,t,n,r){return this.filter(Gt).css("opacity",0).show().end().animate({opacity:t},e,n,r)},animate:function(e,t,n,r){var i=v.isEmptyObject(e),s=v.speed(t,n,r),o=function(){var t=Kn(this,v.extend({},e),s);i&&t.stop(!0)};return i||s.queue===!1?this.each(o):this.queue(s.queue,o)},stop:function(e,n,r){var i=function(e){var t=e.stop;delete e.stop,t(r)};return typeof e!="string"&&(r=n,n=e,e=t),n&&e!==!1&&this.queue(e||"fx",[]),this.each(function(){var t=!0,n=e!=null&&e+"queueHooks",s=v.timers,o=v._data(this);if(n)o[n]&&o[n].stop&&i(o[n]);else for(n in o)o[n]&&o[n].stop&&Wn.test(n)&&i(o[n]);for(n=s.length;n--;)s[n].elem===this&&(e==null||s[n].queue===e)&&(s[n].anim.stop(r),t=!1,s.splice(n,1));(t||!r)&&v.dequeue(this,e)})}}),v.each({slideDown:Zn("show"),slideUp:Zn("hide"),slideToggle:Zn("toggle"),fadeIn:{opacity:"show"},fadeOut:{opacity:"hide"},fadeToggle:{opacity:"toggle"}},function(e,t){v.fn[e]=function(e,n,r){return this.animate(t,e,n,r)}}),v.speed=function(e,t,n){var r=e&&typeof e=="object"?v.extend({},e):{complete:n||!n&&t||v.isFunction(e)&&e,duration:e,easing:n&&t||t&&!v.isFunction(t)&&t};r.duration=v.fx.off?0:typeof r.duration=="number"?r.duration:r.duration in v.fx.speeds?v.fx.speeds[r.duration]:v.fx.speeds._default;if(r.queue==null||r.queue===!0)r.queue="fx";return r.old=r.complete,r.complete=function(){v.isFunction(r.old)&&r.old.call(this),r.queue&&v.dequeue(this,r.queue)},r},v.easing={linear:function(e){return e},swing:function(e){return.5-Math.cos(e*Math.PI)/2}},v.timers=[],v.fx=Yn.prototype.init,v.fx.tick=function(){var e,n=v.timers,r=0;qn=v.now();for(;r<n.length;r++)e=n[r],!e()&&n[r]===e&&n.splice(r--,1);n.length||v.fx.stop(),qn=t},v.fx.timer=function(e){e()&&v.timers.push(e)&&!Rn&&(Rn=setInterval(v.fx.tick,v.fx.interval))},v.fx.interval=13,v.fx.stop=function(){clearInterval(Rn),Rn=null},v.fx.speeds={slow:600,fast:200,_default:400},v.fx.step={},v.expr&&v.expr.filters&&(v.expr.filters.animated=function(e){return v.grep(v.timers,function(t){return e===t.elem}).length});var er=/^(?:body|html)$/i;v.fn.offset=function(e){if(arguments.length)return e===t?this:this.each(function(t){v.offset.setOffset(this,e,t)});var n,r,i,s,o,u,a,f={top:0,left:0},l=this[0],c=l&&l.ownerDocument;if(!c)return;return(r=c.body)===l?v.offset.bodyOffset(l):(n=c.documentElement,v.contains(n,l)?(typeof l.getBoundingClientRect!="undefined"&&(f=l.getBoundingClientRect()),i=tr(c),s=n.clientTop||r.clientTop||0,o=n.clientLeft||r.clientLeft||0,u=i.pageYOffset||n.scrollTop,a=i.pageXOffset||n.scrollLeft,{top:f.top+u-s,left:f.left+a-o}):f)},v.offset={bodyOffset:function(e){var t=e.offsetTop,n=e.offsetLeft;return v.support.doesNotIncludeMarginInBodyOffset&&(t+=parseFloat(v.css(e,"marginTop"))||0,n+=parseFloat(v.css(e,"marginLeft"))||0),{top:t,left:n}},setOffset:function(e,t,n){var r=v.css(e,"position");r==="static"&&(e.style.position="relative");var i=v(e),s=i.offset(),o=v.css(e,"top"),u=v.css(e,"left"),a=(r==="absolute"||r==="fixed")&&v.inArray("auto",[o,u])>-1,f={},l={},c,h;a?(l=i.position(),c=l.top,h=l.left):(c=parseFloat(o)||0,h=parseFloat(u)||0),v.isFunction(t)&&(t=t.call(e,n,s)),t.top!=null&&(f.top=t.top-s.top+c),t.left!=null&&(f.left=t.left-s.left+h),"using"in t?t.using.call(e,f):i.css(f)}},v.fn.extend({position:function(){if(!this[0])return;var e=this[0],t=this.offsetParent(),n=this.offset(),r=er.test(t[0].nodeName)?{top:0,left:0}:t.offset();return n.top-=parseFloat(v.css(e,"marginTop"))||0,n.left-=parseFloat(v.css(e,"marginLeft"))||0,r.top+=parseFloat(v.css(t[0],"borderTopWidth"))||0,r.left+=parseFloat(v.css(t[0],"borderLeftWidth"))||0,{top:n.top-r.top,left:n.left-r.left}},offsetParent:function(){return this.map(function(){var e=this.offsetParent||i.body;while(e&&!er.test(e.nodeName)&&v.css(e,"position")==="static")e=e.offsetParent;return e||i.body})}}),v.each({scrollLeft:"pageXOffset",scrollTop:"pageYOffset"},function(e,n){var r=/Y/.test(n);v.fn[e]=function(i){return v.access(this,function(e,i,s){var o=tr(e);if(s===t)return o?n in o?o[n]:o.document.documentElement[i]:e[i];o?o.scrollTo(r?v(o).scrollLeft():s,r?s:v(o).scrollTop()):e[i]=s},e,i,arguments.length,null)}}),v.each({Height:"height",Width:"width"},function(e,n){v.each({padding:"inner"+e,content:n,"":"outer"+e},function(r,i){v.fn[i]=function(i,s){var o=arguments.length&&(r||typeof i!="boolean"),u=r||(i===!0||s===!0?"margin":"border");return v.access(this,function(n,r,i){var s;return v.isWindow(n)?n.document.documentElement["client"+e]:n.nodeType===9?(s=n.documentElement,Math.max(n.body["scroll"+e],s["scroll"+e],n.body["offset"+e],s["offset"+e],s["client"+e])):i===t?v.css(n,r,i,u):v.style(n,r,i,u)},n,o?i:t,o,null)}})}),e.jQuery=e.$=v,typeof define=="function"&&define.amd&&define.amd.jQuery&&define("jquery",[],function(){return v})})(window);
\ No newline at end of file
Index: src/main/webapp/statics/js/providermodify.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/webapp/statics/js/providermodify.js	(date 1578576589297)
+++ src/main/webapp/statics/js/providermodify.js	(date 1578576589297)
@@ -0,0 +1,66 @@
+var proContact = null;
+var proPhone = null;
+var saveBtn = null;
+var backBtn = null;
+
+$(function(){
+	proContact = $("#proContact");
+	proPhone = $("#proPhone");
+	saveBtn = $("#save");
+	backBtn = $("#back");
+	
+	//初始化的时候，要把所有的提示信息变为：* 以提示必填项，更灵活，不要写在页面上
+	proContact.next().html("*");
+	proPhone.next().html("*");
+	
+	/*
+	 * 验证
+	 * 失焦\获焦
+	 * jquery的方法传递
+	 */
+	proContact.on("focus",function(){
+		validateTip(proContact.next(),{"color":"#666666"},"* 请输入联系人",false);
+	}).on("blur",function(){
+		if(proContact.val() != null && proContact.val() != ""){
+			validateTip(proContact.next(),{"color":"green"},imgYes,true);
+		}else{
+			validateTip(proContact.next(),{"color":"red"},imgNo+" 联系人不能为空，请重新输入",false);
+		}
+		
+	});
+	
+	proPhone.on("focus",function(){
+		validateTip(proPhone.next(),{"color":"#666666"},"* 请输入手机号",false);
+	}).on("blur",function(){
+		var patrn=/^(13[0-9]|15[0-9]|18[0-9])\d{8}$/;
+		if(proPhone.val().match(patrn)){
+			validateTip(proPhone.next(),{"color":"green"},imgYes,true);
+		}else{
+			validateTip(proPhone.next(),{"color":"red"},imgNo + " 您输入的手机号格式不正确",false);
+		}
+	});
+	
+	saveBtn.on("click",function(){
+		proContact.blur();
+		proPhone.blur();
+		if(proContact.attr("validateStatus") == "true" && 
+				proPhone.attr("validateStatus") == "true"){
+			if(confirm("是否确认提交数据")){
+				$("#providerForm").submit();
+			}
+		}
+	});
+	
+	backBtn.on("click",function(){
+		//alert("modify: "+referer);
+		if(referer != undefined 
+			&& null != referer 
+			&& "" != referer
+			&& "null" != referer
+			&& referer.length > 4){
+		 window.location.href = referer;
+		}else{
+			history.back(-1);
+		}
+	});
+});
\ No newline at end of file
Index: src/main/webapp/statics/css/style.css
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/webapp/statics/css/style.css	(date 1578576616941)
+++ src/main/webapp/statics/css/style.css	(date 1578576616941)
@@ -0,0 +1,443 @@
+* {
+    margin: 0;
+    padding: 0;
+}
+
+/*登录页面*/
+.login_bg {
+    background: url("../images/loginBg.jpg") 0 0 repeat-x;
+}
+
+.loginBox {
+    width: 1000px;
+    margin: 0 auto;
+    background: url("../images/login_bg.jpg") 0 0 no-repeat;
+}
+
+.loginHeader {
+    padding-top: 102px;
+    text-align: center;
+    padding-bottom: 30px;
+}
+
+.loginHeader h1 {
+    color: #fff;
+    text-shadow: 2px 2px #000;
+}
+
+.loginCont {
+    width: 388px;
+    height: 284px;
+    /*border: 1px solid red ;*/
+    margin: 0 auto;
+}
+
+.formBox {
+    position: relative;
+}
+
+/*输入框里默认输入字体*/
+::-webkit-input-placeholder {
+    color: rgb(190, 188, 188);
+    /*font-style: italic;*/
+}
+
+input:-moz-placeholder,
+textarea:-moz-placeholder {
+    color: rgb(190, 188, 188);
+    font-style: italic;
+}
+
+input {
+    outline: none;
+}
+
+.loginForm {
+    background: url("../images/formBg.png") 0 0 no-repeat;
+    width: 320px;
+    height: 140px;
+    border-radius: 8px;
+    padding: 90px 38px 48px 30px;
+    /*border: 1px solid green;*/
+}
+
+.loginForm label {
+    width: 20%;
+    display: inline-block;
+}
+
+.inputbox {
+    height: 60px;
+}
+
+.info {
+    color: red;
+    font-weight:bold; 
+}
+
+.inputbox input {
+    width: 66%;
+    padding: 10px 5px 10px 20px;
+    border: 1px solid rgb(178, 178, 178);
+    border-radius: 3px;
+    -webkit-box-shadow: 0px 1px 4px 0px rgba(168, 168, 168, 0.6) inset;
+    -moz-box-shadow: 0px 1px 4px 0px rgba(168, 168, 168, 0.6) inset;
+    box-shadow: 0px 1px 4px 0px rgba(168, 168, 168, 0.6) inset;
+
+}
+
+/*输入框得到焦点的效果*/
+.inputbox input:active, .providerAdd input:focus,
+.inputbox input:focus {
+    border: 1px solid rgba(91, 90, 90, 0.7);
+    background: rgba(238, 236, 240, 0.2);
+    -webkit-box-shadow: 0px 1px 4px 0px rgba(168, 168, 168, 0.9) inset;
+    -moz-box-shadow: 0px 1px 4px 0px rgba(168, 168, 168, 0.9) inset;
+    box-shadow: 0px 1px 4px 0px rgba(168, 168, 168, 0.9) inset;
+}
+
+.subBtn {
+    margin-left: 70px;
+}
+
+/*/!*登录页登录和重置按钮*!/.providerView a是供应商管理页面下信息查看也得返回按钮的样式*/
+input[type='submit'], input[type='reset'], .providerView a {
+    width: 30%;
+    cursor: pointer;
+    background: #54a4d7;
+    padding: 6px 18px;
+    font-family: 'BebasNeueRegular', 'Arial Narrow', Arial, sans-serif;
+    color: #fff;
+    font-size: 18px;
+    border: 1px solid #4682be;
+    margin-bottom: 10px;
+    margin-right: 22px;
+    text-shadow: 0 1px 1px rgba(0, 0, 0, 0.5);
+    -webkit-border-radius: 3px;
+    -moz-border-radius: 3px;
+    border-radius: 3px;
+    -webkit-box-shadow: 0px 1px 4px 4px rgba(0, 0, 0, 0.07) inset,
+    0px 0px 0px 3px rgb(254, 254, 254),
+    0px 5px 3px 3px rgb(210, 210, 210);
+    -moz-box-shadow: 0px 1px 4px 4px rgba(0, 0, 0, 0.07) inset,
+    0px 0px 0px 3px rgb(254, 254, 254),
+    0px 5px 3px 3px rgb(210, 210, 210);
+    box-shadow: 0px 1px 4px 4px rgba(0, 0, 0, 0.07) inset,
+    0px 0px 0px 3px rgb(254, 254, 254),
+    0px 5px 3px 3px rgb(210, 210, 210);
+
+}
+
+input[type='submit']:hover, input[type='reset']:hover {
+    background: rgb(74, 179, 198);
+}
+
+input[type='submit']:active, input[type='submit']:focus,
+input[type='reset']:active, input[type='reset']:focus, .providerView a:hover, .providerView a:active {
+    background: #2a5989;
+    border: 1px solid rgb(12, 76, 87);
+    -webkit-box-shadow: 0px 1px 6px 4px rgba(0, 0, 0, 0.2) inset;
+    -moz-box-shadow: 0px 1px 6px 4px rgba(0, 0, 0, 0.2) inset;
+    box-shadow: 0px 1px 6px 4px rgba(0, 0, 0, 0.2) inset;
+}
+
+/*欢迎登录页*/
+.wColck {
+    width: 88px;
+    height: 108px;
+    margin: 50px;
+    float: left;
+}
+
+.wFont {
+    float: left;
+    margin-top: 50px;
+}
+
+.wFont h2 {
+    font-size: 30px;
+    line-height: 50px;
+    color: #0a5eb6;
+}
+
+.wFont p {
+    font-size: 14px;
+    line-height: 30px;
+    color: #5a656c;
+}
+
+/*供应商管理页面*/
+.providerTable {
+    width: 100%;
+    border: 1px solid #ccc;
+}
+
+.providerTable tr {
+    height: 30px;
+    line-height: 30px;
+    text-align: center;
+}
+
+.providerTable tr:nth-child(odd) {
+    background: #f6f7f9;
+}
+
+.providerTable tr:hover {
+    background: #e9f9ca;
+}
+
+.firstTr {
+    border: 1px solid #d6dfe6;
+    background: linear-gradient(to bottom, #f3f8fc, #ebf4f9, #e3f1fa, #e0f0fd, #d8e9fd);
+}
+
+.firstTr th {
+    border-right: 2px solid rgba(209, 218, 223, 0.4);
+}
+
+.providerTable td a {
+    margin-top: 10px;
+    display: inline-block;
+    margin-right: 10px;
+
+}
+
+/*供应商管理页面-->下面的信息查看页面*/
+.providerView {
+    margin: 20px 0;
+    font-size: 18px;
+    line-height: 30px;
+    padding-top: 30px;
+    border: 1px dashed #3d4f1b;
+}
+
+.providerView strong {
+    display: inline-block;
+    width: 200px;
+    text-align: right;
+}
+
+.providerView span {
+    color: #bd644e;
+}
+
+.providerView a {
+    margin-left: 520px;
+    position: relative;
+    top: 60px;
+}
+
+/*供应商管理页面-->供应商添加页面*/
+.providerAdd {
+    border: 1px solid #9ac70f;
+    padding: 20px;
+    margin: 20px;
+}
+
+.providerAdd form {
+
+}
+
+.providerAdd div {
+    margin-top: 12px;
+    margin-bottom: 12px;
+}
+
+.providerAdd label {
+    width: 200px;
+    display: inline-block;
+    text-align: right;
+}
+
+.providerAdd input ,.providerAdd select{
+    width: 260px;
+    height: 30px;
+    line-height: 30px;
+    border-radius: 4px;
+    outline: none;
+    padding-left: 10px;
+    border: 1px solid #4987c0;
+    box-shadow: 1px 1px 1px #99afc4;
+}
+
+.providerAdd input:focus,.providerAdd select:focus {
+    border: 1px solid #0e56a8;
+    background: rgba(238, 236, 240, 0.2);
+    -webkit-box-shadow: 0px 1px 4px 0px rgba(168, 168, 168, 0.9) inset;
+    -moz-box-shadow: 0px 1px 4px 0px rgba(168, 168, 168, 0.9) inset;
+    box-shadow: 0px 1px 4px 0px rgba(168, 168, 168, 0.9) inset;
+}
+
+.providerAdd span {
+    margin-left: 20px;
+    color: #faca0d;
+}
+
+/*验证错误*/
+.providerAdd .error span {
+    color: red;
+}
+
+.providerAdd .error input {
+    border: 1px solid red;
+}
+
+/*验证成功*/
+.providerAdd .ok span {
+    color: green;
+}
+
+.providerAdd .ok input {
+    border: 1px solid green;
+}
+
+.providerAddBtn {
+    margin-left: 240px;
+    padding-top: 20px;
+}
+
+.providerAddBtn a ,
+.providerAddBtn input[type='submit'],
+.providerAddBtn input[type='button'] {
+    display: inline-block;
+    width: 100px;
+    height: 30px;
+    line-height: 30px;
+    text-align: center;
+    border-radius: 4px;
+    border: transparent;
+    background: linear-gradient(to bottom, #85c0ec, #6aa7d6, #508dc6, #306fb4, #17559e);
+    color: #fff;
+    cursor: pointer;
+    font-weight: bold;
+    font-size: 14px;
+    vertical-align: top;
+}
+
+.providerAddBtn a:active,
+.providerAddBtn a:focus,
+.providerAddBtn a:hover,
+.providerAddBtn input[type='submit']:hover,
+.providerAddBtn input[type='submit']:focus{
+    background: linear-gradient(to bottom, #7aaed4, #578bb4, #406e99, #225792, #0d2d54);
+}
+
+.providerAdd input[type='radio']{
+    width: 20px;
+    height: 14px;
+    line-height:12px;
+    border-radius: 4px;
+    outline: none;
+    padding-left: 10px;
+    border: none;
+    box-shadow: none;
+}
+
+/*点击删除按钮后弹出的层*/
+.zhezhao {
+    display: none;          /* 修改这里可以让遮罩层消失*/
+    position: absolute;
+    top: 0;
+    left: 0;
+    width: 100%;
+    height: 100%;
+    background: #000;
+    opacity: 0.7;
+    filter: alpha(opacity=70);
+    overflow: hidden;
+}
+.remove{
+   display: none;       /* 修改这里可以让删除框消失*/
+    width: 400px;
+    height: 190px;
+    position: absolute;
+    top: 200px;
+    left:500px;
+    background: #fff;
+    border-radius: 4px;
+}
+.removerChid{
+    margin: 4px;
+    border: 1px solid #ccc;
+}
+.removerChid h2{
+    padding-left: 8px;
+    font-size: 14px;
+    line-height: 30px;
+    margin: 4px 8px;
+    border-bottom: 1px solid #99cc33;
+}
+.removeMain{
+    margin-top: 38px;
+    text-align: center;
+    margin-bottom: 30px;
+    border-radius: 4px;
+}
+.removeMain a{
+    padding: 0 20px;
+    display: inline-block;
+    height: 30px;
+    line-height: 30px;
+    border-radius: 4px;
+    border: 1px solid #5e8809;
+    margin-top: 30px;
+    background: #99cc33;
+    color: #fff;
+}
+.removeMain a:hover,.removeMain a:active{
+    background: #679016;
+
+}
+
+/*页码*/
+.page-bar
+{
+	position:relative;
+	margin-top:10px;
+}
+.page-num-ul li
+{
+	float:left;
+}
+.page-num-ul li a
+{
+	display:inline-block;
+	padding:3px 5px;
+	margin:0px 3px;
+	border:1px solid #b8b8b8;
+}
+.page-num-ul a:hover,.page-num-ul .thisclass
+{
+	border:1px solid #c5063f;
+	background-color:#c5063f;
+	color:#FFF;
+	text-decoration:none;
+}
+.page-key
+{
+	width:50px;
+}
+.page-btn
+{
+	border:1px solid #b8b8b8;
+	background-color:#fff3f8;
+	display:inline-block;
+	width:52px;
+	height:25px;
+	line-height:25px;
+	font-weight:20px;
+}
+.page-go-form
+{
+	position:absolute;
+	display:inline-block;
+	right:50px;
+	top:0px;
+}
+.page-go-form input,label,button
+{
+	margin:0px 5px;
+}
+
+
+
Index: src/main/webapp/statics/js/provideradd.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/webapp/statics/js/provideradd.js	(date 1578576589357)
+++ src/main/webapp/statics/js/provideradd.js	(date 1578576589357)
@@ -0,0 +1,97 @@
+var proCode = null;
+var proName = null;
+var proContact = null;
+var proPhone = null;
+var addBtn = null;
+var backBtn = null;
+
+$(function(){
+	proCode = $("#proCode");
+	proName = $("#proName");
+	proContact = $("#proContact");
+	proPhone = $("#proPhone");
+	addBtn = $("#add");
+	backBtn = $("#back");
+	//初始化的时候，要把所有的提示信息变为：* 以提示必填项，更灵活，不要写在页面上
+	proCode.next().html("*");
+	proName.next().html("*");
+	proContact.next().html("*");
+	proPhone.next().html("*");
+	
+	/*
+	 * 验证
+	 * 失焦\获焦
+	 * jquery的方法传递
+	 */
+	proCode.on("blur",function(){
+		if(proCode.val() != null && proCode.val() != ""){
+			validateTip(proCode.next(),{"color":"green"},imgYes,true);
+		}else{
+			validateTip(proCode.next(),{"color":"red"},imgNo+" 编码不能为空，请重新输入",false);
+		}
+	}).on("focus",function(){
+		//显示友情提示
+		validateTip(proCode.next(),{"color":"#666666"},"* 请输入供应商编码",false);
+	}).focus();
+	
+	proName.on("focus",function(){
+		validateTip(proName.next(),{"color":"#666666"},"* 请输入供应商名称",false);
+	}).on("blur",function(){
+		if(proName.val() != null && proName.val() != ""){
+			validateTip(proName.next(),{"color":"green"},imgYes,true);
+		}else{
+			validateTip(proName.next(),{"color":"red"},imgNo+" 供应商名称不能为空，请重新输入",false);
+		}
+		
+	});
+	
+	proContact.on("focus",function(){
+		validateTip(proContact.next(),{"color":"#666666"},"* 请输入联系人",false);
+	}).on("blur",function(){
+		if(proContact.val() != null && proContact.val() != ""){
+			validateTip(proContact.next(),{"color":"green"},imgYes,true);
+		}else{
+			validateTip(proContact.next(),{"color":"red"},imgNo+" 联系人不能为空，请重新输入",false);
+		}
+		
+	});
+	
+	proPhone.on("focus",function(){
+		validateTip(proPhone.next(),{"color":"#666666"},"* 请输入手机号",false);
+	}).on("blur",function(){
+		var patrn=/^(13[0-9]|15[0-9]|18[0-9])\d{8}$/;
+		if(proPhone.val().match(patrn)){
+			validateTip(proPhone.next(),{"color":"green"},imgYes,true);
+		}else{
+			validateTip(proPhone.next(),{"color":"red"},imgNo + " 您输入的手机号格式不正确",false);
+		}
+	});
+	
+	addBtn.bind("click",function(){
+		if(proCode.attr("validateStatus") != "true"){
+			proCode.blur();
+		}else if(proName.attr("validateStatus") != "true"){
+			proName.blur();
+		}else if(proContact.attr("validateStatus") != "true"){
+			proContact.blur();
+		}else if(proPhone.attr("validateStatus") != "true"){
+			proPhone.blur();
+		}else{
+			if(confirm("是否确认提交数据")){
+				$("#providerForm").submit();
+			}
+		}
+	});
+	
+	backBtn.on("click",function(){
+		if(referer != undefined 
+			&& null != referer 
+			&& "" != referer
+			&& "null" != referer
+			&& referer.length > 4){
+		 window.location.href = referer;
+		}else{
+			history.back(-1);
+		}
+	});
+});
\ No newline at end of file
Index: src/main/webapp/statics/js/usermodify.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/webapp/statics/js/usermodify.js	(date 1594539108554)
+++ src/main/webapp/statics/js/usermodify.js	(date 1594539108554)
@@ -0,0 +1,121 @@
+var userName = null;
+var birthday = null;
+var phone = null;
+var userRole = null;
+var saveBtn = null;
+var backBtn = null;
+
+$(function(){
+	userName = $("#userName");
+	birthday = $("#birthday");
+	phone = $("#phone");
+	userRole = $("#userRole");
+	saveBtn = $("#save");
+	backBtn = $("#back");
+	
+	userName.next().html("*");
+	birthday.next().html("*");
+	phone.next().html("*");
+	userRole.next().html("*");
+	
+	
+	$.ajax({
+		type:"GET",//请求类型
+		url:path+"/sys/getrolelist",//请求的url
+		dataType:"json",//ajax接口（请求url）返回的数据类型
+		success:function(data){//data：返回数据（json对象）
+			if(data != null){
+				var rid = $("#rid").val();
+				userRole.html("");
+				var options = "<option value=\"0\">请选择</option>";
+				for(var i = 0; i < data.length; i++){
+					//alert(data[i].id);
+					//alert(data[i].roleName);
+					if(rid != null && rid != undefined && data[i].id == rid ){
+						options += "<option selected=\"selected\" value=\""+data[i].id+"\" >"+data[i].rolename+"</option>";
+					}else{
+						options += "<option value=\""+data[i].id+"\" >"+data[i].rolename+"</option>";
+					}
+					
+				}
+				userRole.html(options);
+			}
+		},
+		error:function(data){//当访问时候，404，500 等非200的错误状态码
+			validateTip(userRole.next(),{"color":"red"},imgNo+" 获取用户角色列表error",false);
+		}
+	});
+	
+	
+	userName.on("focus",function(){
+		validateTip(userName.next(),{"color":"#666666"},"* 用户名长度必须是大于1小于10的字符",false);
+	}).on("blur",function(){
+		if(userName.val() != null && userName.val().length > 1 
+				&& userName.val().length < 10){
+			validateTip(userName.next(),{"color":"green"},imgYes,true);
+		}else{
+			validateTip(userName.next(),{"color":"red"},imgNo+" 用户名输入的不符合规范，请重新输入",false);
+		}
+		
+	});
+	
+	birthday.on("focus",function(){
+		validateTip(birthday.next(),{"color":"#666666"},"* 点击输入框，选择日期",false);
+	}).on("blur",function(){
+		if(birthday.val() != null && birthday.val() != ""){
+			validateTip(birthday.next(),{"color":"green"},imgYes,true);
+		}else{
+			validateTip(birthday.next(),{"color":"red"},imgNo + " 选择的日期不正确,请重新输入",false);
+		}
+	});
+	
+	phone.on("focus",function(){
+		validateTip(phone.next(),{"color":"#666666"},"* 请输入手机号",false);
+	}).on("blur",function(){
+		var patrn=/^(13[0-9]|15[0-9]|18[0-9])\d{8}$/;
+		if(phone.val().match(patrn)){
+			validateTip(phone.next(),{"color":"green"},imgYes,true);
+		}else{
+			validateTip(phone.next(),{"color":"red"},imgNo + " 您输入的手机号格式不正确",false);
+		}
+	});
+	
+	userRole.on("focus",function(){
+		validateTip(userRole.next(),{"color":"#666666"},"* 请选择用户角色",false);
+	}).on("blur",function(){
+		if(userRole.val() != null && userRole.val() > 0){
+			validateTip(userRole.next(),{"color":"green"},imgYes,true);
+		}else{
+			validateTip(userRole.next(),{"color":"red"},imgNo+" 请重新选择用户角色",false);
+		}
+		
+	});
+	
+	saveBtn.on("click",function(){
+		userName.blur();
+		phone.blur();
+		birthday.blur();
+		userRole.blur();
+		if(userName.attr("validateStatus") == "true" 
+			&& phone.attr("validateStatus") == "true"
+			&& birthday.attr("validateStatus") == "true"
+			&& userRole.attr("validateStatus") == "true"){
+			if(confirm("是否确认要提交数据？")){
+				$("#userForm").submit();
+			}
+		}
+	});
+	
+	backBtn.on("click",function(){
+		//alert("modify: "+referer);
+		if(referer != undefined 
+			&& null != referer 
+			&& "" != referer
+			&& "null" != referer
+			&& referer.length > 4){
+		 window.location.href = referer;
+		}else{
+			history.back(-1);
+		}
+	});
+});
\ No newline at end of file
Index: src/main/webapp/statics/js/providerview.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/webapp/statics/js/providerview.js	(date 1578576586197)
+++ src/main/webapp/statics/js/providerview.js	(date 1578576586197)
@@ -0,0 +1,17 @@
+var backBtn = null;
+
+$(function(){
+	backBtn = $("#back");
+	backBtn.on("click",function(){
+		//alert("view : "+referer);
+		if(referer != undefined 
+			&& null != referer 
+			&& "" != referer
+			&& "null" != referer
+			&& referer.length > 4){
+		 window.location.href = referer;
+		}else{
+			history.back(-1);
+		}
+	});
+});
\ No newline at end of file
Index: src/main/webapp/statics/js/providerlist.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/webapp/statics/js/providerlist.js	(date 1594526947002)
+++ src/main/webapp/statics/js/providerlist.js	(date 1594526947002)
@@ -0,0 +1,94 @@
+var providerObj;
+
+//供应商管理页面上点击删除按钮弹出删除框(providerlist.jsp)
+function deleteProvider(obj){
+	$.ajax({
+		type:"GET",
+		url:path+"/sys/delprovider",
+		data:{proid:obj.attr("proid")},
+		dataType:"json",
+		success:function(data){
+			if(data.delResult == "true"){//删除成功：移除删除行
+				cancleBtn();
+				obj.parents("tr").remove();
+			}else if(data.delResult == "false"){//删除失败
+				//alert("对不起，删除供应商【"+obj.attr("proname")+"】失败");
+				changeDLGContent("对不起，删除供应商【"+obj.attr("proname")+"】失败");
+			}else {
+				//alert("对不起，该供应商【"+obj.attr("proname")+"】下有【"+data.delResult+"】条订单，不能删除");
+				changeDLGContent("对不起，该供应商【"+obj.attr("proname")+"】下有【"+data.delResult+"】条订单，不能删除");
+			}
+		},
+		error:function(data){
+			//alert("对不起，删除失败");
+			changeDLGContent("对不起，删除失败");
+		}
+	});
+}
+
+function openYesOrNoDLG(){
+	$('.zhezhao').css('display', 'block');
+	$('#removeProv').fadeIn();
+}
+
+function cancleBtn(){
+	$('.zhezhao').css('display', 'none');
+	$('#removeProv').fadeOut();
+}
+function changeDLGContent(contentStr){
+	var p = $(".removeMain").find("p");
+	p.html(contentStr);
+}
+$(function(){
+	$(".viewProvider").on("click",function(){
+		//将被绑定的元素（a）转换成jquery对象，可以使用jquery方法
+		var obj = $(this);
+		window.location.href=path+"/sys/proview?proid="+ obj.attr("proid");
+	});
+	
+	$(".modifyProvider").on("click",function(){
+		var obj = $(this);
+		window.location.href=path+"/sys/providermodify?proid="+ obj.attr("proid");
+	});
+
+	$('#no').click(function () {
+		cancleBtn();
+	});
+	
+	$('#yes').click(function () {
+		deleteProvider(providerObj);
+	});
+
+	$(".deleteProvider").on("click",function(){
+		providerObj = $(this);
+		changeDLGContent("你确定要删除供应商【"+providerObj.attr("proname")+"】吗？");
+		openYesOrNoDLG();
+	});
+	
+/*	$(".deleteProvider").on("click",function(){
+		var obj = $(this);
+		if(confirm("你确定要删除供应商【"+obj.attr("proname")+"】吗？")){
+			$.ajax({
+				type:"GET",
+				url:path+"/jsp/provider.do",
+				data:{method:"delprovider",proid:obj.attr("proid")},
+				dataType:"json",
+				success:function(data){
+					if(data.delResult == "true"){//删除成功：移除删除行
+						alert("删除成功");
+						obj.parents("tr").remove();
+					}else if(data.delResult == "false"){//删除失败
+						alert("对不起，删除供应商【"+obj.attr("proname")+"】失败");
+					}else if(data.delResult == "notexist"){
+						alert("对不起，供应商【"+obj.attr("proname")+"】不存在");
+					}else{
+						alert("对不起，该供应商【"+obj.attr("proname")+"】下有【"+data.delResult+"】条订单，不能删除");
+					}
+				},
+				error:function(data){
+					alert("对不起，删除失败");
+				}
+			});
+		}
+	});*/
+});
\ No newline at end of file
diff --git src/main/webapp/statics/images/mm.png src/main/webapp/statics/images/mm.png
new file mode 100644
index 0000000000000000000000000000000000000000..afc1aee7ebae88676e236fe6e6b318bceb61dca4
GIT binary patch
literal 2565
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
b<Ne<N>ch^0R6k0p00000NkvXXu0mjf$#V?3

diff --git src/main/webapp/statics/images/jg.png src/main/webapp/statics/images/jg.png
new file mode 100644
index 0000000000000000000000000000000000000000..0dbbcfde70abc01c77d707abdcaa7b7f6ff74337
GIT binary patch
literal 43952
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

diff --git src/main/webapp/statics/images/yh.png src/main/webapp/statics/images/yh.png
new file mode 100644
index 0000000000000000000000000000000000000000..5e65b52a4dd955d209931eceda3aac7a7a047020
GIT binary patch
literal 5369
zc$@+G6b9>wP)<h;3K|Lk000e1NJLTq0015U0015c1^@s6J20-I00009a7bBm000XU
z000XU0RWnu7ytkYO=&|zP*7-ZbZ>KLZ*U+<Lqi~Na&Km7Y-Iodc-oy)cUY767Czti
zWe-+D*zmEJY=HnGBdiF>5Lu!Sk^o_Z5E4Meg@_7P6crJiNL9pw)e1<Rh~l6qxMx9%
zh+2zPTsZC@+^4mDdhhM+``7!t=bY#K&Uw!dfDsZVk>;Xm069{HJUZAPk55R%$-RIA
z6-eL&AQ0xu!e<4=008g<d3b(wus{3(uWtYX0C3eVBofEr|AV?vCRYF;kpSQ#66Xs6
zkWv81E>y@A0LT~suv4>S3ILP<0Bm`DLLvaF4FK%)Nj?Pt*r}7;7Xa9z9H|HZjR63e
zC`Tj$K)V27Re@400>HumpsYY5E(E}?0f1SyGDiY{y#)Yvj#!WnKwtoXnL;eg03bL5
z07D)V%>y7z1E4U{zu>7~aD})?0RX_umCct+(lZpemCzb@^6=o|A>zVpu|i=NDG+7}
z<RYAxn<EoQ=L1a63;+Nc`O(4tI6si*=H%h#X6J10^u?n7Yw&L(J|Xen{=AF=1OO0D
z&+pn_<>l4`aK{0#b-!z=TL9Wt0BGO&T{GJWpjryhdijfaIQ&2!o}p04JRKYg3k&Tf
zVxhe-<BLB3GvROGi+=X}Kpy_vdhh^onn0PYz@vlxaba$Du2PQY%LGC(ZujRS{>O!X
z{f;To;xw^bEES6JSc$k$B2CA6xl)ltA<32E66t?3@gJ7`36pmX0IY^jz)rRYwaaY4
ze(nJRiw;=Qb^t(r^DT@T3y}a2XEZW-_W%Hszxj_qD**t_m!#tW0KDiJT&R>6OvVTR
z07RgHDzHHZ48atvzz&?j9lXF70$~P3Knx_nJP<+#<bWIsp%|7y8C1YJ*aWq(0~(+a
zn&A+%!7(@u=im}tf$MM=24EPT!Wg`U2?RmN2oqr;I*1Wsj@Tm32p5@-1R`NbG?IX%
zAnAw{Q6k02a-;&OLTZs+NF(wsauhj@TtNDe+sGg?iu{VaM=_LvvQY!n0(C&Ss2>`N
z#-MZ2bTkiLfR>_b(HgWKJ%F~Nr_oF3b#wrIijHG|(J>BYjM-sajE6;FiC7vY#};Gd
zST$CUHDeuEH+B^pz@B062qXfFfD`NpUW5?BY=V%GM_5c)L#QR}BeW8_2v-S%gfYS=
zB9o|3v?Y2H`NVi)I<b&gMyw|8As!)~C0-{E6JL`^Bo4`v<W349C6F>n3rTB8+ej^>
zQ=~r95NVuDChL%G$=>7$vVg20myx%S50Foi`^m%Pw-h?Xh~i8Mq9jtJloCocWk2Nv
zrJpiFnV_ms&8eQ$2&#xWpIS+6pmtC%Q-`S&G<BLK&6^fO%cL!%)zF%0XKD9nFX?o;
z3EhJpMVHW*(rf4k>F4Q#^mhymh7E(qNMa}%YZ-ePrx>>xFPTiH1=E+A$W$=bG8>s^
zm=Bn5Rah$aDtr}@$`X}2l~$F0mFKEdRdZE8)p@E5RI61Ft6o-prbbn>P~)iy)E2AN
zsU20jsWz_8Qg>31P|s0cqrPALg8E|(vWA65poU1JRAaZs8I2(p#xiB`SVGovRs-uS
zYnV-9TeA7=Om+qP8+I>yOjAR1s%ETak!GFdam@h^#<Ae=IoX^_&LPeX&U-BbEk7->
z)@rS0t$wXH+Irf)+G6c;?H29p+V6F6oj{!|o%K3xI`?%6x;DB|x`n#ib<gTP(_`y-
z=?V49^$zLX(MR=d^rQ6`>hIR?(H}Q3Gzd138Ei2)WAMz7W9Vy`X}HnwgyE<W%V@fh
z#Au_@NuwvYChmu4<285}K4z?M9Ad0A-euftJYiyKGTWrYq{ZaEDb18?nr6Duw9|CV
z%*ZU<tk|r{?2b9roNJz8zS+Fn{EdaBMV!S-i#ChLmfDtl%LSHAmiMffRz6mFR`pib
ztVz~f>n!VS)>mv$8&{hQn>w4zwy3R}t;BYlZQm5)6pty=DfLrs+A-|>><a9f>;~;Q
z_F?uV_HFjh9n2gO9o9Q^JA86<b<B2baJ=iJ;WWdk#HqvSS7#e%p>v({H5aB!kjoO6
zc9$1ZZKsN-Zl8L~mE{`ly3)1N^`o1+o7}D0ZPeY&J;i;i`%NyJ8_8Y6J?}yE@b_5a
zam?eLr<<q3^N{B+UUpttUi-ZsPqUmRp4KpJ$lJtQ;JwRxU^+fMW%|zP13tz+0-t)H
zhrXu1BHul}BYxI?nSKZSp8Grc%l(h|zu|fE7V%C6U;)7a<pI5c8iBI|YXctynFOT=
zH3f|Yy9O@|J{3X?2@P2va+7bs7xEkVV>8@mESk|3$_SkmS{wQ>%qC18))9_|&j{ZT
zes8AvOzF(F2#DZEY>2oYX&IRp`F#{ADl)1r>QS^)ba8a|EY_^#S^H<bj`5GFjJZ48
zYPNEAXRK;$Qfy=Fo4A0us<?r8hxkSDmlAXnBnj<_<iyy-J&EIU0_SX+Go0j_RF-sO
zuI1dKxfkZ?&dZ*6JXtkakbF3Wm=c$=KjniULQpRlPvxg>O&t^Rgqwv=MZThqqEWH8
zxJo>d=ABlR_Bh=;eM9<ahEGOy#xn^|QY(3p8Irjp^G#Mn*50ho*>Tw|Ih34~oTE|=
zX_mAr*D$vzw@+p(E0Yc6dFE}(8<U61_v9n_bMxC3Y=unGqqI`4P!1MMFQ_YcTNqn-
zxJbQ7TGTV&X8!8=BMX8Se7%scP`I$O*tmFE@!%rAMY|Rwi&GbOE-_tFx@351@X~$D
zXv?ye{ZQgqQdRP5dED}jQiIZ^r9&%%S2UHWl*!9(uJl^DV-;bQWL58Km(^QVe<~N1
zU#xJfsIK_1M!4qUS59BmeD!&4+S=Yqx61A7Nb98QZmjoNzpqNYYC+Y|hVTuo8}W_h
z8((co-gKdQYW0rIw9U%R12tha?OV*YtlRRTHly}>oqt`+R{gE3x4zjX+Sb3_cYE^=
zgB=w+-tUy`ytONMS8KgRef4hA?t<Nq8e$u|zvh13xJP$S#h#CQrF#eVMeplsbZ>0j
zufM;t32jm~jUGrkaOInTZ`zyfns>EuS}G30LFK_G-==(f<51|K&cocp&EJ`SxAh3?
zNO>#LI=^+SEu(FqJ)ynt=!~PC9bO$rzPJB=?=j<Jb;mW2SDv7qC_VA{<bspqr(~y|
zolZYJ)S29Q_e}hmYh6)Yy=Ozuo<A3K?o78|_sR3#=Z{_Rym0g)_hQ>6w@a-(u02P7
zaQ)#(uUl{HW%tYNS3ItC^iAtK(eKlL`f9+{bJzISE?u8_z3;~C8@FyI-5j_jy7l;W
z_U#vU3hqqYU3!mrul&B+{ptt$59)uk{;_4iZQ%G|z+lhASr6|H35TBkl>gI*;nGLU
zN7W-nBaM%pA0HbH8olyl&XeJ%vZoWz%6?Y=dFykl=imL}`%BMQ{Mhgd`HRoLu6e2R
za__6DuR6yg#~-}Tc|Gx_{H@O0eebyMy5GmWADJlpK>kqk(fVV@r_fLLKIeS?{4e)}
z^ZO;zpECde03c&XQcVB=dL;k=fP(-4`Tqa_faw4Lbua(`>R<o>I+y?e7jKeZ#YO-C
z3MNTJK~#9!#FuG|o#$1@f6x2A_r34EcV_NBn`i79&y2^8_Yg0wJ*H`h-RvX{OQE3w
zS{$XSQUy`?(3YY=RH-cmQV|t|NQDAelt7m>ZfJzFxh`XmC*CqM_AK|#zTEx2@4oOM
zQPPNr(oa0n|I7LE(>c#MNB<+jFy#N^DVHu?LI^<^hPbXvsZ?UFP@prHW8@bO;JQ9R
z7!Z%O^5)cQ`N_#wKB+18zDzQiR3fsjX|3b!y*E9ZNF-;a<`M`A5I-CIenB-7rBtm_
zX%>mdKDO&qZn)yPQ{NcZ8!O#?Tf0%VbkdnigI)iqQ!<}uiQM#fB+>cxAh7>W8B6aM
zj7C-Tron%_Jj!y(#0*;T)O;u<y3hHhN4u70d9lRk)k)SH7K$WjY)t<7>~iTq(@#-u
z%9NYR|El-RI1B?~no7CqF<Yqc;2i_Vi8k_|KKWbqOM7nZ>FG<a)hdiny}|1262+Ni
z5}7EOyz@vjo*wl*iy#b<C4nRYJlFf#rIsX#Xf#R~hNO{MEmv5+I!aquBd)}Uv%3za
zjZn~?NYRyOVea|_&z}7uvZawsb)6`cS4B)qgkfMo=+d-hG%W_aw}}-Y1VRW@RV5mY
zQm@zdmdoW|DwRsErbVAmq&ueP%_M!Yk7v4@4PydDj-c1eSe8Y@b?C~p(-aQ%dUca&
zUm410vr|eW#^tFRrlT-4G(;GN{PYAVy5%8+z^LfQ7Z>LLqEIaCSX^ABSuK-@$NqBj
z7W+?^+7e$lbpL}apZ{)u@!XF|=DP_H7`9DW*J%slSe`?@p)=H_Xiclm?2JXdsgTdc
zQB{dB6z>Jc(TT?rTt9#IQ|Cs<c0{8wG)bZ%MOa#0$1u&$C)2r8-~0AcSEgV7$3NP$
z^)OD|!1G+1MiX5(DQv9JPz-v~a;b0lgHtd5=mw^3kx42@(tCmLfOqCYL{KBUE7dnL
zd>fjkp?W5-jJ?Sh|Na8Gd^-oiVE^RU`74Ws*?g<kO)QbZ^F18frQXz8GS*R}E?Wlf
zeYLQt4i@L<e>19zy60*?=<4cvLy{z1*L^S8v0Ti0d6$&P+|rfnB-E?8r6wQfZzC#v
zrV1;({@UxkpZV0sxE5WX8y}tMZ;5ZQksHy7EU3y&M5>n~Bfm!7Z@GQy?2qquJzFVl
zRFNg|WF(?IJvcb{sPFp(LGTV(e(07AMtOOstZ1KbtLrpYi|Dl)EA=LZX)!xHi;_rx
z|NeU)JlB!yxmK0q|C#G3snz+#VG9MtP}n&*KuyYX?(BKBUR{wa+r|n6hTfpOv2mbx
z^XBgfA(l<k#Bm%P$3dxk9=`2JW^tNWEKY!+Y1@=)I>&b=Da@zYeCW3Ccz#GFG+#ab
zk<n8a`aO*|lGsg`-fbCfKX#pJV-JVBZ>A;U6OjU5{K*x*@vmdVqbk*EbwrY+G0U>v
zEp=+&Jycc~78b6&LMoNR3j%bbiQ~A8j=xFYfqQ=EOJ90yw!AQ|u1r38eb=Gsp38He
zW$?ozs6m~Z@BUjlln(Oc6DY|Fl8~WP<iw5?e<KB~*G;ZnyV|cCCj4|)ClWc@hT115
z$Ie_{n7Fz-)|$k&J<99LL|XI9k39VGZ@Ej$%wKutv0H{0da&ED^iDqV$O9;xLFFv<
ziN|oA0J&VjsjOpG)~T94L)~qhpIoF+TylrE4PqF^yWr5O)7dx3!1kkGJN4IJf2O4~
zg(Qd68dY*_YWsS5q5a=Zzp&Efy?E&G-aO4pjZn%W18Vrk5J0oyV65LDBBpUH1IrC4
zHB278^CtePwnVn0>(a0M@;xlCth~D+<9!*fE>BR6$G(+0lD+5#YZ#V8QqIyI_v9Zg
zfBxl_%xr&a=HNIRAu(CT7fBlW3s4yYr;mE2NMUN6QngCewArZFaU7fL)3YSn`^SI%
z<Dd8kCDBU0vy)UNMJkg<$)xu%KJ}6~Q~kofY`-hIzwvY%Zq=f#rIYMkWpW1#+vbaF
zQ>VuV=attt86VzrQH^LbiewhSQ6Y>Vi!zJV3SKnC^E|4JI-ch-v)1Iut@r*$mJO<f
z5`mgV(Gm~_C`;uVTwMC{nS)0Q$JC{V$?QHz%&Q<DoWk2Z26hJn9f4x(zt;cHKiN0V
zn;(5P+;r*pYi^;l)pv=cZTgZ6oY55~nq5Q`2itXUEE6Ha{-KUqX?=yMvLKdi;o!|j
z3H$)LYj5Rqa`*Q?*_&_0n!TL|9{L=)qgjm3ClQv4Wh*pIXpP5N3ksd{#*wFndJdl~
z6~otNRy#|DImr=D#BDSk<KlR+wQd<A2nE%qP25>$U3A^hJ4Vh2Y6>}`(bvBTBnfFz
zKXZI=V1SJ^h-yiYp<;a#y;j8cS_lF`09Xbj5)L*0^2tygB)jRrOR@Hm$FJ9Sd}ucI
z*=_leCpIVd-E|r%N>i^QdpesEQRbZPr>APlzt?M(u9z^1$l!Y*i7-`Nt5gt?D4Le1
zY|JuK`VOAE70V5A{Sem&%N1zR6rQ}X`?;5%;ne64aHW9T9{2;2gU7kx?);NYcmCm>
zo8vMaeu*uViI04SW54@p_8s1TpV4`6X{HoBE?f&O2GRo~Pdqh#-llA?p~M5`>))m3
zlrg<HO&1JTV7n5I7a-&)6|<Jc7O^1AK=&PJ*=?MiT>WN#Yu^_)wOX|I?`7-IUWPvQ
z6>@i-Bo&3YfZ^?V%BkV6z3}R_-;M_!A_&WT`$zw@{k7?@{@w1aCqCHLJ%<@NOFYtx
z;|WYh!gQb+gj`uDQh2?kbn?)by9bANJBj#aUcGSfej`2f+${%tDPK6xFYfF?ZAnp-
zG&X8)eNn@Kx&?Lwu3x;e`hgC&PtjSYr=xeGukg?j-*ERWPM3eLVs5=(#Pv=|1<P|W
zTtTHKFqa1>@7s0X!>+X9T)r_+J{6-TXMVM}r<X<*2m`XI1kH#>WgUbE!8<+<lmN8c
zrjGHMu{)FyXgVb%&7duw8_!6$KC0<AKf1P999XN(4uyi07pP80wCh@5&+x=e+XvXF
zIV>#2SYIB)Xxkc-B49fZRW-0o<{B+DErA?@7rZ5(kXl2KPNrFmXuIAvdx9_s@O%eJ
z(TTPAbShobmerV!X=xl6a_KyNM5m-LA;d7fy*<PuImTvcqqFn%`-Zo*5mlp<43`BL
zJRjTuEDtOn93KoDvT2Z%MEn1=w;}j}kK>yJ!p04oxS_!I45EsL>xOLZ>L8Qef~vSg
z)#9I>9=~wxx_a#Ro>+pCEzm=O@OXO~-jeMKTmfiMtLZW6=Q?=8w@hk85kyr9NrGf5
z#g1%nqI~i6-HUUxlhYd>GpkVb!2oOt90~Lgma6byuS_wR<^|>F0>6C{`9X;11xO;m
zv|Z$Af{s?>`K)3;Ut6BrUYxu3a5b6RBed46gW6&`K89iF&U$fdThjXKhmIbd{_g<*
X4A(rF#70_&00000NkvXXu0mjfbcJ&)

diff --git src/main/webapp/statics/images/tc.png src/main/webapp/statics/images/tc.png
new file mode 100644
index 0000000000000000000000000000000000000000..362b7830bbb73481a20fbe8c4a7a90fe0042a91f
GIT binary patch
literal 1875
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
N002ovPDHLkV1io~luQ5s

diff --git src/main/webapp/statics/images/y.png src/main/webapp/statics/images/y.png
new file mode 100644
index 0000000000000000000000000000000000000000..99eb2a4c0dd53b5847a284feda2aeda866a907da
GIT binary patch
literal 4888
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
KMNUMnLSTYA`=1j4

diff --git src/main/webapp/statics/images/n.png src/main/webapp/statics/images/n.png
new file mode 100644
index 0000000000000000000000000000000000000000..7ba270865d25dc96c1217d43943ad954e23a4289
GIT binary patch
literal 5766
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
Eg4?<|;s5{u

diff --git src/main/webapp/statics/images/schu.png src/main/webapp/statics/images/schu.png
new file mode 100644
index 0000000000000000000000000000000000000000..142d9b3ee5b234441916d611fcaacf288815f0a0
GIT binary patch
literal 3963
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
VcRx2hqhSC5002ovPDHLkV1lH7gH-?k

diff --git src/main/webapp/statics/images/read.png src/main/webapp/statics/images/read.png
new file mode 100644
index 0000000000000000000000000000000000000000..2c1dfeb451bc9b7f6e5564f52d15ce7d265f4dbe
GIT binary patch
literal 1359
zc$@)G1+e;wP)<h;3K|Lk000e1NJLTq000yK000&U1^@s6z(KqQ00009a7bBm000XU
z000XU0RWnu7ytkOAY({UO#lFTB>(_`g8%^e{{R4h=>PzAFaQARU;qF*m;eA5Z<1fd
zMgRZ=)k#D_RCwBql}l_LXBmc{|1vXY&KdjodYt%@I8B?DQW{Hzv=X63>Z0wUpbA7$
zBw&evB@5V;1xT!5*9E9jrEaKNsJN(ATPeMO<R~doqSiLDX_}JMjxVuud@eI{X6C=J
zaJpebzQwEW`xdX>)$@v#i;LXV3|fPwKmJ~(TaOC_2*sU@1B3Iuv_AXN@aZ$Zs5L_L
zNHZSlEIxm6_~zoAibwE5;ei7=SUey;{|RyX0O1AFRikR>;&Z9uUUlkw&uVe$)gQ(?
z=jVK5hC(Rt4xC3Si0TnK)So-y1yor<nHxL;i9{#}YBAC3o8KAa;qUa;zps38AyK4O
z;jKXhnno+Z^g3*=tkT`ju{OX-ht`&{$tKfx9|cvXx7)=7UTL)StnY0-sH2IgR<XB?
z2~&p0MnG9UdUKJjc7mK<Af7o!kc{E6^txTPw^mtQS>oud=lH2Fk#<X}tVCBOo#r8_
zy|EL%aKx=9*{y9Z{NpO__;)$>t!J1%^%d$v!{8j=gO`$gcbBUd&hg26FLU$t_gFZ6
z0vSbAor0<|qtcd@ky7H*4j0ZY5kLA<9{ct4%s=`t(&d!>9m>HzgS<o0zljXtfhV8j
zYrlGl-t4n1y}v{#9j1g>FeQz(B8W9tF0T-L`3Ed~|3}c<K_(5tk#WL$lW2T``s6rK
zQl~aD3bh*A?(@ixe@;I0IP1%6M1e*)pGfJvvU|H^^*N?aKaH?Cd2g3%e|wR1`zj`i
z*f{qFo9EubMlqf1%lzl{7s&Q^2_qQ$>Nm*z5ELoSIj;fo&OYJD0*xd=)HHi<y+Up6
zPh?R+yI<hn{SDeHwv)repS?r;!HeA5-{jEKKOt(2QVdN}=KsQbk2c1dPz01FCF``I
zD2V63z~II_&EZ+%>7%q;_k&P0XXhB~A0|uYsn6Vt9P}7;cd%I(Wd+VTt%dP86Oi<;
z(f;%zts{pSI`IhcJ&)07CIoRraOSso2@UO#_dkK0eVEv%<l7tUt$x6Cu|rjb08%5w
zaF$j~j(Pm`v+S(R(z^RWqKQdNe}L@?!mvgqAx%?cm5~Tfl^0w-f0o+%`?TUZz3wf%
z$7<(YY^=i$0*10R^8RNO_9Xp}SBNJL5ymmL-$q!E6ON+HxV61Wd+ieS5C6=Z?33jQ
z-dgaWovVZ|Ds;_~P97zV>Qv`nrTFwRdhR}g)-ed{1kPj19_8*e@@vZ^JD)J6H8~Be
zv`FK?Tcw3H!dr`R5Xy+?pMRxx<2ob0V6d@FSsTU%;Q<VaK1q?%QW}UzjRtAZ7DVar
z)&#orQ63sg$2rvXb(*HYsR$zzLT8Ek8G=4u00<oM0hJ`+Ef|4U4(CcT6FI$Fo3E(?
z9#RALoWce%N_Z52QlR8*_8qWL-ex2o91sf2sOfXoHrO4Sw|e-#2ZGoBev<B$WsXla
zsJz1a|4(a=M@dO$4exFY_~^tFe0}~%q3@b${h|HTnV<dToi_;En;<1Zh&wO@;T+B>
z>^;Xh{nR&^sfRC!^NVkf`m9*pTHk2h*xJN;hm`UT8bx58Aq+Hg({qeZAAU_L{cY{7
zYl|p4IWcqOx$&t(4}qHoQF%n?c9r~ZTqp1e_?koP<LQM___kO2m!)(3cK}?MSvTNK
RQKA3<002ovPDHLkV1i#fn$rLP

diff --git src/main/webapp/statics/images/clock.jpg src/main/webapp/statics/images/clock.jpg
new file mode 100644
index 0000000000000000000000000000000000000000..910af63c141ea23ea5848aeaee0d30b63eb5cb26
GIT binary patch
literal 22016
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
V1vr%;W7$7^&E(ziH7Y20^gl}&5Iz6^

diff --git src/main/webapp/statics/images/time.png src/main/webapp/statics/images/time.png
new file mode 100644
index 0000000000000000000000000000000000000000..8dd66a92e4ecad61760010d61328b1b6c7e85cf9
GIT binary patch
literal 1208
zc$@*a1V{UcP)<h;3K|Lk000e1NJLTq000sI000sQ1^@s6R?d!B00009a7bBm000ie
z000ie0hKEb8vp<RAY({UO#lFTB>(_`g8%^e{{R4h=>PzAFaQARU;qF*m;eA5Z<1fd
zMgRZ=K1oDDRCwBKlzmXs1sKP_+i!DY0wV9B4kRT&6hRVEJk!j&;w=r&mk{MbBRK8U
z%dWD!w2Si;GT}V27XnfPH9_O0i4ZZM8#+i{8XLlJ8_daMgKaYQ^7MzVbbkJOUhaF(
z_xs1gQYhu%&fvmnb)dWFUtDTvf@0)8{QCdd7B{I(;HnHu7$<xjY#7Ymye?HhWUb6U
ztaMRufGz!<wFsKO9BkVRZ~%aaz~eBO^bz8|dLVvd{clB~lL+UAxj~TfI(&nIq1UK=
z&9~b_mUc=uEwo4ucO)n6)y+)38aa~(;{zw4Q1(Hs9e~_o#fh&E@Awg*KSF2I)#4vW
zOGHK@$~kt5x{Nj&C8C;&a;jN2k4gbLvM*zwh6t7sC)jWRu72~;R#&-O@Ws)Rx$9%#
z-+Tv`dhVd7u@UY7RLvp?VS#aQ5WoD@ikEK4Al&sHyuSPCWPNe*oA6@+Bf}#Q$%j{+
z3KUR@Cuo8mQCCw<VzHPUPNI{C_L0T#fNpnn(Y2~7dcuVTv*?T`#!4Dn84T*jQS{AM
zx*~wCmljaQ!B0sf5<OkE+MSfQKZ{gy+0&j>Dy8>#XHj|aX}ZJ(eU|!m23vmbK`OW5
zypKm95Sx~R#P~Sycsx8|2E&5g(+lqY0eGGb@hg$AGYcN8eBs~Iv;}1itrdj<poT3m
z^db~88GRfRMK^1!UN~<*lt#Hc40EQ&jZq8%Zov`Qx%VKJ1kXd(?o1p%kOLmWhN<=(
zwhv4~^5q^Zd@Bj=k1xv4&qs4tAM#d)f^CBr$H_2$!~&+q?jbw-69oBs!$ly#=FE@4
zuz<UZ7oqKBAr@>&2md*1+qP~+>}m}j{&@jTf*I$<QbqA{Z>o%TBO;<HtCf^P%4z2h
z{m+hCttPX{L_|b4QX;4zkh#U4>ou#>7Mp-E=>#N_Hl%%+jdn@<v|xppPJe$tw(rV7
zeM>70P2G67I7-C2+0n7NSvFKYD<cK$$RI>rmt%=57ka%OX0sVW;WHVvS`8OIA70+x
zP)q^hlqj%kJE6%d6tejorXnIDT&K(23I5+ojDLR&CIC7651>UX1^`r7SHohlU~pgn
znORvF2QX1{4z9JG(4{5ju1Vgcf<mD{PuK1EvX%}yp0t)K0IJ-PN~bUXPPWIHY)IWo
zy2r(tDiK}G`GBecI`V3GU9)NwI;{q*zP>(iIUHE5)|^{<OM&)mE_})^Lm1)$ZgMJI
zmac|&!VFIVAGTfzoT4kxNXH<J4*xmm=(oG}tbYxLQSBok4u=D$!w!Sd`0g;rwNN3h
z514uJEbJ}afCKQE4d}-J8vu`WVK;~3l0Lud;wIX-A_kE!zXEVr&;F6!;e_38zv4GF
zRu{1Djr5@vYZ5iRvQVB*>29)`M)?A_Zr+@b%X6Za{pzXg#dz&Cm<&d+7zP9<{u=;&
Wx_tV)sK3tu0000<MNUMnLSTYNekUaW

diff --git src/main/webapp/statics/images/buy.png src/main/webapp/statics/images/buy.png
new file mode 100644
index 0000000000000000000000000000000000000000..77eb4e224877728db72dafcb5492e786440bdf1c
GIT binary patch
literal 2246
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
U=*$rElK=n!07*qoM6N<$f;ebPTmS$7

diff --git src/main/webapp/statics/images/zd.png src/main/webapp/statics/images/zd.png
new file mode 100644
index 0000000000000000000000000000000000000000..aeb7e83f14449cae434c316279792ac3331b725a
GIT binary patch
literal 1710
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
Ef}M3gumAu6

diff --git src/main/webapp/statics/images/home.png src/main/webapp/statics/images/home.png
new file mode 100644
index 0000000000000000000000000000000000000000..180d6012de6ee3461fbb6f3649e0e8da75c7552e
GIT binary patch
literal 3667
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

diff --git src/main/webapp/statics/images/gys.png src/main/webapp/statics/images/gys.png
new file mode 100644
index 0000000000000000000000000000000000000000..594f1d6d898a01cfe0dad6d3aee0ad2afc7b089c
GIT binary patch
literal 5294
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
AaR2}S

diff --git src/main/webapp/statics/images/tianjia.png src/main/webapp/statics/images/tianjia.png
new file mode 100644
index 0000000000000000000000000000000000000000..a7d2dec826f6a03eebd40b46fd036cbf08220a6c
GIT binary patch
literal 3881
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

diff --git src/main/webapp/statics/images/loginBg.jpg src/main/webapp/statics/images/loginBg.jpg
new file mode 100644
index 0000000000000000000000000000000000000000..c2219174e7e1715f0c59500ad5e67ff9d37a4abc
GIT binary patch
literal 18389
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
NZ~l~0Y@wUW{{x&}ChPzJ

diff --git src/main/webapp/statics/images/login_img.png src/main/webapp/statics/images/login_img.png
new file mode 100644
index 0000000000000000000000000000000000000000..2435ad8db18826e9d5061f374bd17fa2ad5bd679
GIT binary patch
literal 8908
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
ae**x4fTiCBaBz|U0000<MNUMnLSTZ_`>nhH

diff --git src/main/webapp/statics/images/login_bg.jpg src/main/webapp/statics/images/login_bg.jpg
new file mode 100644
index 0000000000000000000000000000000000000000..4b2c76a7edf3d4d4bfa7d85fe92c9bfa017a6af2
GIT binary patch
literal 45619
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

diff --git src/main/webapp/statics/images/leftBg.png src/main/webapp/statics/images/leftBg.png
new file mode 100644
index 0000000000000000000000000000000000000000..3956769c268c7dc705fcbce2e17ebd797f17ea22
GIT binary patch
literal 2902
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
AjQ{`u

diff --git src/main/webapp/statics/images/formBg.png src/main/webapp/statics/images/formBg.png
new file mode 100644
index 0000000000000000000000000000000000000000..a1383979a542885ef0ead1c9cdcdcaec2330523e
GIT binary patch
literal 41921
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
Szt-;n0000<MNUMnLSTZ>?pBll

diff --git src/main/webapp/statics/images/xiugai.png src/main/webapp/statics/images/xiugai.png
new file mode 100644
index 0000000000000000000000000000000000000000..74581ec510506c76fe74d3d245dea182d86f51a4
GIT binary patch
literal 3927
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

diff --git src/main/webapp/statics/images/search.png src/main/webapp/statics/images/search.png
new file mode 100644
index 0000000000000000000000000000000000000000..7334d2e7979ef1b12b28ea788559258b6577041d
GIT binary patch
literal 3632
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
C1L}(a

diff --git src/main/webapp/statics/calendar/skin/default/img.gif src/main/webapp/statics/calendar/skin/default/img.gif
new file mode 100644
index 0000000000000000000000000000000000000000..053205d8201a3a59fb9870c6a4743fc3efd305fa
GIT binary patch
literal 1578
zc%1Fi>sOKo0LSs?5d$<YsFdQRAWM(tPS|#~vQDXZ&x}sCE~lkUB&Vz_Z`G`scp*!r
zj%jR`pswRF?>8*OPyta<K>;;I)YQB~hM;Hav-Jn;KiKEp_ucQ!&p*)b$kA(_z<xjv
ze5F#U*lc!45rIr5KVvdKt*+m%yxTa`TBInP)Xc|9NR9lS=x7S0h9nbmT7D6;p)PXb
z?Ck8UUaxOmsmrfp-0O~OZhx!Njh!DnrBEntYeI^pCGqLmVzF2<qtHPc78X{;wdGSf
zZBk3j^wjd@Dq^pEcy@iMsJcou{&91AqlMp@Ev1PTr1czblIGkwj%Tk#Ufu9+0a`;M
zjVmWvoeJs7%8E$T{alqLS54?YLz!%<4uX1@#%Q#xPutV7q4BOS0=0hQ89#SydUgR?
zY?BQqOr5Q2<&YARW!fI0P*_s(S3x!7;do4CU#+lD`iC-yN==Vd|C~0M#(B?+9zAVm
z=a4Fls}?nK1>E}T*5R=k`O?50jaS%U@Y<GUaX}41km{pcz54eXPR;Vx*37bIabq(s
zE<rZ`p}f2zr-6z@qF}Hc?}g%i<+x;cG*RbOK2mbwt+yJQ@BYkxDWJ1HJkOCm(CfBm
zr`3=S`m9;gZ0S_<i|_h6L^7G6PqC`kXtvewdF{<DoeTyePEMN9DrGbB;L;P1U%q74
za>%2X9`?jH2smZj3Q~D!-*o?POQDr>rS!49DlVTgdA_xu%Wi(B&?|Bqb6UjWe>VgF
z`wzGcLl6P50JpF4^%DRR0tiO-0X57vD$>gJil~Owk%@8)Dh#MC_Dwg0lS$1M5gj=W
z?l<<MEOCK32h3lYG#<uvJvn48%o`b)?qaxxEub$AlKWFVl59;}zjF>L@XfT`>bmXH
zpBKc4j$f#E2~G8Xv)T}Jju~2Up{-bJyZenW*Is&$D{877WygN>+a%zK%oD$F*NA$i
zBrH_Q<IQ!D#<FtQYuWF4Jfb5L^DW#d@vviUWKRfu+o&+fWY2L7?_zXb@snSS%P=>P
zbjQvtqoYouS14>9&%Dx^E<FvWFWEN{)?5a!ud|$XS=wxnz|+<qPH=PbI!H_zZ|I5|
z+OtWeEPimVfHZ`woji{4%hJegCN(e6|FtB_0*IYV52-mbEWxsuOkwl*hc_ueI1I?5
zFdb41b_{foeTcX~qbsF6m}yut4uSio0<cMdHSJE@on;arG;Zs~+F?BGqo`(RpspPO
zOUD;FA9IWKGI*eMPqRK);fXN67|!y;$ez0Un9=x?qy%&@s?aQjav>dghT;#;HmD^E
zZGLdG?Amom3yMte_H8iZ_#-$T;y%7~9|jBs5%#y5SyK<5{pxH7R&u`w3s^So29C)A
z;l57$%g*v)c?~R{1%XKu7-wwwwV6~&6P5X}Wz3$NlRFS;JA-5v!UKOs0RouC9SC^j
z<T_Ck=4@5gG(~Ayb&*7KS8V|*t2Epn?H)@PIOGryiyVVJnckqIAqp^kF@<16&=YoE
zA{#g)G9s0h-KnS-Zu>G!p3i{>NG4t*u+`>!!A(KY3<?{GeabU}txJ$*N5r?%z=18i
zk27g*lxTZBuT5l!z~Vd6ameBf&^NxtVBg-F2|VFs;nM<4;RKzJ_Ag`kwR_BYW{4aQ
z$_SW@{A;Q9r^HMl<~q<+WCgzXvEJK^nBrr4a&r;^f0TU98>pMd@(f=qleAuf1Z86c
y4eO1Gxq363K6JHn_;L&yHPkqQm^r{6doBMdX(ZN~q#sYLM@+DlcdgMV;MhM-kfloi

diff --git src/main/webapp/statics/calendar/skin/datePicker.gif src/main/webapp/statics/calendar/skin/datePicker.gif
new file mode 100644
index 0000000000000000000000000000000000000000..d6bf40c9f290161c87230787a1056d977d36c821
GIT binary patch
literal 1043
zc%0?a?QatW0LSs$R_K_-G(2dKnG6Nuloy5<hKDx`$`~Mohb1N^CXh`Nc;PEv@Wz;-
z!Qougi48_ry0z$NSle@B?xEYdwdHDice|(FU7xSlc5BCRy<YF=6K&c44!`-l`TYUE
zQ>QzR9KEUo-T(>!P_I?XFKgvWtyr!WO4UlCn14~uD<xSi=9E%3CyHuOlq;F6k`dMP
zb9GfHDy!+_y27o=;Z-%B+=vgSvcZJJ@)asx<>Ik;oTK<^AT9>DEW?Q;pCx%I$O#N5
zF>!(7<a9U|jfDxWLdL3S>;)FBL?Y2>G#rVB@JJbtu9J~xNLUPnSUmhJPocq3fC#2n
zf`T_#pxG40CJ;6a(?x<#)R9FWBOz>(W+;^9Jhbd%GBC47(G=xRz)Xgu8JJFcnCB3k
z@%ssgmJo`6N-16{1yh`x7M3Z+<xjaN6(cDRwdSVMZc@fc5+YJ{=wBC^aT2u^9A6{~
zUOb55B#Pmp$L+)t%UHs<g4(g%5-PY*&V}+Yiogg8Bgi7c`Cw!Y$<6rG1ur+{E!n-X
z{~+(2Co&6#=b+Fu#M+*UR!CN6%u`Urzu<(H5Q{r&cFURR31Qkg;SNl?SgTV2ms!(d
z(d1Cg3(3$En`j$W$MuiwDZ`xn*K9Iq9Z!z`X_%3Rr#Gzn$Nx4w;qFbzV-t=saN*%5
zy9t~h1Lq%Zu+5vS_EF31h-G%vJUL(%?mi;*Mw{LU-Zg?lqu|hp?N@`XUatfHoA#A7
z4O##M4sDLjPXNsl(6g<z%Vt>mu6gJC-Tl2ygL_+V+i&vxmX_B5&6IA!bXI@(E8g)(
zzVqC0OXD|=_jYJn_8$B3<&mLJu3bLZceVQl=D6j4yL0g17t5~p-#gm(+_-WYygjh{
zL{Dv(*?8v4PYpY->(aTlhTj_B?P~2fAa&jO=w`1J_$RSl*LCau;~k!+KJ9_6lNb7>
zlMQVj@B4h)eggR6P3_m8-tX^q62?6i&83+Sw;<Z%=Z3nEnXc*Xeb)G`<`>{Z$Lr18
z&4+YgW77wH7r$2mJ^L@db#%be)?(7?I}SfMe@EW6e!2aE@yy^mUtS-{uVKcsKkwE7
G$6o=b9U6)N

diff --git src/main/webapp/statics/calendar/skin/whyGreen/img.gif src/main/webapp/statics/calendar/skin/whyGreen/img.gif
new file mode 100644
index 0000000000000000000000000000000000000000..4003f20fb1197edf0433ff99759cb6399d0f99f9
GIT binary patch
literal 1679
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
Z!{27S@w5kD(DBS4ugmktD_>AR06TP*k#+z8

diff --git src/main/webapp/statics/calendar/skin/whyGreen/bg.jpg src/main/webapp/statics/calendar/skin/whyGreen/bg.jpg
new file mode 100644
index 0000000000000000000000000000000000000000..75516a6380f3a18d246e090d47999698e4193d6c
GIT binary patch
literal 307
zc$}4wJ#NB45QX1(e{Adpc34AJwhQi&A_d|vr%A&N=(z?rphbv|mLfotn{3t;C@%Aj
zrg@*<NE5!p5A5e+y#Ntm6$jyg8MKsANv)Lb>9|Fvbyk=>FY?@2^Te9L&<+R2xw3Sw
zsq4C#zG#n7nx=iz_tyGq%;ReMU&0Zb!Gi=b5+=bE&X@oK9i+-){${ED;V+3RTM^T4
lLr|ik@Ek?AK|FHd4in>q1>*zz!}hxSn%|a}_x<J+Zok@rD-r+z

diff --git target/classes/com/lpc/pojo/SmbmsAddressExample.class target/classes/com/lpc/pojo/SmbmsAddressExample.class
new file mode 100644
index 0000000000000000000000000000000000000000..251979de160aff09b759d62a988a2ea17bf9cd89
GIT binary patch
literal 2223
zc$}41+j84f6kW%c$W|0Lb==U>653M07aEtgKug?|T$+&LCS}Z&A#aMU2@100kz|Gj
zhG%%@^1wIn05gP6+ZjH9Z(<nMkz`qM%%piam#w|mUVEK=&gk!dpZx{k20m6%KtsVD
z6)80Gn8KnQ?#khVNi1Pm<!VK)Ru$Y+p`sx-YYNsCe5hbU!F_@Jifj6YYdW@owqe_b
zyJG2{XLtg+=##GCBZ1TF20!Y)(HWQprX06pxXX_j()SF3VslUbQm<ROy<2bju4(Ts
z5T;{#zG=680kO>_j+=y-4nz9BY1Nx_WI(=U?%KNFcZqms<a49hcDi+|*RJ=RJ*VF4
z?sUDSPRBJo@7`B>w`Unw2G|RW#F}WBw&^blq|22@0+|)3L)24E(>6By-5taIMBlLj
z=1yC;9_ftZJ~C$f&rRxZ`PiIHH0>Gw)?qcyl#j|GNlfn^aV?cA<D{D;=xVH9ro1h~
zRnr^VSQa%s6(A;MEe-&a!rnb%JgJ;1#}$|_pCC#y&b4D+wG)I2TqWU?_!ru)!46F{
zXv^2zUp&xz!HM!32+SV#*|0g;x+RcpTZYc^)RxnC+s2wHTj1=NjPp`M4Rd%^U}mW2
zlI!Y^rKlQS#(531cuB)qoKw)$@Bo_{ZsDeeEj$#cyl_<-Zp%Cuj|*U14I5}{XU~w`
zQ3^~Z10<AX?uUI{ebMalQMi7r^O%RBaJbFbr+TL|aw9^L3$lMRp1E%X&Afq2e6<Q-
zPa}<t6p^o8M(P;MRF>Z^aGk;{nB<zr!0{q2%Zw15r>jpOs?U-7><Q8b$ow97U*cGx
z2k<6w%EYhWGIv@SgV%6{v%u?kBf?u`REqONwRV8)5Je5F*OBEbED>fyuLwb|Bx}BQ
z%v6rB>cJk!R{ucuw-{<7Fg6lIvN4egsz->NKfuH&ku}Dw{|^x<n@n88TVse!{5nG9
z;aDP9F;B12;LK<h+hc;mgOXv_@OH#tHL6CFAhoAZQuuVVrVfwRNYtdoHE9(7MnK~l
zZbpck5n{3WCvwdMY;DLfJbIhV93FNrfnAKSvuwNp_B%1Q6=BcC*iVrc_yvX0Jn0}$
zk<A6{6YXo9#y3>p+eEIpIM=x-*Sp;1ApXGx1@AHTR-Ab`%B((z%1)kaCaMWl`i_y`
zC(zXhJ;&XklH2k1xKFD*n^IVW#&<xludC@pJr(l*0eSpL&3?iReomZgDaw$-`@y(C
YfACVKsp%B!%|rfl%y2GoK9kY@1E+An!vFvP

diff --git target/classes/com/lpc/dao/DAO.class target/classes/com/lpc/dao/DAO.class
new file mode 100644
index 0000000000000000000000000000000000000000..6bb7456fc0b1a17f184197d2c349eb797c2e5bc5
GIT binary patch
literal 658
zc$|%p%SyvQ6o&s(W6~tnR_o;n1l>3bL4>Y^+Et~Cper}i$ylevBqWp4XLI2L_)y}c
z1}}-04h(btk8}CwyuH7?0=U4jg98VL1S{tYNw_*4&-sG0h{rP)=uE}4!4EQ-&ZW?U
zvnC>VH%lQ?t&%u*a73_+H00X!v_l!mGUz<2I2<L}X9>Zt^jPIad6l~5DdAxwA8T_e
z@~2mS%C&eJR=zI(9ad-+vC`hUHh0xOPc~_DPjFXN!D`=LkQAAaBNZ9Z9$rt*%K}1I
zB+o2L1q*q?3?}sI^9lWL^tF4NKxm;nu0_~_W%RaD<!c+_G)TKa+y?O)#K%sJbg)|^
RUG!>X?{|*5`zCIo{{cX8nlk_Z

diff --git target/classes/com/lpc/pojo/SmbmsUserExample$Criteria.class target/classes/com/lpc/pojo/SmbmsUserExample$Criteria.class
new file mode 100644
index 0000000000000000000000000000000000000000..1a2acbce180f8de8f30a35b12234620a89fe7ece
GIT binary patch
literal 17048
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
TU$vx*cSJL>$dYbp9&P;(PMT7~

diff --git target/classes/com/lpc/pojo/SmbmsBillExample.class target/classes/com/lpc/pojo/SmbmsBillExample.class
new file mode 100644
index 0000000000000000000000000000000000000000..128e5634b97b424d99f2dd535c867fe350c215e1
GIT binary patch
literal 2190
zc$}41U2ofD7(H)3>cn-kE=>z#TgPB*X#xwd0^6DumUinpvX&`mh;ij6rnoqEa2&)2
zh-<j!L*h4Z!6eEwCh-IKO$c#b+i_esRN?0R^7EYMJm)>O{MSE!{0ZO^?y4xDuHc%A
z6zX}*U{wxp%i*1ATt`FYYE7=z72HsvqAoW#6>KQDrC?LRZGrrnYkG!jI<|neY1@Xo
zX6gOD(HF>tk8}m^3LM`s_)zzZ&hS`Z#&J7_+jzi~LEjK4Huv<;^_r#IyS0|*n)dDr
zVLE2tGwrq~Anvn><HjLogOq`1TD2wvnUHUpySDBPTq0ggJgzs}PPb<D+O?ju=hRx=
zoo>HjTGov(^lr~G&JBTARtYp!H*M2f6-bwt?g?bpoDLz6HBH;t8gzFI_kDfG@@YG5
z-MXhUkNfa2<9%XMgfmAMWR=;z;cXw(VZMA=2+3e}_fTl5yfjX<X@agtx@F4uWx8ti
zM`!GbY98|u<AN54fN@FdhYtUjkSWI%sFo*9kz8}_h|$D(0u}O{IJnSu4f-)=$CjtJ
zKfR;({41pC1r`p*Y}%Y`-4e*QEkkElYReh8ZR4gX?|eR4?xGY;!y?WI%#8%R?z;K|
zsiKDGa8knpp3(3uPAF(<xPvVXm$9s28}A96pR6AZS7edXM@G{@Bd=`l>>1JsCI84|
zw8XK@hk<`DOjK9C_O+uU$GrE2gI=N;^-d>Y`+(kxG-;-9J~VvCZsIIIN(IokNFyVK
z<Hsx`wex4H$!DjyPT@4Bxu*0SpXW(~8G`d{<uOF%DN-LkMtUEaM}G8Kjs->lW#TLm
zzk(OI(}Enlh;y6;Uc&hhZ<Sdo&Qq1@KC&Ye)jz$2ES7zQg&-<KkSocWA2VEFtpKa$
z?}2RPH)MZ}pr-u8YcV3(h{zHNCW)Nf$5fKY26Jxx2N5ZoEL_FQV~9-sk|1(-ERk1m
zkx|LyOtOoQ#v}(9CDUHTYaxU6up3Q+RG&ae;e%vP2Cw$xSWjBilZMwRz3>s2L&U8R
zu~_*Xxn>NuI^q~yy+dX_UiN1(>|%(WrSXQ?Z$#Kuh`ktLKS5sLXB3ik(te#H%>{f(
zw6Aa+UsHi^Vzm~dS|`F<Z*rG|_#3Abyv5whQRPNhS$ztXPM&VYx(QVJmYLth(A5w<
z$K9}#E79w5o2T+_N<kAEKc<4duA~omD&YS;^7w(8{fIgI6uZ|_SRsY0{<y+;@TE*s
T(;4=ghy16Q<6PoApV9sW(bBTo

diff --git target/classes/com/lpc/pojo/SmbmsRoleExample$Criteria.class target/classes/com/lpc/pojo/SmbmsRoleExample$Criteria.class
new file mode 100644
index 0000000000000000000000000000000000000000..86ab9a76c9122cb861e3044f3c3502a2e68e2997
GIT binary patch
literal 9650
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
HBv=0z9<TnY

diff --git target/classes/com/lpc/service/SysService.class target/classes/com/lpc/service/SysService.class
new file mode 100644
index 0000000000000000000000000000000000000000..c34316c9e07bd46ff24703a9889ab221128f6a0b
GIT binary patch
literal 14933
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

diff --git target/classes/com/lpc/controller/MainController.class target/classes/com/lpc/controller/MainController.class
new file mode 100644
index 0000000000000000000000000000000000000000..7114cbe3fcaa156dfeaf727f2bd2f3b947a5193a
GIT binary patch
literal 1676
zc$|$?OLG%P5dOxpt(CMGBi;!R+dM2=gbBtD20MT;?-Gwf;0veKYA|b7J7Q*54#!+5
zE>z_}QAHJpTvC;rO%(;@9P$J5KX~L%r0Crhi!e5D(DZa~KfeCDNB{o+_dfuR;8Gr&
z@KX-`IBa38K$dX}gONUw$Imz#-6ky@E8sZBqt8<orY-zp;e>^gS)9sZhM`|KY7Ko;
z3sn`W<+*}ksN%{7_nR))iHTQN`AjkFydDO|Ylt~ddo^Fo1c5Y;@noPGCM#0SbKO*4
zFn?P)4Y4TIU0xGTp!sdbHB#N@P8z^xLL(PFCF+zmtA*BNWEiL{I4$Sb7=teizhg|3
zU!bF!ctp-h+zW*^48!X?$A;^PBgOPidx2+8Fl0(2a}3?HvQ8~;tayRA5;kf=-EgQK
zhGIp!jz8xpFVfq_Zga<@{`RH>xiT<H`o2*7vf~A_sY;c4d^zt?BU?%%F*@!$!91^;
zh!y%gz9vbFqQ+}pQ19gDyfBxYW-|%vX*qsKP<nYgeYP&!w}Yh=S5q#?k5ijk6F@GV
zJj0IlA{jPRjpN=W0BsH?z8Uv5sXKsMJO!Gs%22uDoEPQW{3&sVBBTuEHLGYNl#u3r
zQ}7O|ZG4CCZEVAKhC)cFuLhN<P!^|c%;JoVA~t7n*2W;t+1P=dM59njsw~dixPXhK
z$3=*Uw~zmN^YGQ{-ygks_~iA{gSUVD_TS^D@0OMr`gG{Jw0l*jC9W;jX=!L>X>DC|
z{KG5;zq%Ln;69GxYHfj{8TNd6)8k4F*%C8`W>*Uh;oMsKe5BDn4}9(EGK_s;P1fCl
z{onMy7;G&}2h8C$U{+QWK)`7-{q%1JWY85&3-oMA>m|9BWLGrY&ulcvRkjRC+66jy
zk;X|fl0BoZz@En;yW7qn_dRsli35JX07)7khR7=lo+cT6>l=N6u3}~d-2|*>In9zM
z2^>HH!yTFW+L^Y*clxKG-@aR58vE&XfP9ne&*DabS<2p9eu->_mH)(U(yU@`1^F%{
zWy>olWKgu1V>MUY5bLqhmq6OM9QPeT8iGaVVdOAI#g7m><5YG6B^;%55~px1hPo{&
f-G&<7N*Ez{qX~nh6n!~Ge~?0cjC((n63&75<^8ZG

diff --git target/classes/com/lpc/pojo/SmbmsRoleExample$Criterion.class target/classes/com/lpc/pojo/SmbmsRoleExample$Criterion.class
new file mode 100644
index 0000000000000000000000000000000000000000..04b99ea07b216aee86fea054163d963d5328fb0e
GIT binary patch
literal 2254
zc$}40Yi|=r6ump%WWBay9(j;Zh}#qzd*j5=qz@jYEiTWdAk{QNd|NxCuwlJxc{jBE
z3H=HE0aaV6m5PLgs00!pXrby0AtaEXElBidwA?#8tewp$3SaJ>nZ4(pGiUGGzx?;(
zbpV)!lO_zn+Z6Uu*iYdAg@Y8{p>T-8yBWyCdj`Cp!OdX`RRfL~a8v`c;d_ft==h!n
zTj!VUi+07ey`@SmY&+i40S)>t+U^Qp{qS^snKwdwm<>4L7orlw^W{oAN6)Z<%jHR~
z&cjbR_vF@eogkF!Z1{PLAGf_lm$$KSiHFs$rlDd<rAn{*iwNB`?|A&wO0&+}XY9Hw
zWcm%;U9j5@?d72!o_7Kyt+t(zw?*IF3D4v0s%r-U$4904hTp8XtwyEgFZ-2Rv)&9o
z_FaDDGrQSx`K}m=+-X!OrLR^O+mgqMTCX#v6P$YPO{!QzcLtoG*6UB+2@bDvDC-3C
zU5}{anO>Xv4?3O`9@1dAxYnQ2f(H8(=WDg9u>-ZxZd~}tZVCUys2mg1GP$9q)Z)Vz
zrC(Rj3ty&3Nv7tnv>W`WLz6I^e6urz$-ySroP#Z}H3x$fhF~}cBNVn#7^N^qC1p5{
zFGKLGgpOOGS45{X6y^*#fgWvek~G+y)Vt~^x~7;Hyv5FSyTU8@P3Q49Aq|Y~f-6SX
z5qVH%yp+fzGH;W4ROT^(8vqTq!%G-<;I4vM!`x?G2JHt?wi9DN9kQ=r9M`$1017aH
zS%X($mjcX^;BS@S-AZsO3I1LQehnrSVEwxU_>vM_RD%1G;EobpQiA)F;Hyfor34#E
z@HHiPO8KhNNyBa^z&eiXv;?2UYKD2px&o#()d9`YI*_*X4(ONSUL%MFb`x~=6PWC0
z$g^88$Zm_?BN1NqrWMVhCRk=9%Qsk~V=i`C${k?VG*XpsK;}!x5~J~T#N0>BDZxB}
zlMU=wWd04Ae@Es&koiy8&hEejy9<--o={;${bLnHse)GYJutDNNl&3+LiPVxsvEG!
zfV~F1j**-p)w5FdN!+FA+p?z0+7-xl{m4*1b{`D(K(N0Y)y3@Tm_04osqdWZ`vvaN
zPbjQ)BV~>0(*FJ~-8dMye26AILKFT%6aGdM{(&*}7{=KXAz?0R8A~X{5(=>a1@V)R
z5-YMIy6ziN)+gA3OhifLX}oVPdEcjyX8-oMZN_9~OlHPprX*wVrs(q){#H>Z{Fi|b
H&@uBF>FSGY

diff --git target/classes/com/lpc/pojo/SmbmsUserExample$GeneratedCriteria.class target/classes/com/lpc/pojo/SmbmsUserExample$GeneratedCriteria.class
new file mode 100644
index 0000000000000000000000000000000000000000..002372a72cf818458bcfe3dcef85e77fd3fe97ca
GIT binary patch
literal 26497
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

diff --git target/classes/com/lpc/pojo/SmbmsRoleExample$GeneratedCriteria.class target/classes/com/lpc/pojo/SmbmsRoleExample$GeneratedCriteria.class
new file mode 100644
index 0000000000000000000000000000000000000000..e64db52d6b98df2757d1942ff766c3ef57d642d6
GIT binary patch
literal 14913
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

diff --git target/classes/com/lpc/pojo/SmbmsProvider.class target/classes/com/lpc/pojo/SmbmsProvider.class
new file mode 100644
index 0000000000000000000000000000000000000000..56c92a81484997dc46effad54b1d02b525f22592
GIT binary patch
literal 3193
zc$|%uOLG%P5P*AROKYuG$nSTs!z0KxAo6}-Oo)MCB7=#H1LOfK?P9MZX;r&21*zng
zROJW2og0@>1yvzQao_}%s+{rz;LZ<7t|Z;F<MnzxTT+#(dwRNi=2LfT^w+D$PXOR;
zxT-@pe3phB6iF=Va1PGXYKg=J5}%VOkys{ik;Dp#FGyS>aan^a8hok2R}2!4#h|;m
zZr(5pRkOZYD7y94qYSi$=T=<HX3!gPmYSXuy6a}m4px@!R~YC#rQS3vO$J?PG}hd@
z9qgNy<=MW^Ace+t^Cp9I#k0+(ZIy2^F!<VW>lW^WI2%o;S~!V2c%NQ#E$8~Jz~2=Z
zl$n}!>P~ZxK}UXSg+b>$N6r<Ux_xe=R<^xmvs~q0!mXIq71MLb7Mq>TH3yN#ixsz4
zs5UBvhP&<-O0{y$U-H}=j%9mzb#m2iE?|**^HV#^l=K5<UtabRj*h8In|18pmLFD9
z_aiX_`JEwjP_~3s{dUo8aB|+hufyYmK8SOK5qLyj{D_g=L=t_<`rGYH;1{jS_)$yb
zhP@QIp`8x=L3{nJwSoKdk#76j%-p6o?0;D4=mg|^Ic&4$TT#4Jc-&%SSO_v|XF@++
zp7EoWUUE0QihbJQBeQJ~4%1ZzybgN|=!HH5`e6W@V8AzU$bdl@FkpzpFo_Woqa?;i
zj8pt;u-kwM5|hx!U^IT_@CUFp1n0}^Hua^SZ#fuh;|y1w?}8ETmdAyr+H-0Mn!~4p
zK@S*^AYyz!5(LflpwL4?4+}ja^r+BdLXV4l{1RMG2tCR7NAMmj49dM|6;LzO$?4yL
zJ>+5gP^S213ihKkf&h2}4xna`hp8ROze3`Hl-y7zPs5Bzp2O$_MNiK>g2dL<I^X>s
zbAI3_3<go+1X@vj=;DKLNCDCzgZ!)nIn0wNc};-yOwarY8oLMD%x}>72s((VBf@kW
zdvqtl)DtrG@Ln-E!t0w@(BRGgFg1Z%gSSG>@J~U7oRpF8Dv{r5iJX*?e?jE?G021M
zA-}6cPRYoBD3RZ5iJX#=pCa<J804Y$kl$A#YclfRO5_h(B5N}8b3}d-gFM_G@`p;~
zE*bfy68WQ+$Xzn>KZyKq4Dv{O$VZjPX$cuWD&*Og$Y}|g8PLtLG03CsAs<sB>oW4N
z5_zsAvMwX<L*)H2$YbpxA6LG%85#MA68U5GYnzc?TQ&<xb}Z(#9T%_d3HU?-V#pw8
zlpynPQUzkjAj=4HF$RSG&gkM(N|3A!a!m<xS`CtwL8=H+ivgJsAfGB*vr7iKsRTKr
WZp|(k<VOVgDF$Rxv}S?loc$kTExQf?

diff --git target/classes/com/lpc/pojo/SmbmsAddressExample$GeneratedCriteria.class target/classes/com/lpc/pojo/SmbmsAddressExample$GeneratedCriteria.class
new file mode 100644
index 0000000000000000000000000000000000000000..a1b752152d47b450397af505fe368240d8bd76a0
GIT binary patch
literal 20080
zc$}@7cYsvY)xhtW*>ZQ;#;^?pT#5p_;0mIG><%4*QbZ7iM9u8X2!pdT>+CGW5=){c
zYN94$q9$qtHTDi7f{Ia8)L3GPC6-uXi6xd;qJHPTa^HP#&fPaV`Tp3QdFP(@JLR5p
z-kq68zq@+}V{E@bSvlJTD@x&q<tzXz%GgHuQ9n2ejxL2`IQ+Prl|ZBvqUEd%B0?T3
zg?KrufE65$6|XBftP-yYp|P67apE<}p|c!GsZvOD=;ClZhl~((bI5Y&;jo6oS`O<t
ztmkk7hZDu(NgPh*@DmQFa5$C2X&g@H@KX*y<8TItGdY~a;pZHF!QpHU=WsZe!!J4f
zio<yv&gXCehhKB}4TlRkY~XMahu?De9fylKT*Bc}4!`H{2M(8UxSYck9RA4RN)8)2
zY~pYghpRbU!{JXHuH|qYhwC}qz~M#?H*vU`!z~<c<!~E^+d169;Z6>lIc(u@7l*AJ
z?&h$K!#y0fbJ)S*UJmzhxSzvL4i9knGlvH`Jj7uahle>l!r@U4yE#0@;c*U6aQF*{
zCpkRD;b{)faQG{SXE{8_;du@(aQGXC7dgDd;bji5aQHiiS2?`K;dKsgaQFv@H#xk;
z;cX7@aQG*OcR9Sr;e8GtaQGL84>^3q;bRV;aQHWePdR+X;d2gOaQF|0FFAb0;p<ZP
zrWF1Qj7KwxY&?^Q0IQk5I<h9x+LKKrTjwXbvr~YTElI3QMY27aIKH20YNk`bD(0n9
z@yyI*q`N!b4J_=rvu%Df-PxM#iney8SEpN-bar%hPmjei@$T-~>mr?9$@oYKn-WGl
zC2fgRA{z!496e?ku%emi7+S2JpGd_Q_H=f{GfN{KNtA@<r=yYNvIzQ%*Oss-yDEWB
z^q(6?pCZ|KY^DrpqQ4_KccD9_iSA{QWFltxvjSM<l58Y;+=57#WwB~yJUcy^bnJvi
zkI7Bmv>aid^U@CuIaVqnv6!+6b)!vuGLl-^x+I%Pq*hK5*(-~tQ?W$W&<W+L0GmwQ
zs7Mxdtd2*sQ)qbcnn<!I?gm>oU@>)N(p~XPc0I5|`f8(Bt0jij@%Ebun3+f_HZL}>
zdtpy9iH4mdjl-<xn`N=rRW>M{HCYvgVD|Ank>t`euy!?&`Dx)$pZGQ2+p(?<3usUp
zsWBvTGjS}$%+gg6+_`~X(V~o0uQb-?qd`-*-gT`gmYTt(oG_dM?OPaT;<3%@-7UDj
z%WlKrImPY?Tom*ouN#C`-yAEqlPRJ!_ijc!yEY!j%LO@m_rL9>+&F1LY~0Lr3dcj%
zuEhZ^kzG~&9jV-%sZ;~^$)Q?@s+LooBX-r)P*SecOUO}hs%wv2p>j)=vYI$9?urzB
zGG!G?PLMdVmm;w8Ac|#iZ^a_@`o4vZcfuLPU%9P|d!Jta4|^p|39)rkEZ!ZptEeGI
zY*$j9dqr+Uqg$@l!$9|vt0snP*OX1JcPlxyu_wLYDJfOMsE4{7Url+9C+d{hPHt5p
z^#EixbCV#K#6BOI?#@Q>Y++}))-AJB98$!trm}@<a_bejE3<pj3rcPVC>l;q2NP1|
zrfPNB$XdwlnJKJPL$fB8q9jD>eKJj+Fr{3y@X~nF&Rn&;w3Ak8N?gx0yjD}y-xRsB
zG$=>r87{c!<fg$bP*lsU6&bu~+q~wMw<+`BU@nO(OVKsY%~dHfW}@L;tYf_$ew{~X
zCt-jpca?~gstIXO7hGv+(yS;E*QzQ`iiS{P@4%L>+XGPX&h9!Xld15=;VK$q0S}!q
zT(;BHm@Bt4Rqt8KIdB<Me-^G3cHnYuH|L*fOWlG&o;BAljL<JC8Ex=rIeXEhSy688
z?@dukdz5lQ>g_0{Y8CK=a;IrtDtD)Hj#rMw|83`pZE{WT1?gDg*!4~m*1Bct^tQ#W
z>1_+W)7zHkOmAYrGresM_w@EkJx6!xvo&xOzwEJWi(DP1=t;TbgxYuYUa6g%TGxWB
zf*rA%pGMb;D?`I{OG>zPE*&RJLrJ;kDW^o>N{dpP?s#NYa^jIIf_r#37M%R-7*Zv6
zo@%7fwcVyj%}=eAx^gpw5_`JdTz7IZC`YE;(9iKQWzKNvi(N*hz*QMiM@q|=q<b>a
z_?(3J$ks?S<UXQ>E7<ky21GdRJUx?%tQS+Jf?dU~E`@I^;5+ypopw&ehxMegiO%@!
zb<ud2`R&8-W#U6))3NDHll)GiDH=(o(%GhtcvA{fEi7#-4KQHM`F}T35r9AdciDR)
zpV5;@#^M=_(lJ~S2nLF9-@SGN#eotu9w@~yt?V?JpK;CGaET)*5o=0xTb|y{wgDTH
z_e8^OvhGH+DWj~4P|yx6kcbJ|4q(M7XbYPQVe>NFZeF%otL^4%0`pmhuL36C3(q=C
zzXfZjY0Zq#uJx$-al?)PBUL5Rt1?@Prb?~%Xuy^V|D;M-SrDGeg*NpLT&S=wlIF?Y
zz7%FnkyIDqRH^F;)p;4t09D12M$GKb!sEUZXoFWOgRN9o+C^hI9~VSpDXSuImwMQv
zAQIqGX!8=<MQbVoGxAzh<Rrv(Yr+_L9=(J&;0|Zvc~s>}O&6Z##TTkhc4}QBnVNDb
zZWrI>Sswy0MN%#@;%J4{C6Nnfsm*nlNRzxWW9=`mo%o$Qi~?|JBwUfm;A&k;Qrs^a
zPdedN+gCEuVj)4Vg7^xoL|lo`3~|^Jh=2@1o2?<TBHozZR*1Kb^M;Din6^A&JK{8?
zy(A_5qvmmX#(KxyI=4(Z-OrI5jb|UkMX$*f5r(1|b}fpKl*Kmpo$anmBjL`a9gyO%
z45H4h=4?*XI?Rc)pc7wXj#!3R<yw*sS?5796x4MQtNV_yS4BkZR%y$jw0k8+m$@W%
z^zMjcpp7}oPWN>h#}IXYYh5Cz`=nUZS*LZ@!wr*iqx<AlSY0x@&rx*U)vjI{oh7ei
zXGw{(c`hX>4w+*2j@EmGGNuY;!ST@C%SvTUM5gM7-OD06b-B%Rcf0%As8i+Ij#Bkq
z22}4+lnYfoczBu@bD|6>0vRE<gy=#^k8#?<*0f|IDtkTbh($EExJ}V+ciszcE3Nmo
z_qIRIRwxQmIHB)9c;WVYe}+M8?$4HZB<W6^5I24hn}?rk{j8uOK9D@WQCUCnh+ou7
zB3)haR80I_Lw&ERIoOGxn6hb8gcUkER}nQv<@L*x_*JRTzk|tpi-xg{Y!hR6Y%LP!
zVSK#?uLA5kb{0zT@QjihQ8I%C@f~9|&082WZ)1VwTUhW;R&=YOeG~q#LJh{Q#Je`K
zYGmGwR~6<x>=t&LVdHjohsB$VuVO9Kd<QGq%8G$q#!8E>VMW0kP#QFdC5FZ|3Mpif
z?!>=h7O0sfAe-41bU{E{EoiZT-Xc9SIoB(kVvA$OdKb#J<_EdC7f6vfS6kt&#;X9n
z4r|%PDz~wc<)P9ojNdDe+gRE1mMyG&E9)0vN8Bo-4dE>eGgO2*s=}a}&?8~2-UM03
z#JhXgb~JORaVJz6c6V5IH=tJnGimHDHbU6l#wu{9DnnJ9S@k&l3)SGi&8)x6o3UG1
zh<4|0{J)KjM1u#S4dG6+$(Qa-vfL5x?q&BG&Q4<Yqbz8<IMQ%&r{&_+n95>&4Uc_@
zm5$rRMyhTOK<@??Y5g3xh1JrI-p@E%7{mU|+S!AKqZ3Ul($TPVG|V2b91WxXeMa4e
z4VQ}ymvQTO6KX!lc3D18W&z{Qe$An}&8)upKGxt=M!A7{7{hu*sg8cK=pUvqjT+43
zh<Sp<Ji;EeFmtTps%j1mYzYn8%=Vy2PqQ-ij8Z{WG80v}QM-*Qe~e-d)-#_+<_kW|
z$0_CzJ@aK`zT(4tf?^KUGhavM8$QgxP|Q8`%(s#Gjt}!mirJ)RzK_fge3(z+PMVYH
zNQXJh%?v8ckCFL_hWU&!;r}YDOGuuTGyge!_dI27xZc|5Xzh!Ft-ZkhX60)!cB|;a
z>gLdhma)RzNGf4p<Lftuxh7Lxnybd9-fftv#-`qFblQs)ey?8e-?MUHdE;NA8hdZL
zv7v~SKrz|aFH@LN8cZ2t%1O*C?C-g?H@YP>hORw)aFju{w)VCgwf8E;Y}PXeAhXto
z`5MJ+(K8#7InamsI>j8TXAVK;P#@+S6my)OIUJcIe3<{BnEU9NqmVh;hxsPOY}GTz
zB6FM%^DT<Gubw#`nG<}NZ&Q<Hyql>^7B~Qz2lipIydx*eKk?nWl(h+ZYg5o#Tfx@e
z!%3bqX!gTFGlm{CFbxOIbnT$oE(gtaV<LP&;V1TjpN;rAdE@^@4WRus1L$BJK!=b6
z=tBx~fCjS&F^7_vkEq%^uq8A}Q+rEs=MML&y^ks8WIb~^GFSL8KcSch>6u3(^B5oI
zzbWPvJu`~Tm=E()irJ=Tu0m$Qhxr-BY}Ye8k(u&geoisNdS(Wh-9F4ODCSf>b1gF0
z`7r-OO_phHraD<pLgvW@PnIt!Yt!}CPD5*_7i{e-YS7HUK{H7+XwJkzb5`Di=4%Q+
zvlsk1h(9-P{5RA9nxz>)=i>mnfE+;or7*KKm<@=zh{SwL)!v+z&|FRJU4lDzsZZ^F
zM=^h(XI_rXD}0#WQ_OjK<|brb)jJatK`;;2Gp|MFbv{g>n1|?@HzD(8A7+4J&et<<
zN9G+q%pk>Fpl9BN%&k7mB8s_C&)km89X`xrYO*YHGu6qm6PXVbI$5BEvUaH6+Ag&A
zaKY9}sX?<C2hCi~pm_`j&ExqF8sHTEuwL*_A^z#S@nzHiTA~?1&*1=io*F>-F_FM5
z)nHyi%*!OEA60vYw}h5yYVS4Nxz~MauYzJ8p=Z8@%(s1*l@#+xJ@Y+ezVE}VqL|C|
z%#V=yu@AGFVy@6LKSSo{KFk`5`9nSPD`bA{!|YEnf23!Ahs^JNm?4UJl$IF?va&#t
z4|4!DS&nuymB|v|$Sf;(veZ)6j?r7IL~B(ATdSi6&5v==ETacaAjHZ81M(g;^%OqR
z3%&vIjd|l6r~%YL51_zcRuULO4xmN~6V+gbA!ay<8AyFM8*2&0HMO@l?%b%}zng_Y
z6!Ta;vjv%BeVBVt%$0iPzQ`Q!!yHU8SLvDiBl7?s<`9aR&@&H0<`f_1P>Q))&zy?P
zX+F$7sg6C)%~U&f7BXiS`i(X;QPz@rYxB_B!3A3zMt#BEi47drH1I-f;6?d<!41PH
ze5x1x62vdf8$W_-?6jt_kHp4aPB!*P3e%;*9EF&pNz7ibcW&(+-xA7bYOe!#E~=|N
z7-iJnXo}gbXRbu%Dj((;ika0jlgRA!VK!6D9zFATWM+JrEfjN&p1B5@YkinwDdt)|
z^F(Bx<ii|Cb?iDfQ|;JOk$GDF9Si%|9Sf~!ZC}dTdcCzX(At>=TN@7(avS&rY~YNh
zfzQSUK1bKUM#78+#&@ED_oMJ9_JThT@#p7_pGY<KNt(vK5F2{~+1UG2n3FY_ixG1P
zi8+9JHvOa}bc&|-F2kL>+~?VJAjLdY&)kU2O+L&?6!SDa^H0dU)`vNnVxF#N-iXYb
ze3%DO%%AF+w;}U(ALbN_`7=Fp3o`HWVYX2ndxo2-cI-XK++Oe#y`8dlrrz59Xl-Y~
z*22^S{w!?ZQ#1|y5H|3xydUsWDg4iS!S6==V|nAJQH}izO=CZajr|na*wZP@*&58V
zh<T30%%Gl4=d^^*)zsdLxN|T0Jey`x%wOu6uOjm`ALcBI`71s1O=Q01!<<bq&(kyC
zMdo`x%sCYEd_D6+WPaqsoJ%n;&@(?p=4U?4A5b0pYd2Hv*e{X!Rl!g6d6c!^=&gN=
z*1jv)+QHNV{z7cvbLj>S23UD8nD+zz5DLGc7knw=dEWT>RAXO6H+Hasl>{rv#$G^S
zeyhRsM@)#sETo=IziSCyOxIqpo|Od~e4b5<DCQ-4<{ro#?87{iVqU6eHX(DE4|6fa
z{JoyJ7c%$uVID>?|Db0!BeTVaxrAa~rf0Syb6+3kQmSJwcQcia4NgSn{slkL52vhM
zp|>^}tsPXbwPn-;{*Tze7i$_gj14?B?+5%56#mLy@G}uVD^Gj?judypa&|4g4nqAh
W=wNsnW*hPK)}jj5fUgg+vi}1rTb?!m

diff --git target/classes/com/lpc/pojo/SmbmsAddressExample$Criterion.class target/classes/com/lpc/pojo/SmbmsAddressExample$Criterion.class
new file mode 100644
index 0000000000000000000000000000000000000000..ebef7a5b5e8abe8b2b60df9abc8f07639e5eacea
GIT binary patch
literal 2266
zc$}40OK%%h6h7lS$#`tXX`4rrKH?GzaVAdO((vdL8q?B-&@Nme#BOX~g$d&sGczu9
z!GZ;gF6culv=u@E3EC9V3M8URERfjpqoC*9xs093RcSZp+<WJI=lkwAXY9ZK`QuLj
zI0DNi48a=|j#4;A;W&j86i!k&Md8gH6yYrcPUmp5M4@KD83WF0U^acP<wTC}X|QW$
z-M(yBUE5o$)}z4j){bj1aM^adeCxxDjdk9P@L@jWgkOzI49}M<?L&Ho4O}iy3Jo58
z%DE@Ert5@}T<4=J9e&RCS}qT;aE(W`o~F_AtV)$$^IHfVUU58rq1$fo;F8^Ng-pL`
zyQ_BK&|V(u(ML{*q_x0_cp&-~&U+pYYOWoI93NFyntr?LcAC|WzwTG-?M6F1-D(9q
z49|RKw>vIBn1GQ!iz21^tpXEgida$aH^+3s3;)@}%Cl(DkQ3JXEh;+U(iW5QPPo#u
zi8@~DcWUs2<2lhO4aUmbEt*}`;Hct!yH+)Js2<tPkKeO9!a^}E?}&k!d8Ve+;@#(^
zf2yG8zD%EzT;1;mO@7v)VVF?7+y#OaU>J53U?=P<zzBs=7%RXyh20b;C`?jG1<v97
z5LDgBajW!}=yZX?q5<bMu%3OMG}w_=z2zvrte6_S%YpxE3@_mKUBusqEM(|LxXRF_
zL>`eDuO{-i%)4ctka<$zhCqWouovS#+*L7am<O!iLHkvd?Z-GshpY`#xGuy6P=aa9
z8oUSx72r%7{D~6$k`m0);I0z<GR!Ez`Y$Q)6(zW=1P`RapDV$$O7LJB{Dl&1DZxe>
z{G}2+r+ih}v|(2jU>yf{UV=Zs>I~*l>oJ(t+$Lz2wh38F-vs@)q}MoNfqex!y9Oq^
z4n=kYM%Yc!dpyR=-n61Q)C9|dWZA$P9do(IQrU!zHIG!4zaV!P^2BJ|kC_LEnF;1;
zoNQpXkojw5{sx(EBl8{D!|uW~`xa){cS3~~_fJ%mr3zZn_mB}QnskPS3Dy5%scyg_
z0}dPT3Py5<R3DM5mvP7F+p^{=+GEJ~{K!#1_B|Nv2f=<Iu1nan342zuQ{P3|_bTqu
zPbh77gISZhw12QiHw6aL{fH*~geKfW6Yir48!*Wpz!dvgNLY+pCK5`Cgi>NaN&F-*
zu_7zt>%J;wy^kHpM3hvS$NLu2_k9Ri_NdQoGa)k*GBY7FC0Pbu6MbIC-zw^ae>d<p
HI%YlrSWSs&

diff --git target/classes/com/lpc/pojo/SmbmsBillExample$Criteria.class target/classes/com/lpc/pojo/SmbmsBillExample$Criteria.class
new file mode 100644
index 0000000000000000000000000000000000000000..1d6ffd82d0c546d84bcf115f5405b8f60a9b5a97
GIT binary patch
literal 17417
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
E2OZ6e5&!@I

diff --git target/classes/com/lpc/pojo/SmbmsUserExample$Criterion.class target/classes/com/lpc/pojo/SmbmsUserExample$Criterion.class
new file mode 100644
index 0000000000000000000000000000000000000000..40171d6382b59ed4796400296f02addfc8da0f95
GIT binary patch
literal 2254
zc$}40TW=Fb6h3QDvR>P9QgVUN61U+Jd*j3{gi<c$W=J6osZ>LRctBb^LzuAMHM^To
zkXoRXTJ<ON7qkyNfJB7Uhf2KmM?ue-ovxkD2*JxaGqdMA-#6c$wf}wd_dft|43;by
zg0Co?q;QJDX$og3d`;mjg>!i*!Fdxd<Z*M6Lc@g1CM+6YwS8|*M8fwB*t5LhY&mt;
z@z(3jC=lNIX#)nf9CwrNeE3~!gSR7mSO_`cSK|`X^VQ0@MbEH-%hgG-#iIwDdunUB
zB8=3!5IyYjD~`A3@&F6hdDQ4>8mm-ws#wEcL+J3b@c7DRr^SQoPRo@t{kG$-I)R|Q
zI%LsZ5h7_L5D^b#-{Muz<3Yo9!jR*m>T=uf)ZK2o-t{;9db88&gf~JST>io7bX|TZ
zK_Yh!6)NdF)g`u+u%g-Tj3vUA|Gmjps_4#;2%G)>ltg%OheHJsF84g5j@SEb8ayLB
z5uG()yt3P$>Z$=JHRrpv>aj!3$Z6lZ=5(cha#X&N(=zj3O{vAVA4>mDK_7gXJ|+34
zzZtaoqM%6_PruoD!W3Z`MvCwe>?y)1g)tZ}!UToA6!uY=q>>t3!IvR<HY4HI=@rrG
zJcR`luA)cpIY|bLr1kDNimxf>1#fZSon7HG{H9Czn~;MH-33<}x{l1FD&wVOo=|zO
z%KKEFl(-=<U_X3}@e|zDF&mf%?3Z9Xmt_Yq4$>i8gehDX;{qtdG-d-1!XXVflLjwo
z!H2crY#O|x1s{PK4VXPkfxp*+D_ZbC8oa6nSGC~5H29VlY-_=08hl#|p4GmpT-vaf
z2F!3|=M?xRR%bAe*{{H|XSczyjcv%;Y#Z2%q}K#uf!zVd*1=+Tp~M7?vJKgLBF3xU
zw4ymQB+I;F`3q|p=1PyHwhbA34ykIdA^!&yh|&BrW*#8stYn_X$p+RzW)GQtWbPvK
zeb~<em}U{ouq~;=j{7GnDoO>d=zGY>6-{~;4U?+hVktA>a}&NW;V4FOhEyL@s+Vw=
zrEklgtr@SN(DNft{n$e=*(1sRX<V1E=MwguVyC_fs_*Z(M?ayw+l{O}$&~$rJ-R6{
zk?uz{;U_fVF`DoMO?V2E>}Qx_zeouSamz$PIgwCK3@FQ=gsfbV74dbCD_J+N1DS}D
tYIAtsV*0+nLXQ2`=eCuQSqYhykXec>17FHMC-Aq5I^n+zTtdgJ{{XarfB*mh

diff --git target/classes/com/lpc/pojo/SmbmsProviderExample$Criteria.class target/classes/com/lpc/pojo/SmbmsProviderExample$Criteria.class
new file mode 100644
index 0000000000000000000000000000000000000000..2685c6239e20b4aa70b9f5a802d6c06c8d1d1428
GIT binary patch
literal 16323
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

diff --git target/classes/com/lpc/pojo/SmbmsRoleExample.class target/classes/com/lpc/pojo/SmbmsRoleExample.class
new file mode 100644
index 0000000000000000000000000000000000000000..8655bfc3b87e752c858d532e1c106643c94a97c7
GIT binary patch
literal 2190
zc$}41+j84f6kW$R*^1((juR+tQwpVZY^Vz@&^9K}Buz+hlY*Ht<V}$^K|z*0vdqxH
z@C?sf9{2_xV1~3)I>QI>O$@_2k}NBZ$(WaO+1h*Uwb$9_jQ;xPk3Rui$A>D4Xef9`
zMGB1qrm-xCcjfTj6z*U}<!V)~))d@Tp`sx->k2j$ysuzW!99V(s%QD8XSt4mw&^&g
zw`%LXp4k(~N1t>B9|)Y@F!@pU&Gx`7FztG6(_4AOkbch;C^h%>FZ8;tJA3t(?^({?
z5@Fg_&$k@I7Z5v4;(AGlnJ}d9TXwxkM+OvH)}EvLeUFH@M?N>2hTEyzU8CN0_uYD{
zv)k!?<l5%lFZE8>HZKi;mzD{XYgmruFAJnAiw^}dt8SZ+r<#^yZuL96ruVVFYX`Jl
zL$@F5jN?8sX8g}Aig4lNgv>J2GyUzOI?Pp$3n3ZI>>YD0R~E;KHbv02Shq}NM~16b
zZ)jspRP$7Tm=v@$08C2SIA;7`LZ)0#pjMeQL~_j=F{6p&1ghjYv2)SzO!i}<9b3L`
ze12c=21m%I7nnclv*~bhbXy>6*rv{^)Rx=#40GL*XFfNY?y3|`!vZb{%nk*-<9Yfc
zsiKA#a8|=Sp40F=&M0VVxQ{IjH*rJ5HXaCEo~#}Xw`7v@CwjAkhP|@AyKl-yC<i8s
z-V(>Q4#NJuGErW6?dvCdj=A^6qrJpt)Z6Wmwh!qo$tKP8tOGOX*iBsIqf`VN7inaq
zaD2=%QoCTLn*4T->lDsoifc;G@kLrz7$G>%RG&appCR?>6QmE3`7Q9i$gxNd;0kdn
z#9zcq+-YG9UdAQP0<Yk5gtyG76z5#Ec8Kf{MGdTPAj?NqBFu+g5rSMv)_lyEsS;t;
zgFTR~{*LUgF;p%vHWEa#F_A@7j}bY0h}<ZVb;fM`2N5ZoOkBgOV~FH_86omuERol6
zm0qL4nb9hC#sr54CBv@a^@zb*RE;J<YEPl0@X2URZ62+es7Z@!(kT4(fW|f4h!D3T
z#8UM!^34QnZOAb^dWXzh9(Ff@U5c=?Y`g*Xn=!T>VK2nkPf-x~8O6~&=^#&u%>^6~
z?JJzd*Hqw}M6QK6*O@5STioR#{>C{4Z!`90oOvb6tUiOvPM&HestHy4mXY5j(A5Y%
z&)uMsTk-X{N2@%Wa#)1M$5gPdtLY;>74rWc1^htGe#9((N}Ovs%8<hCU|ga<cq!A=
Tbei=RApa?5IhQ%lWwd_*Jc_es

diff --git target/classes/com/lpc/pojo/Page.class target/classes/com/lpc/pojo/Page.class
new file mode 100644
index 0000000000000000000000000000000000000000..4c747f52f6cd3980d21190db405f81a6e99c876b
GIT binary patch
literal 1043
zc${@n%Wl(95Ixs%;@WW@O-g~9Lc^;j3%p<n>LwCWrSOnab<K^jf`e;Yw$lZl!Vj=v
zQ;7<R1s}jiA!csehg`EcbI*9r%o)$0zrTJ1c!7Nj2KG#}Fk*Pf@QC5DfhPu@3g~(G
zB@hsY0#=a}GMXf-xDYTEc`q0AvF)$2EQpI#vDT|F4vPbUhWqT88cdRpl<iH!IC#4{
znFraCoJW)yOcP&5$1)3<mr1?&6y^fMsh^y9QR;hXvP?W4^HRWA1jS6*q1I%`$S=6=
z9`dXX6&zhN*~u$>R!INz8=02V?2G#K9$li7>#KD0O2V2YtIQ8xhpaYP^?WH$rHu}{
zHa1||uo&75HcWxd8;c0^S>r`AUU={3%fK%%qF-*%MRaJ~g<cvrQn6h|Tg43s9!A(B
z=1~+Bo8zAlXR54E*iy*`HVN%@0R|XS6xhP88{!|(zE{L%t#})^OYs3!Yg|2c&Y@k6
zwp7+8O-FUuURRYJ_{ID2;5)TO8dW2`S|fKajhxb+Ji=uo4TpD0zoI`@ujm~5H}p!P
ze;|6M{!Cw4YZ49!hx9|Y;813tY+c!QFKxT(90EJ*BROq)JGBew)dhBH7r0j|ZdS#+
awc_3SGc>Db*dxv8KWDJZGu&622mb(Z%7~Q!

diff --git target/classes/com/lpc/constant/ConstantKey.class target/classes/com/lpc/constant/ConstantKey.class
new file mode 100644
index 0000000000000000000000000000000000000000..52d39fa425c4ffb715541fd4a61ef7d8f7510bf4
GIT binary patch
literal 556
zc$|Ha&rZTX5XQd+gjzum|DuR;Qx7)5qsD`X32`HalHN<%;F6^!Z6WcoJehd#0emRq
zY{A%*m)ZHve&6ow?AQ0lCx9z7O=M9k;IM!rhT?O-=XCEoecrVP3{^gH7p|pTe{9)t
zDE;v@L#ZA3QSAD$<EptZP-igix}0l^fnx?!lilH+HgSUt=|fuvPRP*j@y^n4%8<X2
zzKm}fvS;TGL#`c+1VfoiUp&pHLlF+#p%S{Cz;l)3hEnsYn2TRz#L(bgFtyaov%FP%
z)^DGW;+5Jq?O+~y;z4RtCAD{{-&jNiTMYI84k6p$IC{g0@M4<SEDRQMBtkADLSrbE
zTBfE>BcT#mDJ^S}E)0~=Ihx4O4*+YZAxDwML6kv(*huj@v6<ox;$n(R#G5HDQ^xeG
kC|0RrB~15Ryo0?Zl5L9lq-bJ?VsR<JF7{|;*iTdkKPoJ9eE<Le

diff --git target/classes/com/lpc/utils/SysInterceptor.class target/classes/com/lpc/utils/SysInterceptor.class
new file mode 100644
index 0000000000000000000000000000000000000000..c7c567d5a1ba19dba37363bfb901be9c2fcd05aa
GIT binary patch
literal 1605
zc$|$?TTc^F5dIFmY-yK^RaCqnUTL|lf}#SV6}f2@LJf(&ZQEnJSa#R5r;0y7<AZ;I
z#9v@Yj4u$>_-f*B@YUOszd+-hZ3Che*ktGI%$YOu%{O!Q<F7aG0rX=gie_}j(1YFx
zj2KSij8gg{=#Sv6($8rah@u|dN}P}2f?6-eFo+=y!x}CzgoiELk|PX(L~@QHIO^m%
zLsQza`K|IomW$hFwnUbA+R2%vIa63luNs50Xn726>727*l-!(AmR89#GLO9}TXK=(
zu5`o@L%l2bq-p2XnS3HWZ$2~^4Udb5B`%Gkl&&#JB2zKU@&{$^$)RoCJlC;3Uhy+Z
zrd=?mv-3PBhmv;*nrq6Ug1xbuk;1YI1V<B<6bv0Z#KI5})qD)w7f?k;nTmeZVl$8`
zOxpIi=UI-;(Ek6Jz6Uu6oa{V9Lq?jp`!`M3Z-Isp4VM|BV~dJxa`ZG@AwA=iiT-g*
zF}{0qKYCRr9lH?MkkWA#qYSY!C7!m^PQkJ%rjBbE(=m<-h7cFRp#t`QdGYe=(%bJ#
zPk+37{_WN3=O@o9s*XuaG3@)B=&NO`l;=Xnb=;siGfFDBjx;7T+|+Rk(+r2U8XSg{
zBMOG+s%ZCwxxgPe;=b{SXE$i7&}&qNOZ;&-l{a0fh;Q4PScc}m8$*n3nAVA9IJu))
zA@U1cu17zXNN(R+olc}Av6d}MYS^j7zf+s6H9w7XZq%Wo7v+pU?t2o+S_7|po8ouW
zh+pFt(eEH^x-Pf#3_aUG+SGD&U8GYnQ8hceEj~&+Kg;u$@SD(5E9D%HqKSTc>Zt=$
zQ%rI<X$Gx~)==jv*lT}#56Q4^tVat;z2bnq*hedkG+N0^9sYy>G+L*+)=<YV7;Fv3
z18WG@VKCGh`hY&NhsYi#dpNGGAre6MTh!lKMYJ`%f>>N9v4Vy*G}a-o99*Vg0Uy9I
zMEukdG*GHWO4@{Ws-TOoj}iI_@>1X?2|znKZ~zAhG(oAtR9}a1*oQuaHXI?y>Z_fY
p2vF1%WjKx?#U8*3vW0Mx_G4f_)kQm{QOE=tf)pT0Z>P^p*Ka>RwGRLQ

diff --git target/classes/com/lpc/pojo/SmbmsBill.class target/classes/com/lpc/pojo/SmbmsBill.class
new file mode 100644
index 0000000000000000000000000000000000000000..f93a5a652952c930c730339367173216ca6548b6
GIT binary patch
literal 3457
zc$|%uOLH4V5P*AS%WKIi%ZhDTN({yiK(>iRc!z{QY{y`b^FYQt6IiV_@|cxYwYzea
zxp9CSRB_}GZb0P*RX9{}po$Y!RKcAe0C#=>f$rJ0b~TzU`_er<+dcD5chBr^_ka2s
z0G@=sH00oo6pX<Ri8s^m7Q9WPcSyWT;yn^KN!%jwK8X)V=p<?+3=(w}Ocidc&`==3
z>I#fi_Vj(dZ0W5=xnj2(7Zez-G0QUSx~aga$k(dpF#dg{?b!8>;kERp8CrGIHA1V?
zVx9t8U>SC&g=XGgt*Lvv<yF>LHx1U*EnG3}*`98-9cJKyDdx8IgQiIl<B|P0Tb|i4
z9du6_j;VWQy>@_G@G-Mnb)4xQr{giJypA(;oTgo8w-3lU?GJs|G{Wt(y6I3FhAuKB
zzNElFX>mt^!8LyTY=yPVtDR=ebhh=H#S>y1y0xP_jO<`?(A#CM0)>iUH_KMrD7WoB
zyIgJ7n(iv55*d;W)7!*tPL&q>^PP14kK-lr8=;I~=xVnh6Fm!rC2^xplcjziS}IfZ
zbmPM<z0J9KC+sRPiW^*yR&>-ACqfUu$`OxXBJ}VpAMx-fvY|)N4TYnl^!G#76`hME
zxi3E!F1;OTpp4sVYn1%3rzU$+7<QHB_PFIs5--}0mRpN7pxa|+kG^(WvRm_LQ)XS!
z?Wp>p*HQJiy8TOK4y{c0o4-QF6>LA{-5$@ly>_~4cO1jqVAR8--F96e3=JNJM>H6R
z2@NJ8kBy=MgL4{8L0*Fbi6V*9a7Ke^5)Z(G8qARYLolns9F68_v;Y&BP5ITp3mYc+
zT5ZoXF!K|9ilG~F>K6ORzhz@$Pt(P7SQBRPUCRL`8ZwX|WPCIeM9uY7pbLR61{%q^
zo(?qfb3GHp<0-hF3+(y8Uf}i_+z&H^@=>(Ps1?-7r5{20p1YM$4)IA97Ex-x11!NZ
zY6TvHvwguoK;k<g_&^%G!h<OI5_%`ddujO)65-ZqKKlvAe9BkI`(D8cG@?Aw#*f1}
z3CMs5@`V)S3H&?x!Mg!SZfW^fP?c{%UA_l{hcG})0}-Y>Sgo%jOt~&oj@L|qr*K?^
z#HI>Q|A(Oo)G9pF)e1Z-MNW#yccsYB9gCb4kq;61UJUZo$&k-Wk%vU&U!=&-AB#LB
zBL9xaf5adcPKJCzimZyre@c-r9*eAs$bTX7-!aI=lOex=_n{woSVaCuiu@wHB)e3@
z;-&f*WA4XXs?+>oP~fr@Bqe|-DJjUR93&-xD3g#>@-ZOO0mvGxOF+^h$gC9P3T((g
z(jv%N1X+mzp=Xsgep&k7jff!Ur68}!-@6eJ<O+gp#DL5M@7*T6Dgn_%kQ-8v*PtQ;
z(L|7&2y!b1gnlfv@s>0r84-j@L9WU(k`X~V2(ljoG8bgznlvM$BFM*5kn8e{jEW$i
pA;{-3AoD>+Zb&nd6+ym~g1j!zNLB>-8bQ8^0a*w#Qspt*{{v-w3Sa;L

diff --git target/classes/com/lpc/pojo/SmbmsUser.class target/classes/com/lpc/pojo/SmbmsUser.class
new file mode 100644
index 0000000000000000000000000000000000000000..9f8ca29e7d7c320961dc801997c311f7de57d599
GIT binary patch
literal 4568
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

diff --git target/classes/com/lpc/pojo/SmbmsRole.class target/classes/com/lpc/pojo/SmbmsRole.class
new file mode 100644
index 0000000000000000000000000000000000000000..9424359dcd5dc909ba35d7cdab6f5fe416e3a6ed
GIT binary patch
literal 2004
zc$|%sOH<QO6vzKbX+ukDAJ7WE6(6NlqT(CG2gt}w(HV-YP16X$q+!zFh-=;Z0d%cP
zoe`aJ;ka|g(Y+r)zlM5llBOlxj&9Dm=XLMzoRfV0{qYlk3CyK1fQw0_aEXb_DO|xM
zJ54chm5FI4t}$_4!VL*GCCmsAjfQ}1bxnPwDyG_8QL1)xWl})DW1G5WH*^8{u4v75
zj843%S`<%ej;^|TqrNFX_RfagY>+3sc*8YJWtKdw(6SrGgH4v4@{fLMV#;V5?zDhd
zX>3_Q-;DQmrfM|xI~!JAcb3$;>CxDlYA&me!R)}<=dKzp0mD_zwiI(+Q`YS@Td7%f
ztF=g+^lW@Zcju|qd}(ZFv+<T694tj+3}t{y7sF``ZMz_x$3Uw)sZiRP!>&r#TvdCx
zpsst|-Wp~*5BTG3-{e~|#b&zZ+uCMk+R<?0VSn8-&$Oax?M^#c?M@fM^)Qf*l@4S6
z4e8c)J5{qc98I4y*gkfJqaSC_$k>fx8ENd2kwKQ4mT?QCGIGeu$TRmKhGZ1jsfZx~
zMgAh`i|WkvZhcMHT-u1|GAK=_kHR#b_}@e}x&ii?IEID8U_T4Z5)woPMSqaUxICQ;
zbUyGCn5PSYUG(e>)l*L-N61o03#8-a4-npZX?sW}JZA!XNy>f#_F+G10S9n!NAWv|
zZz9FFxy6U52fuilvPG6%u53Z<Je~5qOH^~uyP@c31vju0>zh4%1fv{~SQO+w7vw08
z1;wiYNUmJ@0!erUsq!9uTZl2HSQnE?^R>E|av@XB+kt@NbRK~?FX6-=DiujfD1}<U
z7#BGnMSjdhF8>ob9z}jiSkHPO=l&15!d-VFiu|05e3HNJM0DLRsODvlb?1Y1pTal?
zM2dpE=7K0V%>$95AhZl@^#Ec26MOg!cOv~!kk4F@v;2wlM?t<(&G#N4g<v8R+=(Qk
cAV0Vu=lByzMnQg3&95FH#b6@my_ySu0a}nL>Hq)$

diff --git target/classes/com/lpc/pojo/SmbmsUserExample.class target/classes/com/lpc/pojo/SmbmsUserExample.class
new file mode 100644
index 0000000000000000000000000000000000000000..97a0fb3ae92c5f4c875b28212c7d0306c30c0de2
GIT binary patch
literal 2190
zc$}41U2ofD7(H*koVae*rD<Vo>llnJO<)05U|X}o+HPG()-nZ#7*}p$ii=|h+d*uA
zxQ1&!Bz^-IAW^0<i66jkLWuL)j^n1G3ODbUpXWU1Iq$LMzyA5-PXL#2S49yG1=m!h
z&?sOUD{^>K4sT82I#yM#*5qnk!3`BE8gg?}!G?lc3N{to7AUN_rf;~WV+&}Twr#j;
zmhO3mCy<XG=?dN!IKE-<q3#=<!Lh)!<8};p^#N1*o*__b?&+WDbxXH*>n-0k?cHU<
zbWG1T?Y1u<?z4#FCLw0Rl)i6T^(F(EP-vOEw(j>`B3>PN+-SC)Zr$p&>pf@Bskgd2
zUGF{5aBqCBcYBs`ZUDTzLZDp3v`v3SAYEC!Cy-flI)psdG;L$6-`z3Xcl8}BpzXAE
z>z>X$?xVwu|FKCC&KzBkRc1WH-#)0rT;;G3lEKXGq0n+=ahzyV1YM7H%T(^mbk+2R
zXY7e;9t#kYf|dq=Nl6=r4*!>sDaRG4RVGc5T=VUi(ZqQIRq~uTxY%|L`Y~b0man%z
zxuf@jE2QZK<`2ef+MI0N63DhKLuXfN%jvsq<EAO^d~USdMJbww1)LF>9SV5eb@c~Q
zMGep3q=tDsrQvCuP|(zH2U{90V@bm{-Vr!ISw9-C$RekYjHZKzUfJH+Go%s9!I8;m
ziDQ`$L;qfwsIGkN>qke9dGCt{y+kwWoz95uLwd{7q#4hAXatVk#94lnilA|kMn($9
zk6A`)7tB<X&rWfj!f8x#P3bv4%ac`R2+lLrM-bH~NPX}K>3w8=4WiF-EHVP95NDD2
zRXoR?7Utl2oZ~F;0?tQxE6hr9&Q)vs$PQ7|;Peu*SPBs4!>9;Bt|V)I%y5CVLachQ
z2eQ@Qko_fw$_0nl5=62wkwp?5C312fxltk;%(?X+M5Ju8a1AexA(H!fgvi~oL|(#0
zMvW$CM!WcMOmcWpGVNu&5;0hhy3r&^?J<-T-XHDB;MIPV=t+xv((o#!7Xji@gt!$U
zma4xa-%P;Ph8)AIcgU>A%l<ThU5c=?G~NLFwHVuquoq(N$0!K=gyLwObWo>6a{*rv
z?MocTS5)BZM6HFm)`_Ur>)hob{>CW<Z!q_ATzNIBtUiHCCr>pK-GnNA!_03J=xT(X
z=Wfu+mH73z%~N?d<**5jA5%eJSJMYP74rWM1$<A<e!wh#Ox$ZZs*u9fU|eQA_)?~+
T=`{N-K>kzAaxQb8%V_@sfmyT;

diff --git target/classes/com/lpc/pojo/SmbmsAddressExample$Criteria.class target/classes/com/lpc/pojo/SmbmsAddressExample$Criteria.class
new file mode 100644
index 0000000000000000000000000000000000000000..5c814307db12c26f7e1d20a8e4e202a2222562ff
GIT binary patch
literal 13421
zc$}S?2Ygdi6o>C?OH<l(B;BQK)DEBwcNvy4jD|8=s^UzWM+u}!Nm7Oj2jE^P%2E_i
zP*K5EMa8{v@4fflThaT^czG{54^D;O?<@D*``!EAdFS4|l%2b_?+`+aR5oXdWlCS5
zAJ88d01N~M0eb;^1N#6KKqXKGR0D&7A;3_e1{ekm2SxxRfqjAffc=33fCGVpfP;Zr
zU=%PK7z2z24gu<baX>vV9+&`31SSE80uJCX;BdeROa>Z&DZo@<8ZaGb1e$;uKr?Uz
za3pXPFcUZ$I0iTtI1V@-I00}0EkG;a22@}c&<4x~Jir`aF5m^)0UzK8I)HgV00;sh
zpc9x6EC3b)i+~e>lYo<fQ-D)}#lUI6>A)GlnZOcYDX<JU3pg7%2RIiv4>%vV0Jspi
z2)G!y1XvDS3S0)P04@iv09FF4fYrbnU@dSZa22o)xEi<ySZ`4_T9j)Qkv_`f^MuAI
zBDJEjSrKXVez&TKT&KsUHgvYPsDUO|i&sYMPJgS*+w2N>(2fSvLbE+VMP$?mJRw!~
zD8lOS`P4wY*A)z^vZvbF>Tj>{cC^-X_~-a*8rxgigLQ6qKn(^bEOfPZc-28Mw^kAP
zE}wfwP&V8R{?Irzv_MsTikMvCoa37Bs`0vfZ8c86udOz*UD>Tw^0Za7C35r&J7i#V
zbj{9?$6Mp{1Vi0iBTJhQvz2KrrySli+vS@Qm@u!?<!$oEm-@fAV@sM`5xuq8q=4#@
zBNNsvp!yT?uMLjpOAFcKw-=N{8#=vSMGUFv-i7DtCkf9`EF+WsZqKYmZh28u4TPV^
zc-dK-*zVri1%{QhW$cL;fTx#h2qMzQ5ZTQ${lAx2NG_m={)RaHY)j0>5cxF}M7&1}
z7a4Co{;cy8JHpZUWw$KSKRvrHt_AaqgOS&4T?p-RU7N^qKGCg+zPc!#p(1)j()An4
zJr*ZYCNDOg8JjU2j+M$-Jr?r#eTkJ_l+dSj6eLT?i7g?FSigiAk*i{pA&MB7&_m~}
z%zPAie}-i1`wVqzxRH1c3zNITacwTuZ7i^SeTNpcB@A~&PkJrph#r+%fJj^c)vrrA
z!gR`tO@<`jhoPdi4lP<}xaN48><RI35ZkIr_3E=TP5%kg7z%idAED7m_fDwn$THd*
zS=zElYDT0L+tZN_r)REwWf)6bO!t<~jLaCBt~lCAesDR)o=6GH0R6CRNuBysYQv&;
zqqTFRHyVE^RxP5H@>G8?)GA-A5|6}K+;Al72FKDD3po-zEvLD<U?ftmkI*M)Vt3@^
zj77~)PGUsTZ5mF_SlqCsw0kn1oVsv0hC?D+32rsms?T7dvCD847!^k}wYsPyc>*n)
zc4Ise?3)lw&S?=nLJ<Ru9du?(O$Sj)FdPlKF2mWQzukD23zB-YaJ}Cba<zu^Nw&qq
zS}fNv6q&TfBMzgaB{e4=iv)V<0?Em=C-+8PyP`oliG}2V#G5nh`Doa90!MEpp0qqe
zG#o+}9ER^H)^J2?X2u2}C6;i*5k31I)c1gFLr0_{947DYd5L|x>(K^9uE%g5I`r@B
zS+PK*)ux8xU*qiZT|VIpkeopdsq=c{qb#0av&-vohrc||l(*dI?+mo66FvBDSVA1*
zLougSoF&e-ii^c1R<RtoR9t2iD}c+z6;`nlSOu&G)&OgPE5%h-u@1OeTw@jMfep|$
z0@sS`tYQ<e8Mq#}0k{#^0_`T?W-NINuoc=i;8sk38*n>t2XH6Q1>6PgZeTl>ya%`!
z+I_$dOn*P{0PrC25b!YY2((9m$FSt%z!T7(1a@Njr+}w{XMksc=YZ#-y#Tx@Ub2dp
zfmfit3cMy>w~9A_H-Wc+w}E$ncY*hS_c6f-z=xRNBj969@CooKhI|Hm4txQ8348^7
z4SWN9iwV91zQ+VV06$`apMak+<QL#q;5XoR;1A$W;4k2BOz;n|3lsb+p$IvFq5vs!
zh>{AV0X=|pzyf3dJ%LO)fszGSWjd8?AO{oV0(mlZiVd&>`9J|s2oymp21=Att5OE^
zQpzpLCPh@T-$E2IVvl1dsXjG;ceA);BVzsbG?C~pmWpKpf0l?e>>Z(qbMT8r`BP?3
z^r-3*$~O6r6mhO(ru->Vr-`)G>Eb-uwnhet^TkC%<kex{MJE_8QsrMEELGKmyF|)X
zZHja#sSP^aqUp;`^i-ZM_j*(xCP$}WbX9eiNZXyAuGuSSy9dvfrwe7L^X!$hZQ<Fg
zXgh;vucqyuJbMjoXY%Z|w4KGX<(VC|Yjovm-JKjS)pewt&6DM41X-v#yh2@XqUZAT
z4RodE@v^p&wrxCHeiBl)oo8>N?R=iSnYIgf_Vu(~$g^*t?INCiBW)M+>@8%emhejT
zCQ>ft$v2xE$Ys1jy~RZD#nZRam0Hfr+BVwm&9iT%Po_RR`!?F{%d>B%?S4G_4%+U|
zv+tzs0X(~lwg>X;yU0=<#4FXiNqH}xyxrtL-kVpb_n7GW@br7>O0D2!?LOMB<k>su
zlc|bl-%s1sJo^FK9?Y{Jr0pR*`ytvM%CjG)?HZo_2wAGbc%}L%DG%q#kC`0EBY1`S
zxQRZJr$0eg>b|_JJxSa9@$8-S$+SPueu}ma;Mq^p_JKV68QMOGXFp5Z2lMRbXuFnY
zKTnqGC|;?)K+2<e@{8gnvQWqH3iV|ZeJoFZg|5^?cv*Xuw(EHIYvOgv9>=rapzV5|
z{U&XX=h<)3_5_~&Hf>Mj+3(QyB%b{)Z6C_B-=l2@&wiiWCWrC1$p@r-I8Xl2WRo~~
zo8%)CeKJq~nBFA~ysUjf+f#V<r}Pt>%CkSC?P)ywbK0KHv%jG2MxOm8Z8!1kuV{M)
z&;FXWn|by(w0#86{+8S(NAkAGccgq2PyXIylg#98k{?X;qj~y|^e#Dum$jd0`&gd+
zGyTMl<JrH^_VGOXSK2;-Xa7dqE}s26ZMX33KWMv^Xa7mtZl3)YZL2){Z*rT=;%$?E
zNV$zC?=smWvw553UlZNK(q)6(C39F=!+&j2_FSHwLO(Gt&rYT7cAlL^+diJ%gSP!V
zJDs*Wc(#SM=ke?e+79sSp0pk0*_q@v39+^b{!f&UJ9)Cz<QE6?d7C8LL|?$ubLd^N
zke9Vw+Fr!7^XPBTC-Q6?ZJ)%m?X-O|&(5dqQ+Rd(ZJ)}s3u${X&n_ZM^)z0o7L)Sn
zJh?<ECFC=Bav3R~$&-62<%GOs%bsPCqVx{4kGN3&w9D~Jl?~zo(Nio_HYnGnS^onx
CBMB=2

diff --git target/classes/com/lpc/pojo/SmbmsBillExample$Criterion.class target/classes/com/lpc/pojo/SmbmsBillExample$Criterion.class
new file mode 100644
index 0000000000000000000000000000000000000000..0c8319075bbcb269feb90a4e3363e87fe09edbd5
GIT binary patch
literal 2254
zc$}40T~pge6uq(+WZA}~d?lm_PG}0YFt|-<(j<ho7-%4dc51@3>DS0+hc1;Rk0tW)
z6Y>-C3zCOCv@>Ct=|gAw+8>ql-qlt%VkeWl+`GHF=bp1iSN6ZJ|N0vMuEC}SL-09;
zn-p$QxJ_Y+!W|0B6u!tp0lqZht1NC-DAY_?Ghy8TtL1xpA{4%7z)1bTdFWJK$J?(q
z!mjZ4ZyPZ1&~Xp>$%o%G4|prYhq-_gem5#HJzuSi2lNaZxLlp&n>>8Pxu>?4D}qq1
zbK#Q?zw3B=F7IODJ`Za>O=G39P8F;9dk7t_3y*Ifwwt`W<1}3<({DNMuG1B?SBEV8
zO$10<>xz(fW#9aU=kadMb%KE7qjJ6Fx2tZaRqgl(eznnVwu2Snx@(V}cE{ycVkB~B
zP@$53QeA9I0V^8)&R8PY{@<H)sf_LniJ;N%PeBALCmhO&px*O{I_~t_G`J)@5iT1r
zUOMehdDnoOn)B0I_1K|C=(K*{ayrsKIVxYvX_<Yerqtrz`_jKv(0gB|Pf51nA9h=O
zUC<<qC*SM>Ve&8xXY%j?jO1aI!WfL_VS>V03g;+HQb`5w;>(achoNw*^or<ofx@B*
z8|cwHPLcs<l6p@ZMc0(`g15N%)~;|Fzv%-0CS)K*cfnPPt|RlP%6KW6CsaPG@;Q|!
zC2j}|I1e9UynwqZW&`tp{R)gfWZ6ZGgLKHIVG7szr~ryEjoE;Y;ED#EN`hy!;E%Q7
zbP{Z9!80(c0kfA0@PZax(t-z);Hz42SqmOag0E}AwiawA!MC*FIqj>;Bn?~EfEkYL
zyaIoZ)hWzl_AyxY+z}YIaReEg9Rd3@?lpl}U@O2_4J@__1-1sGY+d%Ai14a6t!NGn
z$+DnWUSJKwT<Wn@jv!^vBUR-e$UcJ{F`CaK<^f_(OXg{uY+xJ6yot>BkhzY`TX3Fj
z!!-LAX4!XAg&p;eRg{zpTG98Ak}I0@G#VyVzrj*w!Y3wtYQj~F<P534rc`g@E=}K-
zJy$V~A=mRGOa0h=FxjqTzZBKQ?3tK7qu8nMqU!q;_vj}SPrH$}Cz-N;utzrqCer<Y
zCOkkBenb;~LKA+5N%jj&v0tTx#i(U0p%_aj#s(DSPeNL*$cpH?pD9`Qu>+Zik}C6f
p-+c1EO~|lTpW9YUX2oPyOlB#v6kL~mZs2bfb;5rcSVhOI{{W0vdk_Es

diff --git target/classes/com/lpc/controller/SysController.class target/classes/com/lpc/controller/SysController.class
new file mode 100644
index 0000000000000000000000000000000000000000..9c5f3a023a6cc84f254928db3cd93aa6e3235a48
GIT binary patch
literal 11076
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
Q_?_z;ui^cF?u^&}AILtxiU0rr

diff --git target/classes/com/lpc/utils/CacheContextUtil.class target/classes/com/lpc/utils/CacheContextUtil.class
new file mode 100644
index 0000000000000000000000000000000000000000..35282a0612ae6371e6520ff95e02450d0f74be50
GIT binary patch
literal 1313
zc$}3}ZBG+H5Pr5Tt-V%3v=vYhe8ILLXM%}|MG|Z@F=;SL?f31mmc{Gt<!&p;ukz)C
z!4Libf0S|ddSGoEBOh*dW_IS8XJ_Vq{`&p{zy@3gS=`HG3M&QNN5zV24z(Osb68`T
z^K`GL)pij0(&I*I)zHd_Bg62psl%=t1))^kcOmbILmj?%y}`9Ro>6DWZb~K17DKvH
zZ8KyVdQUJ+H>DCg{a#0eE#C3TGuzZ2_uD*_)=r!mvo9ltr6y5w{lIhkM*5N4;NHGS
zO1vcxl_^ESOk%uIIWJ|)GUuJ<JI{|i5!m}EhX-`i73P`XieaVFJm4R=>vPq0ca6ob
zSBG4$ItRjwJJ6x{mwWb!V+jn8C%_DO8a|Jr$+%OV&ySB8E{}yXl>hGL$KbT1<<a2H
zR;#{68Tnn=RowJL3TkY&o{U%A`VXc9v?@tz-LCG3o_HZ`-O}jH)@>%k{F}ZqvM1Uy
zl0<M@DQ)6$(AaAeM;93p3T@~~ZbSD1t%Nf5A{-QoxPW{P>qV4t&58wv#eZ)O!_4SA
zX=l#2G24gSHmx!#%Z@&B?ZQN7i^Q;gz5-aLe>DqQKKdN{NcxX6v0flqB+I3f(K%K7
z2KJeh6fTm?#?EP6B3T>+kTpXmtqo==$|gT0D`oFizasS~*@>Mcs#J~v%7dT;z-m{B
z3B%QdO^GaOe8T7vMcabT7o=(@NT={=gx1m!EeCU$r_&-VB(z>59ak(^gw+#d(lJDO
m2x4uBSRsM1+I8HZ`<rL**0V_3t(d|Reao?S8+Q_{yTEUuXhw$s

diff --git target/classes/com/lpc/pojo/SmbmsProviderExample.class target/classes/com/lpc/pojo/SmbmsProviderExample.class
new file mode 100644
index 0000000000000000000000000000000000000000..3c33846c90f8996f0799cb1c5e712c806ff324fc
GIT binary patch
literal 2234
zc$}41TXWk)7(MHoY(;TX#|?y*KxhHSE^#3RT4GF_qzNf*62?p!@}}6Dpdd>gS?<ul
z@C?sf9{3GBzzm^NI>Qg>Z|X3dm1J3Q%%pkQoA#XVd}qJi(bIqb{s+JkK2?!NO~HpM
z5~$@ciMnh)lFh9N+{TK^(W)G+DY&CTMNLlD6>KQ@Siz=(y8^jY*Yph6bZh}_)3yzF
z)zW)CqbHCJKj{iS5jekL@T2Y-?ZL9Zq~o>?cjX}={hlFEXdLJd^s1%X`_-oBn)d!O
zY1(GbGwqfqAa)tVapM$I0i^GlR<*&61mv3LzO8$GmyGq1&$UL&=~S(5tJ-xAoNBYP
z*XixJ&I6M=?tHCxx|VTeK)zfjS*B*%rdJn8mKN>{q*k3aY0ouG+t})N_6+wkeb4fx
zJ1yP1uM@|4xR~<3G-<@;(}Ob7RL}6XkNa_<bkY#1Vru`y)?#U4oOu%@U5ornm3Adu
zHG9J~=0#V}`HXR63j@NqwYN?zp4rfZ;|f$uXMsu0*;b_N>RGS?i`0B3K)&S~tkYPT
zHa)%d)jhrIA1g0|z|8SIn>IUJw*=BH%g~vj+I0GE%UCyM9n6jkxhRd)Fo#zJriZ59
zc3u6UbXLPlxTs+UFKBoXvkDp-?qN&A4P4i-jU9pV^XH}ErVKQHDuUHDtfTF{149-`
z(O)u&kX)8|7}R&=x#P>{Vd?bUW8R4T@p@yy>h1Q()d*xR%R)}|%tOPk>P^h^0n3BM
zjU-aiNIrZi>80P(U4Fa7aRM)6f@2;9+gG`=LWE#HRel6feuBgokB~e<>JNYSJli~X
z0B@3~ME(W5#+epia2Z$F3%rguLcTgt3HF(C<p}8^i|VhwgESvx$uJY_3K`@`s^-JT
zNTrag>d%36`A?*OkEk;KVl5^l9SK=L`Gk;*N63r{Stn-We}qWeWZ(*}juDdiZA8e<
zSRrp=k-J90snINU$AE)_lCW!dJ5;b1W}``x%3~-Ad_I~}n@4NJa?+xlG#bC;%eaQ?
zA>&raSSbI6Y$HZn8EOoU-lj5#huw{F7eekd3va;vZp3Yc+;b84W8?&WMSe6+(vMSM
zaRG;9`v&LnEgkqS7HckwH5<lykFzYqGh9;eKCw5V$SYxF^$Ao~@<bz+P2ke^ME($C
zS3~wJXM;>`M%UvmSLN9hgCsP*M1pl)P9CeNK>v@(;U{|bGp6xN>|BdsgakhD+hy(t
WFJ+RRPBPyd<p0Ms`y%@bDeXTvrN)H-

diff --git target/classes/com/lpc/pojo/SmbmsProviderExample$GeneratedCriteria.class target/classes/com/lpc/pojo/SmbmsProviderExample$GeneratedCriteria.class
new file mode 100644
index 0000000000000000000000000000000000000000..800927338263782d0c26a9382e3fb12f46610314
GIT binary patch
literal 24120
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

diff --git target/classes/com/lpc/pojo/SmbmsAddress.class target/classes/com/lpc/pojo/SmbmsAddress.class
new file mode 100644
index 0000000000000000000000000000000000000000..16caf5b20055093d80bea7da44046d592d2f1c81
GIT binary patch
literal 2664
zc$|%tOLH4V5Xb)`TUu$ge#n+=`~X78L$;F$2#-L5!Pt42$a%@hnbm4>)<{~Hc1;n^
zaOVTS8IDjDLlp-qH>xPO^8w(V4?uwK)p)fY&z61Z$8`71Z@Xvqw|{^B1;9nzH!+IU
z0!FaL;;M;jxX#uM7V9iNWO0*4oy7)=TP$uHxMSe1fqMcOuO%>E-?l%sYi+x`Rjd2m
zt;+(2<99>b2?Zt+!A98gqHxh}wR&z4wA{cE$nW?;==d#HU?_Ck0tKh%+M(NOJ`%7Z
z+w;3ET8Yov4ZU`4jaF#0e8+EjA3x$`vv2lObGw1tW4_!Kuj_@&w0m{ofxz%;bktbg
z>$<mgJ59H@X*b(0qxz2Beqi@J_T}Pm_|OXk=IV~$skL{U+K#{N*BYH>Cs^r!1R-R%
z+;E*vny4-u?nO4}2Pdm)jA=|NUEOb1`9OW#E;C5vRH}zlc%zX9#Xs4wcOvj;Mh$^c
z+I}V3?9o73C{o6qcmTy9>E$T4$rH&1(y$meF`eLmJGLK<=M{G(IkB-oP22CyAd5eV
z(Kh1YGTOi!iDUg8MuLNWf#Ub&1t<gq+idu|J;%M~@o-DYIbL7_3(w;P3*#tRn7}0U
z(84AbER->6p~7N{#WW{8hZzgAY|XJXkCMPl>OG;$I~d&U=C&J6JX-Q7lkn`e_j&);
zjjJQ(i`erzc!?h1D5!-nkzq`F&KV|+bXn?()KgMV%RB;(^sMyfq(2||7221+p5%+<
z)kq7{*~OnAeu&aekjzDkIRXK!egaP7WzqttaQaa3V`RQpia*j8pTSvKyiC~{&R$&F
zLuPQa8LhUdrW5Tj)z6YUu*Lo0gR5B3fDEZ1pJ_oBu_TKhN|4gx(yuVYw=kA|#PA-5
zm}w}%^aY*#WrC>`GnJy*2%IB(2AOpO=l`S93~2)wVl4<%hn!WBztSSVawKwAMgE$Q
zzezzZ9}oFeEpkpp{!WYh+L6dP75OnC@1-DDj)#0vi)^UKPqfIdABk+J$iEZvA1TOF
z$3uQY`>66N@}FAdH}#JyuRf~3sOImKM>Q=U)mylv0V${;PqiR#;~gDHK?V7TYM!Nl
z@ZXCMzO3ztsep*Q7UYV)Bc=i(%E*dJ3dpSN$h+E(6jhKDT99RZM~W)QIRZJK0x~B%
h@}9OMmI`u73-Z3cBbExXMj%&HK;~sfR-&2@{s-I$bwL0C

diff --git target/classes/com/lpc/pojo/SmbmsProviderExample$Criterion.class target/classes/com/lpc/pojo/SmbmsProviderExample$Criterion.class
new file mode 100644
index 0000000000000000000000000000000000000000..cda03c33eafd697ee7cfae4b59e8beba0f4b62c0
GIT binary patch
literal 2270
zc$}40T~pge6uq(+WZA~hKp;+9+z=9sY~v)*d_f?ML%vErW}GmczR6~XE|n#ZBuM%b
z`V;yKl7~FBGi5T9hs^Y~KdSA$tBq{LP8(kC-Cf;t&)K6Z`>(%0d<1}Hcx=HK+@Nri
z!YvA`6xJx*rm#+7BM&9GW5Tz2+}x$mGGWt%`vzED-`f$9@I3=gZS6S+PSbU~-DW!q
zgtxnDz{r8)?(?G$pLO<lH^PU7kQ078E-^h{t&AV&88&daIw^K|^ony&Z7o-Xky;m`
zpZolw<L$USz`|V~wFa7|s*5^RtmW?@bbL#A{ONwL!-E%2$CWbuuH$YyfuOxQWYLcz
zMAB9uA|A-T#YdjUgO=-rA;(9Jt*+l|y8Ujm@9+7|cCXV5p9lVd*x|wEYp2(D`Fw&#
z{v4`Q@{cM^tSMndd)OUIgik;DldUeILt`Rr4|`M+;oT!H6-2l-@QFIU7`AG3O?V<&
zH{f*jxJQfI2Hez~AJ?kKj<qAF`_mJrFFlmw@<2|^!e=$57T=we{yzns_%cIE@@;=V
z=<@r5rlG8RyGw*C!Z=J6;R`rbgh>ihaJmT76lN%#p-`rhIy}S|BDwY>;Wp_t(diO}
z6%!sAP&>gy88DI7edH*<uACdZ&H4ZB4CnD1FX3-Q4l;BnTxIB5GEb_Emy>x~<r$UF
zs9ct~F)-jPoWuAf?wXhl%p>+6VEiV_zQQ<4hb#-TxGu&8P=Ptj23&x74LFkqn_BQi
zEjXJ77qs9@u%H36cPa3=7F^YWN7CR)EqGB29!-O1v|w8cHq+p9T5wJKs&Z+=DjG1u
z(QPR3_gJ05JY~NJ%dQ=QVH<~#v)LiA-;-X`hy`{57@G%+U4#<51e0t*_MVRMsyD4@
z4h_k&q*&f!4Z~a=u+$GBV>ghh{wL&rg#s~}Z(`;VV$MqDIh<@@HZs?cxsJ>YWL|=^
ztO;}M3M{Z?sltx?Cn~B+1+D0N$jB8<dKL|ns{g@KoW{#0TruG)MskK!FDuoLahIiU
z%dXXp_fQ!4k*9v_8kp?5WdAy@OW1P>drq-a-xbyO7u=(tP&w{K)-E$;|LA~j7EGkO
zg(j?`32SJ=Z8TvW%4`E>*&QiiC2pBWs3a09i2)V)laQ4wvLe3jH%it^>_8@>q<RDI
pTTI`#1vz$a$Zabjvl22ZA+r=&2Cm6I*YUTCI^jPK+(XB#e*wYzeqaCq

diff --git target/classes/com/lpc/pojo/SmbmsBillExample$GeneratedCriteria.class target/classes/com/lpc/pojo/SmbmsBillExample$GeneratedCriteria.class
new file mode 100644
index 0000000000000000000000000000000000000000..1502e6ed94899b6f8e414d571b3f9ef08add90e6
GIT binary patch
literal 25995
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
A>i_@%

diff --git target/classes/com/lpc/dao/DaoSupport.class target/classes/com/lpc/dao/DaoSupport.class
new file mode 100644
index 0000000000000000000000000000000000000000..6f5e617414d89935e0261a7f038735a321677b88
GIT binary patch
literal 3326
zc$}S9U3U{z6y4J#9hyujAB|EFM1hjhmQh4R0@x2Itpp0Bw1|LCC%5gi$;>b_DJ|j$
zihslxUd81?>w~`e;Q#PP_#*B*8PcRA7`n1@?wvd5oPE!peb3Ba|NiznfcNly5@~$g
zfo@z(B8N*!T*joFU6JN$2d*KX!W6EjFpU{$Zlv%Du1IrJnop&<CCzOaaYvfZr1@ML
zL&dBLQ$<0+4*za3FMQu}>?u)li$)+69L_o3yk1(JH3G}meb=+>c|HGvV^%@WwXz*p
zB{6OJ)@)G>+qM%h$gzC|dvc4$vazBY)kXc9@SU<}%E<Q9mTd)R6~r=q(+c9FPJzf>
zIm;H8%cWW2O&Ltc4dxuvC{7!mC9k8!c(7m*VOP#{N_x>X^@8E(=L{!bc3sB{m_F_s
z%XB=M2{)k^4Ou}T3(3~3OwKL}GsyP6xWs+=fhXZ#i03V5cCr3eH7a?2#T0JHfC_G)
zgB+R*`EWBQnr@~XSVcW&`AxPGCmze)w$Yg^mfb@5$WkHB_2}wQD@bHrvG|{mY+3gi
zwtZa;V}=<x-l~GZPz#1@m<vL;B1KeuY9tZ4O9Iw&DClh|m{Fbiz%Z9C8E*K1Lw(Mv
zm{+l&!cwvLyufp!C}e@{g=o?_XW4}@$E$Efx9D1y$jwAoOswEmOImoTPqfllFH3@S
zC6<k1nfprSL!pmZQm$R=(mX0774(P1R8H2MXOzS}$6M0<KzPClR$al9;yS(+a;jku
z-q7$mcBxp>P((?Et-*n-;V4QP?!r^yYY0##VH%ckkKAc&Br6(Lai0`w_yP|!d?^!s
zCC%5;49Vzka6rRDe5>I*JW}vl<0D1&ZLFDf)%gxjD%iR1R6PiFp%n%dY^_%#8F>Yn
zDLB}QcincT7Ch%(rF$G|sk>2RmhB5!`r+2P2oKWs_0<VG5c7g9L=7b|IY(|Y6SdNb
zJgA-Sc@Z?IQqT0g;_2&c?tXqnm}R<6QC`&P$nezYxPr_}0BR$cJLR~-u2Oro<;a_@
z6_E{J1>`VBG8ClixvCzsuDN2_UtqfkL`m2I+v1K)UxUU-X_hS60?eW?yitkGs?DO~
z%dYIReVD<dEl+A?UQuE57Tw@|QHvL43>(dbO*Wd^v`m!6Tl@k@gSz3rO*R0IJ^Vsw
z=eV0=k|TQq?OtB#92Jg<Bfmg-!buzUMb3bRH$xjbU_VoX^S5z;UNZP1V*CM}M}9_I
z|G-nkentGp4M}!~N%mJ9qa<>65QoD1o#@43Mr1gTbES{}Bj|q>h~EE&7{K5Lh@;J`
zNHl;rwuvfqyi<Wt&TwrD@7NOJDcUa&{sc9)hAlCiiVysWk=TjEz#2NJrS^0p-Tni1
z_r&`L(up-B+pvaI3^R`s%HwB$_r%wrDVULCCm$?_t(Bom!DDotQloi~`o|NZcVh+y
zkqwyP7z=AU!Tkbfxu+p|j8G$^<oq169EUN630%Mxj5GEk?#PcnjwM_QIT(jZ{q*8p
za*`m4`}oQ@MwVDzl^46piycwF1#>u#_le()o5cTsjGW~C14ulhQB{1X;*^T4iqk62
zD2)9Fd(#st&Zg=}{iwM#wl#QeH#Q-Sq2|(P1X0+8G={4X;}JyiImGsj`Q4iQ$!h*&
zHGi@}{*mVScWli6U=#UADV9q9+gwX<OjYs^KE=+B01rce;}y3mK&lFmiU8#7JlA63
UY>cyb4QLxRDf5n3yV(TrA2>|ow*UYD

diff --git target/classes/com/lpc/service/SmbmsUserService.class target/classes/com/lpc/service/SmbmsUserService.class
new file mode 100644
index 0000000000000000000000000000000000000000..ce73d3b908649b13d86d8f9203cc419d209bac52
GIT binary patch
literal 1938
zc$}40TT>iG6#klB*ku{AT*8`2VhEDBu)t`D1|=rk4Q9ERC1AWfG_wsh*_|0@W+Cg3
z@y+rzsj@beSY_qeXa9{=mfsAsixTki(x>~(xqRn4r+a?=<K-^^rtozJ1DHzTW(IAT
z3YYgY$l`+xZecpyeHiXO>cn}>q;b0oALC96cQY_B8!mGx%%`xBK@S$wSPH){r|?M%
z_XHAU=?L@|EvIT$T+8IqT%22<5xDrEW(T^ewzRKzDr(NQoj?ZKv3-H*qT}tEzUygw
zZ`YGmb?A7H%^f9e-`tf};COXYwj9j4THqXNPn8+A<F>YSaEF=mqgw*W1*fb8vPEsH
zwOVyYd7F~i1p11OB`aIf)8RQ*CWCJ@(+{`c`pP@dmNHA#ovQzkr_zyviP|g9p0)*U
z<XhIRv+o?6&WxV*L7>NP9+sZSsvG9Ma)xzmK&RBM;}x|Z2n-bW<$*M7fv%Wyo+s;}
znifK}zEz~XXD&Ullp9jSZ=J1_0vFCk)?Esu^>|gf5hZLZRlYn>?qRv=l=W_1VDRjU
z$#_?dyLG#G#7?H<)I3Wq>#)RulQd3-PzCa*w%ZSsr<|bflKz-=18-tb;PO8*WncwG
z1FKj|Vcoz6J~QwDYX(Z;E{8YBb<2l^y2_jMRYh6Bd_4}4!lr?TU^V@x5N%)^pBs3D
zF9dR@Luoqxy$c4u4B;0}X0N$r8L0XChNr92tKV1kQiMkzu$Zqx7(@RykQ}MwgzG!|
z^cFa0d5VD-JWVP!iB2DHjTPHg-a<wCzT(J_<<FYdn39pED`%u@PX*y8E4o|f>3W>I
z6og%*(e?ipjyF--<z}>{Z)>u$$rs~x{`Hvu17S8s=(0QxQ<;s5votlWOxY7p6U*Dx
zc6qsZ*QQTFQas7^%;@VXJ}18ZPDL-#3Rgnn709ogYMKp)KZx$$rYFOGb{tIwuJYL(
z;5#k&E^~M(FYwesd66<f$veUI5>F<jplly|4)KheHe8O4fquNj)i^T16%0i|uVOfM
z{*A$sl%M{LwnxvASRHR5S!kfWfewmP1L^ItpU~Nt8GnJU1YW^d6B9q6f1-iz?_o?N
z8aVd~*{44u9s2f)r%|rESm2)_5h1ybPOg`b=4p_43dC`XNM<oYt6?nSZQR4P2<c6t
zOk<jw5!O*43D@YKpiL6*AWt2!#&v|dQH(KPf%^;+zhjpFr12y*6PS!EtkXL|nTyKk
zE4)B|0^3cv&my$l#M(rgBLXmLH)HfLaxcb-VlqNEM4R5fAj!3m<k*HLk`&rDA{Yt0
W8@1!TR`+gD-jBcvQqaZ%I{yS@59!|k

diff --git target/classes/com/lpc/utils/RedisUtil.class target/classes/com/lpc/utils/RedisUtil.class
new file mode 100644
index 0000000000000000000000000000000000000000..6608e0d7b78f6298706c61b53f78edd1856ea771
GIT binary patch
literal 18429
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
C=qEb>

